<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雷德麥的藏書閣</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zake7749.github.io/"/>
  <updated>2016-12-18T16:06:51.931Z</updated>
  <id>http://zake7749.github.io/</id>
  
  <author>
    <name>Justin Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>聊天機器人的開發思路</title>
    <link href="http://zake7749.github.io/2016/12/17/how-to-develop-chatbot/"/>
    <id>http://zake7749.github.io/2016/12/17/how-to-develop-chatbot/</id>
    <published>2016-12-17T02:19:56.000Z</published>
    <updated>2016-12-18T16:06:51.931Z</updated>
    
    <content type="html">&lt;p&gt;幾天前，我收到了一份來自 San Jose 的 intern 邀請，對方正致力於用深度學習的相關技術，來開發商務用途的對話式介面，因此特別著重在「潛在語意分析」與「自學習」這兩個議題上，這剛好和我目前的研究方向挺類似的，而與對方攀談了不少開發與改進的方向，趁著現在記憶還算清楚，趕緊把這些想法記錄下來。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;u5F9E_u6700_u57FA_u672C_u7684_u51FA_u767C&quot;&gt;&lt;a href=&quot;#u5F9E_u6700_u57FA_u672C_u7684_u51FA_u767C&quot; class=&quot;headerlink&quot; title=&quot;從最基本的出發&quot;&gt;&lt;/a&gt;從最基本的出發&lt;/h1&gt;&lt;p&gt;在切入聊天機器人的商務應用之前，我們先來談談怎麼開發一個聊天機器人吧！一般來說，實作上大抵脫離不了這三種模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;樣板式模型 (Rule-based model)&lt;/li&gt;
&lt;li&gt;檢索式模型 (Retrieval-based model)&lt;/li&gt;
&lt;li&gt;生成式模型 (Generative model)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下來，我會先介紹一下各個模型的出發點與實作方式，和往常一樣，這篇教學並不著重在深究每個算法的實現原理，而是會專注在應用層面，告訴大家怎麼用簡單的思維與套件來實現各種模型，也會偶而延伸一些自然語言處理和機器學習的基礎概念，算是綜合了我這半年來的學習歷程，願能幫助到有志於此的朋友們。&lt;/p&gt;
&lt;h1 id=&quot;u6A23_u677F_u5F0F_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u6A23_u677F_u5F0F_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;樣板式模型&quot;&gt;&lt;/a&gt;樣板式模型&lt;/h1&gt;&lt;p&gt;先從樣板式模型說起吧，因為它是最平易近人的，我們可以透過設計「規則」來讓機器人知道遇到什麼詞時，就該說什麼話，打個比方：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;天氣&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; user&lt;span class=&quot;selector-class&quot;&gt;.query&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	chatbot.say(&lt;span class=&quot;string&quot;&gt;&quot;今天天氣真好&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;簡單明瞭對吧？不過要設計這個就得勞心勞力的寫規則，還要考慮到規則間的優先順序。如果你對這方面有興趣，我推薦從&lt;a href=&quot;http://www.alicebot.org/aiml.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AIML&lt;/a&gt;入手，他以樣板語言的形式來紀錄規則，就像是：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aiml&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;version&lt;/span&gt; = &quot;&lt;span class=&quot;attr&quot;&gt;1.0.1&lt;/span&gt;&quot; &lt;span class=&quot;attr&quot;&gt;encoding&lt;/span&gt; = &quot;&lt;span class=&quot;attr&quot;&gt;UTF-8&lt;/span&gt;&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;pattern&lt;/span&gt;&amp;gt;&lt;/span&gt; HELLO &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         WORLD !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;aiml&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;當你說 &lt;code&gt;HELLO&lt;/code&gt;，機器人就說 &lt;code&gt;WORLD!&lt;/code&gt;，除此之外，AIML 也提供了簡單的記憶語學習功能，官方文件寫得挺詳細的，我這邊就不重複造輪子了。除了 AIML 外，我在&lt;a href=&quot;http://zake7749.github.io/2016/12/17/how-to-develop-chatbot/#u8A9E_u610F_u5716&quot;&gt;語意圖&lt;/a&gt;中，也會提及另一種基於圖的走訪式比對，主要是在解決樣板式模型中比對搶佔的問題。&lt;/p&gt;
&lt;h1 id=&quot;u6AA2_u7D22_u5F0F_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u6AA2_u7D22_u5F0F_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;檢索式模型&quot;&gt;&lt;/a&gt;檢索式模型&lt;/h1&gt;&lt;p&gt;再來聊聊檢索式模型吧，其實這東西的原理跟搜尋引擎很像，但是搜尋引擎給我們的是「頁面」，檢索式模型告訴我們的則是「答案」，用學術上的語言來說，檢索式模型其實就是類似問答系統，我們會維護問題與答案的配對：&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;Questions = { q_1 , q_2 ,……, q_n }&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;Answers = { a_1 , a_2 ,……, a_n }&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;再看看使用者的輸入和 &lt;code&gt;Questions&lt;/code&gt; 中的哪一個 &lt;code&gt;q_k&lt;/code&gt; 最接近，就把 &lt;code&gt;a_k&lt;/code&gt; 裡的回覆丟給使用者。在這裡補充一下，正統的問答系統 &lt;code&gt;q_k&lt;/code&gt; 與 &lt;code&gt;a_k&lt;/code&gt; 是經過分析後算出，它背後可能藏著一個知識庫，透過歸類使用者的句型與知識庫推理來計算出最適合的答案。&lt;/p&gt;
&lt;p&gt;那麼你可能會好奇，先前我怎麼假設已經有建好的問答配對？能這麼做的原因是我們要開發的，並不是像 Watson 那種能參加益智節目的超級電腦，而是一個只會面向特定領域的應用，會被問到的問題也就不是包山包海，聊天機器人只要記住一些「常見問答」就足夠了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/N2QYDNl.png&quot; alt=&quot;IBM Waston&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;看看 Watson 大顯神通&lt;/p&gt;

&lt;p&gt;話說回來了，這個模型的技術成分很顯然是「相似度」計算，那麼，我們該如何計算語句的相似度呢？&lt;/p&gt;
&lt;h2 id=&quot;OKapi_BM25&quot;&gt;&lt;a href=&quot;#OKapi_BM25&quot; class=&quot;headerlink&quot; title=&quot;OKapi BM25&quot;&gt;&lt;/a&gt;OKapi BM25&lt;/h2&gt;&lt;p&gt;通常第一個浮出的想法是用「TF * IDF」來計算詞的權重，再取出同時出現在使用者問句與問題集裡的詞，計算出兩者的相似分數。&lt;/p&gt;
&lt;p&gt;而你可能會問，有沒有東西能比 TFIDF 做得更好呢？有，答案是 &lt;a href=&quot;https://en.wikipedia.org/wiki/Okapi_BM25&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OKapi BM25&lt;/a&gt;，這是搜尋引擎的一種實作手段，不過既然都提到搜尋引擎了，就讓我再跑題一下吧，以前 Google 在搜尋引擎實作中是使用 PageRank，這個方法在自然語言處理上能調整成 TextRank，可用於從一串詞中挑選出核心的關鍵詞，算是有別於 TF/IDF 另一種尋找主題的方式。&lt;/p&gt;
&lt;p&gt;現在我們拉回 BM25 吧，看了 Wiki 的連結後，你可能會被那些繁雜的公式嚇到，實際上他想說的事情很簡單，我們將一個句子分成了很多個「詞」&lt;code&gt;qi&lt;/code&gt;，每個詞都會一個「IDF」分數，「f(qi,D)」指的是在 &lt;code&gt;D&lt;/code&gt; 這篇文檔中，&lt;code&gt;qi&lt;/code&gt; 這個詞一共出現了幾次，撇開停用詞不談，顯然一個詞在文章裡出現次數越多，他就顯得越重要。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/43e5c609557364f7836b6b2f4cd8ea41deb86a96&quot; alt=&quot;BM25&quot;&gt;&lt;/p&gt;
&lt;p&gt;到目前為止都是 TFIDF 的概念，BM25 引入了 b 與 k1 這兩個基於經驗調整的參數，兩者中 b 又會顯得重要些，從分母的地方能看出來，b 越大，文章長度就會顯得越重要，那為什麼要將文章長度列入考慮呢？我們可以這麼想，一個文章越長，它包含 &lt;code&gt;qi&lt;/code&gt; 的機率就會越高，這樣對短文本就不太公平了，或許前者是一段冗長又包山包海的廢文，後者則是一針見血的精闢見解，所以 BM25 引入 b ，就是為了要懲罰這種情形。&lt;/p&gt;
&lt;p&gt;嗯…好像太過偏向理論了，讓我們看點應用吧， BM25 在 &lt;a href=&quot;https://github.com/isnowfy/snownlp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SnowNLP&lt;/a&gt; 中已經實作完了，可以直接調用，容我直接引用演示案例：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; snownlp &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; SnowNLP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = SnowNLP([[&lt;span class=&quot;string&quot;&gt;u&#39;这篇&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&#39;文章&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;string&quot;&gt;u&#39;那篇&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&#39;论文&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;string&quot;&gt;u&#39;这个&#39;&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.sim([&lt;span class=&quot;string&quot;&gt;u&#39;文章&#39;&lt;/span&gt;])&lt;span class=&quot;comment&quot;&gt;# [0.3756070762985226, 0, 0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最終傳回的是分數列表，結果是&lt;code&gt;[u&amp;#39;这篇&amp;#39;, u&amp;#39;文章&amp;#39;]&lt;/code&gt;獲得最高分，如果想參考 BM25 的實作方式，可以看看&lt;a href=&quot;https://github.com/isnowfy/snownlp/blob/master/snownlp/sim/bm25.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SnowNLP是怎麼做的&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;u7DE8_u8F2F_u8DDD_u96E2&quot;&gt;&lt;a href=&quot;#u7DE8_u8F2F_u8DDD_u96E2&quot; class=&quot;headerlink&quot; title=&quot;編輯距離&quot;&gt;&lt;/a&gt;編輯距離&lt;/h2&gt;&lt;p&gt;什麼是編輯距離，我們能想成句子 A 要變成句子 B 要「最少」改幾個字，好比說：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊王&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為火影&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;改一個字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊王&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海火影&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;改兩個字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊王&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊影&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;改三個字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊王&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我要成為海賊王&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那這兩個句子的編輯距離就是 3 ，我們會發現編輯距離越短，某種程度上「句型」會越相似(雖然主題就不一定了)，也會發現這其實是個動態規劃問題，正因如此，我們就直接從應用層出發吧(?)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rhDWL38.jpg?1&quot; alt=&quot;燃燒你的小宇宙吧&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;抱歉了，我最討厭打表格了&lt;/p&gt;

&lt;p&gt;在此推薦&lt;a href=&quot;https://github.com/seatgeek/fuzzywuzzy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fuzzywuzzy&lt;/a&gt;，這是在 python 上基於萊文斯坦距離的實作，使用上非常直觀：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fuzzywuzzy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; fuzz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;score = fuzz.ratio(&lt;span class=&quot;string&quot;&gt;&quot;this is a test&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;this is a test!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# score = 97&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;話又說回來了，剛剛不是說到這相似評估好像沒辦法涉及語意，沒錯，最基本的編輯距離是沒辦法，但如果把距離的定義從「字變成別的字」換成「詞變成別的詞的相似度差異」就又是另一回事了。&lt;/p&gt;
&lt;h2 id=&quot;u8AAA_u597D_u7684_u6A5F_u5668_u5B78_u7FD2_u5462_uFF1F&quot;&gt;&lt;a href=&quot;#u8AAA_u597D_u7684_u6A5F_u5668_u5B78_u7FD2_u5462_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;說好的機器學習呢？&quot;&gt;&lt;/a&gt;說好的機器學習呢？&lt;/h2&gt;&lt;p&gt;你可能已經發現了，檢索式模型能看成是種文本分類問題，以經典的新聞分類來看：&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;訓練集(文本、標籤):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;小熊續留賽揚強投？ 明年1月與艾瑞塔談延長合約&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;體育&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;韓推古裝劇花郎小鮮肉演員吸睛&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;娛樂&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;當用戶說「今天洋基隊的比分是多少」，我們的聊天機器人就知道用戶是在講體育賽事，用技術的語言來說，用戶的「意圖」是問體育賽事，這個句子還有「洋基隊」、「今天」、「比分」這三個特徵，所以我們能這麼做：&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;query&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;今天洋基隊的比分是多少&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; = classifier.classify(&lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;handler = get_task_handler(&lt;span class=&quot;title&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;features = handler.extract_features(&lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response = handler.get_response(&lt;span class=&quot;title&quot;&gt;features&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chatbot.say(&lt;span class=&quot;title&quot;&gt;response&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;明白了運作流程後，顯然能看出技術成分有兩處：「分類」與「特徵抽取」，我先來談談分類吧，特徵抽取請參見後續的「實體識別」。&lt;/p&gt;
&lt;h3 id=&quot;u6A38_u7D20_u8C9D_u8449_u65AF_u5206_u985E&quot;&gt;&lt;a href=&quot;#u6A38_u7D20_u8C9D_u8449_u65AF_u5206_u985E&quot; class=&quot;headerlink&quot; title=&quot;樸素貝葉斯分類&quot;&gt;&lt;/a&gt;樸素貝葉斯分類&lt;/h3&gt;&lt;p&gt;文本分類的方法很多，其中最直觀的莫過於樸素貝葉斯 (Naive bayes) 分類了，我覺得這算是條件機率的應用，我們透過 「Given」 某些詞來計算這串詞是某個類別的機率，比如說我們現在有兩個類別 &lt;code&gt;A&lt;/code&gt;、&lt;code&gt;B&lt;/code&gt;，使用者的輸入是：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Naive&lt;/span&gt; bayes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們就會去計算：&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;P_a = P(class A \ | \ Naive \ bayes \ in \ the \ query)&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;P_b = P(class B \ | \ Naive \ bayes \ in \ the \ query)&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;Pa &amp;gt; Pb&lt;/code&gt; 就是 A 類別，反之為 B 類別，你可能會好奇這怎麼辦的到，簡單來說的話，我們會在訓練時去求得：&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;P(Naive \ bayes \ in \ the \ query \ | \ class A)&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;P(Naive \ bayes \ in \ the \ query \ | \ class B)&lt;br&gt;$$&lt;br&gt;所以能夠過條件機率的公式反過來推算，想要更進一步的了解，我向各位推薦這篇&lt;a href=&quot;http://pansci.asia/archives/66830&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;妙趣橫生的文章&lt;/a&gt;。而關於樸素貝葉斯的直接應用，可以採用 &lt;a href=&quot;https://github.com/sloria/TextBlob&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TextBlob&lt;/a&gt;這個簡單的套件，它專門為了分類用法寫了一篇&lt;a href=&quot;https://github.com/sloria/TextBlob/blob/dev/docs/classifiers.rst&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教學&lt;/a&gt;，我在此就不班門弄斧了。&lt;/p&gt;
&lt;h3 id=&quot;u8A5E_u7684_u8868_u793A_u6CD5&quot;&gt;&lt;a href=&quot;#u8A5E_u7684_u8868_u793A_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;詞的表示法&quot;&gt;&lt;/a&gt;詞的表示法&lt;/h3&gt;&lt;p&gt;對了，我剛剛疏忽了一點，機器學習中很注重「資料的表示法」，那麼我們該怎麼表示「一個句子」呢？很簡單，套用詞袋模型就成了：&lt;/p&gt;
&lt;figure class=&quot;highlight inform7&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;s1 = This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; my life&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s2 = This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; my book&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.用集合表示上面兩個句子(this,&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;,my,life,book)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.賦予每個詞一個 id (&lt;span class=&quot;comment&quot;&gt;[this,1]&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;[is,2]&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;[my,3]&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;[life,4]&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;[book,5]&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.從而產生一個陣列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; This   &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;    my   life  book&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;[flag, flag, flag, flag, flag]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4.現在我們就能將語句向量化，1表示有出現這個詞，0表示沒出現&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s1 = &lt;span class=&quot;comment&quot;&gt;[1,1,1,1,0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s2 = &lt;span class=&quot;comment&quot;&gt;[1,1,1,0,1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此一來，一個句子就變成陣列，更多基於監督式學習的方法都能助我們一臂之力。但是詞袋有一個缺點，就是「每個詞都是語意獨立的」，彼此的相似度不是 1 就是 0，因而誕生出了 Word2Vec 這個將詞袋降維的技巧，要學習如何使用 Word2Vec，可以參見我之前寫的一篇&lt;a href=&quot;http://zake7749.github.io/2016/08/28/word2vec-with-gensim/&quot;&gt;教學&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;u6DF1_u5EA6_u5B78_u7FD2&quot;&gt;&lt;a href=&quot;#u6DF1_u5EA6_u5B78_u7FD2&quot; class=&quot;headerlink&quot; title=&quot;深度學習&quot;&gt;&lt;/a&gt;深度學習&lt;/h3&gt;&lt;p&gt;這時你可能就會問了，有詞向量，那有沒有句向量，答案是有的，好比說把句子中所有的詞加總起來就會是個句向量，但印象中這東西的效能會是 lower bound ，正統的句向量實作與使用可以參見&lt;a href=&quot;https://github.com/klb3713/sentence2vec&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sentence2vec&lt;/a&gt;，這是依照 word2vec 作者 Tomas Mikolov 新發表的論文實作出來的。我們有了句向量後，就只要計算兩個句子的 cosine 相似度，便可以得知哪個問答配對會是我們需要的，哈哈，還記得嗎，我們正在討論聊天機器人的「檢索式模型」。&lt;/p&gt;
&lt;p&gt;而在我們將詞袋密集化後，就能走入更「深」一點的應用，好比說透過堆疊句子中的詞向量，就能產生出一張「語句圖片」，這就變成了卷積神經網路的專精領域 - 圖像識別問題，可藉此推測句子會屬於哪個可能類別，這也是目前我正在學習的部分，怕是無法用簡單的文字道破箇中奧妙，若有興趣不妨在 Google 敲上 &lt;code&gt;CNN NLP&lt;/code&gt;，或是看看史丹佛大學的深度學習與自然語言處理公開課。&lt;/p&gt;
&lt;h1 id=&quot;u751F_u6210_u5F0F_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u751F_u6210_u5F0F_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;生成式模型&quot;&gt;&lt;/a&gt;生成式模型&lt;/h1&gt;&lt;p&gt;這個東西的技術含量超級高，無論是資料前處理還是模型架構應該都是最麻煩的，但我個人認為生成式模型並不偏向特定領域的聊天，比較像是在實現一般的生活對話，並不太符合這篇的主題，為了避免這篇文章太過冗長，這裡就簡介一些基本思維，並提供學習方向後便點到為止，改天再專文來聊聊 Sequence to Sequence with Attention 吧。&lt;/p&gt;
&lt;p&gt;自 google 的論文發表後，用 &lt;code&gt;Sequence to Sequence&lt;/code&gt; 來實現聊天機器人就成為一股熱潮，Github 上有不少像 &lt;a href=&quot;https://github.com/Conchylicultor/DeepQA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeepQA&lt;/a&gt; 看起來高完成度的應用。&lt;code&gt;Sequence to Sequence&lt;/code&gt; 的基本概念是串接兩個 RNN/LSTM，一個當作編碼器，把句子轉換成隱含表示式，另一個當作解碼器，將記憶與目前的輸入做某種處理後再輸出，不過這只是最直觀的方式，其實解碼器還有很多種作法，如果想了解細節與效能上的差異，&lt;a href=&quot;http://jacoxu.com/?p=1852&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我推薦這篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/t2E7FfC.png&quot; alt=&quot;Sequence to Sequence&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;所謂的序列生成，就是把前一刻的輸出當成下一刻的輸入&lt;/p&gt;

&lt;p&gt;這其實就是另類的機器翻譯手段，在 TensorFlow 的機器翻譯篇裡便有搭建 Sequence to Sequence 模型的完整教學，就不在此贅述細節了。&lt;/p&gt;
&lt;h1 id=&quot;u5546_u52D9_u5F0F_u804A_u5929_u6A5F_u5668_u4EBA&quot;&gt;&lt;a href=&quot;#u5546_u52D9_u5F0F_u804A_u5929_u6A5F_u5668_u4EBA&quot; class=&quot;headerlink&quot; title=&quot;商務式聊天機器人&quot;&gt;&lt;/a&gt;商務式聊天機器人&lt;/h1&gt;&lt;p&gt;具備一些基本認識後，讓我們開始向「錢」看齊吧，現行的聊天機器人應用能切分成兩大類，一類是在整合其他應用，好比說 &lt;code&gt;Siri&lt;/code&gt; 或 &lt;code&gt;微軟小冰&lt;/code&gt;，它能替你問天氣、查股票、找餐廳等等，若換個角度來看，它就是幫你把氣象資料、股票資料、以及 Google Map 等等資訊給整合起來，讓用戶能用「同個介面」拜訪「不同應用」，就自然語言的定義來看也就是偏向 General domain 的聊天機器人。&lt;/p&gt;
&lt;p&gt;至於第二類就是相對第一類而言，Specified domain 的聊天機器人囉！如果將 General domain 整合多個應用這個思維稱為「寬」的話，Specified domain 則是偏向往特定領域「深入」，好比之前說的客服機器人，我以能回覆保險訊息的聊天機器人舉例吧，它顯然要具備與保險相關的知識才能實現，好比我們問：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;哪個保險會適合我？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XXX 保險有什麼好處嗎？&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;顯然，無論是要認識顧客並以此推薦服務，或是了解自家公司的產品等等，這些都是在對「保險」這個議題深入處理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/OEYUfCZ.jpg?1&quot; alt=&quot;LineBot&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;搞定語意與任務處理後，我們就能將其發佈於 Line/Messenger 上&lt;/p&gt;

&lt;p&gt;除了客服應用外，我認為 Specified domain 還有一個更有價值的議題 -「多輪式對話」&lt;/p&gt;
&lt;h1 id=&quot;u591A_u8F2A_u5F0F_u5C0D_u8A71&quot;&gt;&lt;a href=&quot;#u591A_u8F2A_u5F0F_u5C0D_u8A71&quot; class=&quot;headerlink&quot; title=&quot;多輪式對話&quot;&gt;&lt;/a&gt;多輪式對話&lt;/h1&gt;&lt;p&gt;所謂的多輪式對話，或者有人說是對話情境，指的就是聊天機器人能對之前的談話有所「記憶」，並接續之前的服務，比如說：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;:幫我找間飯店&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bot&lt;/span&gt;  :想找哪裡的飯店呢？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;:臺南的吧，會在十二月二十五號入住&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bot&lt;/span&gt;  :好的，向您推薦台南大飯店，要透過 Agoda 進行訂房服務嗎？&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這是個很有趣的問題，聊天機器人不能將每句對話都視作獨立的。接下來所有的篇幅我都會用來談論 Specified domain 的聊天機器人，並用簡單又直觀的方法來設計一個實現多輪式對話的架構。&lt;/p&gt;
&lt;h1 id=&quot;u8A9E_u610F_u5206_u6790&quot;&gt;&lt;a href=&quot;#u8A9E_u610F_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;語意分析&quot;&gt;&lt;/a&gt;語意分析&lt;/h1&gt;&lt;p&gt;在正式切入多輪式對話前，我們得先認識「語意」分析在做什麼。語意分析其實蠻多人在做的，而且也存在 Wit.ai、luis、微軟的認知服務等很成熟的應用，它們的大方向通常是讓使用者編修一些句子，並標記句子裡的意圖(intent)與實體(entity)，再透過後訓練調整問答模型。比如說：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Training &lt;span class=&quot;keyword&quot;&gt;se&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我想要購買一瓶紅酒&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們可以定義這句話的意圖是「購買物品」，其中的實體為「紅酒」與「一瓶」，當使用者輸入一句新的對話後，系統就會以訓練集去評比，有沒有種似曾相似的感覺？沒錯，這跟我們先前在樸素貝葉斯分類中看過得相當相似，我們的目的在於將一句「對話」，通過使用者定義好的意圖，來分配至某一個「情境」。這看起來是種監督式學習，顯而易見的，隨著標記的實體量與句型越來越多，聊天機器人就會越來越厲害。&lt;/p&gt;
&lt;p&gt;遺憾的是，我們看不到人家的後端是在怎麼搞，或許是基於某種 NN 的預測、或許是 LDA 的變型去做分類，也或許是以 WordNet 切入，從一個句型的架構著手，在語法與語意兩方面都進行處理，決定出最可能的主題是什麼。&lt;/p&gt;
&lt;p&gt;當然啦，這些都只是個假設，也許背後只是一堆繁複的規則也說不定呢。既然我們無法摸清別人在搞什麼花樣，那麼就自己試著做做語意分析吧，先別走太高端的技術，讓我們一步一腳印，從最簡單的部分著手。&lt;/p&gt;
&lt;h1 id=&quot;u8A9E_u610F_u5716&quot;&gt;&lt;a href=&quot;#u8A9E_u610F_u5716&quot; class=&quot;headerlink&quot; title=&quot;語意圖&quot;&gt;&lt;/a&gt;語意圖&lt;/h1&gt;&lt;p&gt;這是我在專題中進行分析的一個技巧，你說什麼是語意圖？沒聽過也是挺正常的，其實這是我在報告中自己定義出的一個名詞，只是因為教授也沒說什麼，所以就這樣定下來了(･ω･ )……&lt;/p&gt;
&lt;p&gt;類似的概念我在&lt;a href=&quot;http://zake7749.github.io/2016/08/30/chatterbot-with-word2vec/&quot;&gt;基於詞向量的主題匹配&lt;/a&gt;有提過了，將其抽象化後就成為了語意圖，長的會是這個樣子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/K8vIoV7.png&quot; alt=&quot;語意圖概觀&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;隨手畫出的一張語意圖&lt;/p&gt;

&lt;p&gt;我們直接看看怎麼應用吧，以要識別：「這附近有什麼好吃的」為例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qzpjXBm.gif&quot; alt=&quot;語意圖分析&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;我們能這樣分析一句話&lt;/p&gt;

&lt;p&gt;一言以蔽之，就是從 root 一直往下走到葉節點，每個節點都代表著某種語意訊息，&lt;br&gt;我們不斷的從子節點中，挑選出與句子最相關的語意節點，最終就能得出一條語意路徑，我們便能從語意路徑中，認知出這句話的涵義，像「這附近有什麼好吃的」經過走訪後，我們得出了一條路徑，就得出了想「找賣飯的餐廳」這個意圖。&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;（意圖是）飲食　-&amp;gt; （是想吃）食物　-&amp;gt;  (想吃)飯　-&amp;gt; (因為附近跟地點有關，所以想找)　餐廳&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你或許會感到疑問，為什麼是「食物」接下來是往「飯」走而不是往「麵」走，這其實與模型、語料、客層三者相關，在後續的自學習篇章中，我會對這點稍做補充。除此之外，你可能會這樣質疑我：「你又知道能走到餐廳，是因為『餐廳』匹配到了『附近』，也可能是因為『餐廳』匹配到了『好吃』啊」，問的好，實際上我對語意圖定義了兩種運算行為：&lt;/p&gt;
&lt;p&gt;其一為找尋進入點，「比如說這附近有什麼好吃的」，我們從「好吃」這個詞對應到了進入點「飲食」，可以想做因為你提到了好吃，所以我們認為有飲食相關的意圖。&lt;/p&gt;
&lt;p&gt;其二為詞義解析，像是「好吃」一直在變色，這個是想找出系統內與「好吃」最相關的概念是什麼，結果是「飯」。&lt;/p&gt;
&lt;p&gt;當一個詞完成了詞義解析後，這個詞就算處理完了，也「不會」再次被語意圖視為進入點，我想這也是蠻直觀的，總不能一直重複進去同一個點，這樣要其他的詞如何是好吶！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SfBj34M.jpg&quot; alt=&quot;方堂鏡&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;不想被打得話，就別在同個點進進出出的&lt;/p&gt;

&lt;p&gt;我剛剛沒說的是，我們要怎麼去找尋進入點與做詞義解析？換言之，那張圖到底是個怎麼樣的走法？其實這實現方法非常多種，因為每個語意節點本質上就是個打分器，只要有辦法讀入一個詞組，輸出一個分數，那就是一個合格的語意節點，換句話說，語意圖也容許不同評估方式的節點存在，以最大化迎合匹配的需求。&lt;/p&gt;
&lt;p&gt;最簡單的，我們能建立一個同義詞集合，去匹配看看這些東西有沒有出現在使用者語句裡，如果有就給 1 分，沒有就給 0 分。或者說我們也能以詞向量的角度出發，這還能另外抓出一些隱含語意，詳情請參見以往寫的&lt;a href=&quot;http://zake7749.github.io/2016/08/30/chatterbot-with-word2vec/&quot;&gt;基於詞向量的主題匹配&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;總而言之，我們在分析完一句話的語意之後，就能得到了一條「語意路徑」，這條路徑能概念性的說明我們話中的涵義。若我們為每條路徑給予一個&lt;code&gt;id&lt;/code&gt;，再依這個&lt;code&gt;id&lt;/code&gt;去找出對應「欲詢問特徵的集合」，這麼一來，我們就有辦法去設計多輪式對話情境了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/0wD6sln.png&quot; alt=&quot;多輪式對話&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;只要記住目前知道什麼，以及還要問些什麼，多輪式對話的架構就浮現了&lt;/p&gt;

&lt;p&gt;在未滿足所有需求之前，我們的機器人就依照缺損的需求，一直問、一直問、一直問下去，直到需求滿足為止，這就是最為簡單的多輪式對話架構。&lt;/p&gt;
&lt;h2 id=&quot;u4F8B_u5916_u8655_u7406&quot;&gt;&lt;a href=&quot;#u4F8B_u5916_u8655_u7406&quot; class=&quot;headerlink&quot; title=&quot;例外處理&quot;&gt;&lt;/a&gt;例外處理&lt;/h2&gt;&lt;p&gt;當我報告這個想法時，有被詢問到一個問題，如果中間使用者反過來問問題怎麼辦？比方說機器人在向對方推薦酒類時，對方突然問了一句：「什麼是 smooth」。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/7r00mCa.jpg&quot; alt=&quot;red-wine&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;別在留言欄問我什麼是 smooth，我沒有品酒的習慣。&lt;/p&gt;

&lt;p&gt;我當時沒有想到解決的方法，不過現在回想起來，答案似乎意外的簡單，出現了預料之外的情形，這不就是「例外」嗎？那做「例外處理」不就行了嗎？&lt;/p&gt;
&lt;p&gt;而所謂的「例外」，就是我們沒辦法從目前回應中抽出預期的「答案」(假設實體識別沒問題)。我之所以會有這個想法，是因為半年前在做 Watson 訂購披薩的 API 測試時，發現如果我說的話跟披薩摸不著邊，Watson 就會很無奈的說「我不太明白你想做什麼，我能做的就只有幫你訂披薩。」&lt;/p&gt;
&lt;p&gt;話又說回來了，發生例外時該怎麼辦呢？一個模型不夠，那用兩個模型不就成了。上述問題的解法其實挺直觀的，當使用者問說：「什麼是 smooth ?」時，因為我們抽取不到任何與答案相關的訊息，所以我們可以從匹配模型轉移到「檢索式模型」，用來從既定 FAQ 裡找出答案告訴使用者，完成例外處理後，再從檢索式模型轉回匹配模型，繼續之前的多輪式對話。&lt;/p&gt;
&lt;h1 id=&quot;u81EA_u5B78_u7FD2&quot;&gt;&lt;a href=&quot;#u81EA_u5B78_u7FD2&quot; class=&quot;headerlink&quot; title=&quot;自學習&quot;&gt;&lt;/a&gt;自學習&lt;/h1&gt;&lt;p&gt;說穿了，如果不是泛型聊天機器人，面向特定領域的聊天機器人通常與推薦系統類似，它之所以回答你的問題，其實也就是想讓你老實地把錢掏出來，既然如此，讓系統能在與使用者對話的過程中，「越來越認識這名使用者」，就會顯得極其重要，這就是所謂的自學習。&lt;/p&gt;
&lt;p&gt;「你認為聊天機器人該怎麼做到自學習？」&lt;/p&gt;
&lt;p&gt;其實被問到這個問題時我驚訝了一下，因為這是我專題已經棄了蠻久的坑，因為時間啊、課業啊、推甄啊，還有很多很多原因就被我埋藏在記憶的深處了，現在終於又重見天日了。&lt;/p&gt;
&lt;h2 id=&quot;u5411_u91CF_u6B0A_u91CD_u8ABF_u6574&quot;&gt;&lt;a href=&quot;#u5411_u91CF_u6B0A_u91CD_u8ABF_u6574&quot; class=&quot;headerlink&quot; title=&quot;向量權重調整&quot;&gt;&lt;/a&gt;向量權重調整&lt;/h2&gt;&lt;p&gt;當初選擇用詞向量做語意圖的開發基底，就是為了線上學習而鋪的伏筆，在剛剛路徑的走訪中，我的假設是 &lt;code&gt;sim(&amp;#39;好吃&amp;#39;,&amp;#39;飯&amp;#39;) &amp;gt; sim(&amp;#39;好吃&amp;#39;,&amp;#39;麵&amp;#39;)&lt;/code&gt;，但實際上，若系統中的使用者常常提到麵或與麵相關的概念好吃的話，&lt;code&gt;sim(&amp;#39;好吃&amp;#39;,&amp;#39;麵&amp;#39;)&lt;/code&gt;便會產生變化，到達某一個程度後，能超過&lt;code&gt;sim(&amp;#39;好吃&amp;#39;,&amp;#39;飯&amp;#39;)&lt;/code&gt;，改為以推薦麵食為主，這某種程度上，就好像我們的系統在學習一般。&lt;/p&gt;
&lt;h2 id=&quot;u884C_u70BA_u8A18_u61B6&quot;&gt;&lt;a href=&quot;#u884C_u70BA_u8A18_u61B6&quot; class=&quot;headerlink&quot; title=&quot;行為記憶&quot;&gt;&lt;/a&gt;行為記憶&lt;/h2&gt;&lt;p&gt;之前曾經說過，自然語言處理最困難的就是多樣性，我們永遠都不會知道，下一秒使用者會突然說出什麼新花樣，既然如此，不妨試著把問題限縮在我們的業務範圍內吧！好比說像這樣：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rLIntyA.gif&quot; alt=&quot;MESSENGER-BOT&quot;&gt;&lt;/p&gt;
&lt;p&gt;透過浮出按鈕，幫助使用者做決定，往好處想，它能夠限縮涵蓋範圍，也不用讓使用者自己打字，還算是挺貼心的，不過我想這不只如此而已。&lt;/p&gt;
&lt;p&gt;我以前在玩 OpenAI 時，很喜歡不去管資料的合適程度，就把強化學習套在各式各樣的議題上，這個想法在聽了李宏毅教授的課後已經改善許多，不過我仍有點印象，當時看過一個很有趣的應用，就是用強化學習來實現推薦系統，方法似乎是透過反覆的提供按鈕，來看看用戶的反應如何。&lt;/p&gt;
&lt;p&gt;確實呢，按按鈕這個動作不僅僅是把資料傳送給後端而已，更重要的是它反應出了使用者的行為，以上面那個例子來說，我們有 &lt;code&gt;Action&lt;/code&gt;、&lt;code&gt;Comedy&lt;/code&gt;、&lt;code&gt;Drama&lt;/code&gt;、&lt;code&gt;Document&lt;/code&gt; 這四個按鈕，透過結果，我們能知道使用者更喜歡喜劇片，更精確的講，是跟其他三者比起來，更喜歡喜劇片。也就是說，我們能夠為每個多輪式對話設計需求按鈕，再記錄每名用戶的偏好行為，以此評估使用者可能會更喜歡什麼。至於具體的分析方式，這就偏向推薦系統的實作了，在這邊就點到為止吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;幾天前，我收到了一份來自 San Jose 的 intern 邀請，對方正致力於用深度學習的相關技術，來開發商務用途的對話式介面，因此特別著重在「潛在語意分析」與「自學習」這兩個議題上，這剛好和我目前的研究方向挺類似的，而與對方攀談了不少開發與改進的方向，趁著現在記憶還算清楚，趕緊把這些想法記錄下來。&lt;/p&gt;
    
    </summary>
    
      <category term="自然語言處理" scheme="http://zake7749.github.io/categories/%E8%87%AA%E7%84%B6%E8%AA%9E%E8%A8%80%E8%99%95%E7%90%86/"/>
    
    
      <category term="BM25" scheme="http://zake7749.github.io/tags/BM25/"/>
    
      <category term="Word Embedding" scheme="http://zake7749.github.io/tags/Word-Embedding/"/>
    
      <category term="樸素貝葉斯分類" scheme="http://zake7749.github.io/tags/%E6%A8%B8%E7%B4%A0%E8%B2%9D%E8%91%89%E6%96%AF%E5%88%86%E9%A1%9E/"/>
    
      <category term="深度學習" scheme="http://zake7749.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92/"/>
    
      <category term="聊天機器人" scheme="http://zake7749.github.io/tags/%E8%81%8A%E5%A4%A9%E6%A9%9F%E5%99%A8%E4%BA%BA/"/>
    
      <category term="語句相似度" scheme="http://zake7749.github.io/tags/%E8%AA%9E%E5%8F%A5%E7%9B%B8%E4%BC%BC%E5%BA%A6/"/>
    
      <category term="語意分析" scheme="http://zake7749.github.io/tags/%E8%AA%9E%E6%84%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>基於詞向量的主題匹配</title>
    <link href="http://zake7749.github.io/2016/08/30/chatterbot-with-word2vec/"/>
    <id>http://zake7749.github.io/2016/08/30/chatterbot-with-word2vec/</id>
    <published>2016-08-29T16:56:23.000Z</published>
    <updated>2016-10-30T12:06:02.852Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;2016 will be the year of conversational commerce&lt;br&gt;Chris Messina&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Facebook 釋出 Messenger API 後，形形色色的 Chatterbot 如雨後春筍般湧現：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rLIntyA.gif&quot; alt=&quot;messenger&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;Messenger chatbot - from Facebook&lt;/p&gt;

&lt;p&gt;「以對話式介面取代圖形化介面」、「2016年將成為對話式商務元年」，種種呼聲儼然令聊天機器人成為了一個 NLP 熱點，這將是一場介面革命，我們所專注的不再是色調與元素的微調，而是去思考如何令機器人在談吐間富含溫度，在語意上理解透徹，在思維上，更貼近一個真實的人。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嘛，開場白也講得差不多了，太企業導向的東西先放一邊，讓我們來點輕鬆的，瞧瞧這篇文章出來的成果會是什麼樣子：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;使用者：明天早上叫我起床。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;相似度&lt;/th&gt;
&lt;th&gt;概念&lt;/th&gt;
&lt;th&gt;匹配元&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0.4521&lt;/td&gt;
&lt;td&gt;鬧鐘&lt;/td&gt;
&lt;td&gt;起床&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.3904&lt;/td&gt;
&lt;td&gt;天氣&lt;/td&gt;
&lt;td&gt;早上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.3067&lt;/td&gt;
&lt;td&gt;住宿&lt;/td&gt;
&lt;td&gt;起床&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.1747&lt;/td&gt;
&lt;td&gt;病症&lt;/td&gt;
&lt;td&gt;起床&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;這個表是算法推論出的對話主題，機器看到「明天早上叫我起床」，就知道該幫你「訂鬧鐘」了，接下來，就能基於自己的語料為使用者提供服務。這個例子有趣的點在使用者壓跟沒提到「鬧鐘」，那麼，機器是怎麼推斷出「設鬧鐘」這個結論的？&lt;/p&gt;
&lt;p&gt;其實標題已經先劇透了，沒涉及到 LSTM 或 ESA 這類高端技術，只不過是把匹配的單元從「詞」替換成詞「向量」罷了，也就是基於向量間的餘弦相似度計算，來去推測每個詞可能會有的隱含主題。&lt;/p&gt;
&lt;h2 id=&quot;u4E00_u5207_u7684_u8D77_u9EDE&quot;&gt;&lt;a href=&quot;#u4E00_u5207_u7684_u8D77_u9EDE&quot; class=&quot;headerlink&quot; title=&quot;一切的起點&quot;&gt;&lt;/a&gt;一切的起點&lt;/h2&gt;&lt;p&gt;其實以前我也開發過聊天機器人，方法跟目前很多框架一樣，定義了幾種匹配模式再去檢查關鍵字，用程式語言來講大概是：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; user_input.contain(keyword):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	say_something(keyword.domain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; user_input.start_with(keyword):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	say_something(keyowrd.domain, start=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這麼做精度很高，且因對話是基於人工定義，答覆的品質也是一等一的，可惜缺點也相當明顯，即是開發彈性相當低，畢竟要表達一個主題的方式實作太多太多，我們不能總是指望關鍵字有辦法包山包海，人力與時間的花費都是個問題。&lt;br&gt;於是後來看上了LDA，要找主題問主題模型，這麼想也是理所當然的，可嘆機率模型是盤難解的棋，除此之外，無監督學習出的主題也未必是應用上需要的，再說像聊天這種頂多二十幾個字的短語，我認為還是回歸到關鍵字比對會靠譜一些，重點是怎麼比呢？&lt;/p&gt;
&lt;h3 id=&quot;u8A66_u8457_u6B78_u7D0D_u4E3B_u984C&quot;&gt;&lt;a href=&quot;#u8A66_u8457_u6B78_u7D0D_u4E3B_u984C&quot; class=&quot;headerlink&quot; title=&quot;試著歸納主題&quot;&gt;&lt;/a&gt;試著歸納主題&lt;/h3&gt;&lt;p&gt;自然語言處理最難的就是語言的多樣性，我想沒有人會否認這個說法，那麼化繁為簡就成為了關鍵，這讓我想到 IR 的 Stemming ，或許可以透過 domain tree 來規約一個句子的含義，比方說：&lt;/p&gt;
&lt;figure class=&quot;highlight dust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;User：這附近哪裏能買到泡沫紅茶？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Domains：&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;附近|近距離&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;、&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;哪裡|疑問&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;、&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;買到|購買&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;、&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;泡沫紅茶|飲料&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這能透過&lt;a href=&quot;http://ehownet.iis.sinica.edu.tw/ehownet.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廣義知網&lt;/a&gt;實現，如此一來就把關鍵字擴充同義詞集，但是這樣還不夠，我們更關注的應該會是詞之間的主題關聯性，比如說提到&lt;strong&gt;肚子餓&lt;/strong&gt;，就會想到該&lt;strong&gt;吃飯&lt;/strong&gt;了，&lt;strong&gt;口渴&lt;/strong&gt;了，那你可能會想&lt;strong&gt;買飲料&lt;/strong&gt;。想要保存關聯，又想要建立同義關係，就我所學中最恰當的方法就是&lt;code&gt;Word2Vec&lt;/code&gt;，至於如何將詞向量化呢？可以參見&lt;a href=&quot;http://zake7749.github.io/2016/08/28/word2vec-with-gensim/&quot;&gt;我另一篇文章&lt;/a&gt;的紀錄。&lt;/p&gt;
&lt;p&gt;其實我本來對這個想法還頗有疑慮，直到偶然拜訪了這個 &lt;a href=&quot;https://github.com/asd5510/word2vec-chinese-demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Word2Vec的視覺化專案&lt;/a&gt;，它隨機將文章中某個詞替換成了與該詞相似度最高的詞，這與我目前要做的有異曲同工之妙，不過它是將文句發散出去，我是想讓概念收斂回來，就演示的結果來看，大方向應該是沒有問題的，現在該是寫程式的時候了。&lt;/p&gt;
&lt;h2 id=&quot;u5148_u5B9A_u7FA9_u898F_u5247&quot;&gt;&lt;a href=&quot;#u5148_u5B9A_u7FA9_u898F_u5247&quot; class=&quot;headerlink&quot; title=&quot;先定義規則&quot;&gt;&lt;/a&gt;先定義規則&lt;/h2&gt;&lt;p&gt;既然是基於匹配，我們就得先決定好匹配的結構才行，我簡單定義了一個&lt;code&gt;json&lt;/code&gt;的格式：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;domain&lt;/span&gt;&quot;: &lt;span class=&quot;string&quot;&gt;&quot;代表這個規則的抽象概念&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;response&lt;/span&gt;&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;機器人給予的回覆&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;concepts&lt;/span&gt;&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;要被比對向量的關鍵詞集&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;children&lt;/span&gt;&quot;: [&lt;span class=&quot;string&quot;&gt;&quot;該規則的子規則們&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;實際建立起來可能像是這樣：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;domain&lt;/span&gt;&quot;: &lt;span class=&quot;string&quot;&gt;&quot;購買&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;response&lt;/span&gt;&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;正在將您導向購物模組&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;concepts&lt;/span&gt;&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;購物&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;訂購&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&quot;&lt;span class=&quot;attr&quot;&gt;children&lt;/span&gt;&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買生活用品&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買家電&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買食物&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買飲料&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買鞋子&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買衣服&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;購買電腦產品&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u958B_u59CB_u5339_u914D&quot;&gt;&lt;a href=&quot;#u958B_u59CB_u5339_u914D&quot; class=&quot;headerlink&quot; title=&quot;開始匹配&quot;&gt;&lt;/a&gt;開始匹配&lt;/h2&gt;&lt;p&gt;現在我們就能基於規則開發資料結構，基於個人後處理的考量，接下來都會用&lt;code&gt;python 3.5.0&lt;/code&gt;開發，使用到的套件有主題模型&lt;code&gt;gensim&lt;/code&gt;與&lt;code&gt;jieba斷詞&lt;/code&gt;。規則類的程式碼可以參見&lt;a href=&quot;https://github.com/zake7749/Chatbot/blob/master/Chatbot/RuleMatcher/rulebase.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rulebase.py&lt;/a&gt;，我創建了&lt;code&gt;Rule&lt;/code&gt;與&lt;code&gt;RuleBase&lt;/code&gt;，由於我&lt;code&gt;python&lt;/code&gt;是新手入門，開發上又幾經波折，程式裏頭有很多無關緊要的玩意兒還請見諒。我想重點是在匹配的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, sentence, threshold=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max_sim = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matchee = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sentence:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; term &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.terms:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sim = self.model.similarity(term,word)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sim &amp;gt; max_sim &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; sim &amp;gt; threshold:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max_sim = sim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        matchee = word&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    self.log.write(repr(e)+ &lt;span class=&quot;string&quot;&gt;&quot;. Try to hard-match.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; term == word:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max_sim = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        matchee = word&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [max_sim, self.id_term, matchee]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;sentence&lt;/code&gt;是使用者輸入的斷詞結果，&lt;code&gt;self.terms&lt;/code&gt; 是&lt;code&gt;Rule&lt;/code&gt;的關鍵詞的列表，透過雙層迴圈讓詞袋中每一個詞和關鍵詞表中的每一個關鍵字計算相似度，最後迴傳最優的分數、自己的 ID 與匹配到的字詞。&lt;code&gt;RuleBase&lt;/code&gt;的工作也沒什麼，就負責把一堆&lt;code&gt;Rule&lt;/code&gt;從&lt;code&gt;json&lt;/code&gt;檔中讀入，並提供了一個對外的匹配接口:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, sentence, topk=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, threshold=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, root=None)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; self.model &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Please load the model before any match.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result_list  = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at_leaf_node = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        term_trans   = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;# then search from roots of forest.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            focused_rule = self.forest_base_roots&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            focused_rule = [self.rules[root]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; at_leaf_node:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            at_leaf_node = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rule &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; focused_rule:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result_list.append(rule.match(sentence, threshold))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result_list = sorted(result_list, reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt; , key=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; k: k[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            top_domain  = result_list[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;# get the best matcher&#39;s domain.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.rules[top_domain].has_child():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                term_trans += top_domain+&lt;span class=&quot;string&quot;&gt;&#39;&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                at_leaf_node = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# travel to the best node&#39;s children.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                focused_rule = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rule_id &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.rules[top_domain].children:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    focused_rule.append(self.rules[rule_id])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [result_list,term_trans]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我儲存規則的資料結構是字典，鍵為&lt;code&gt;Rule.domain&lt;/code&gt;，值則是&lt;code&gt;Rule&lt;/code&gt;的實例，那麼你可能就好奇了，怎麼不用單層迴圈就搞定？&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rule &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.rules.values():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	grade = rule.match(sentence, threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其實那是我的初號機，因為以前聊天機器人就是這麼寫的，可惜當詞變成了詞向量，這個老方法就有點力不從心。弱匹配雖然彈性很大，但規則設計上就得小心翼翼，很容易發生搶佔分數的情形，比如「附近」、「哪裡」總拿高分，讓「購物」或「觀光」這類有明確意圖的只能敬陪末座，也不能武斷的將其歸類為停用詞，因為某種程度上他們表達了「詢問地點」這層含義，那怎麼辦呢？就做一顆分類樹吧！&lt;/p&gt;
&lt;h2 id=&quot;u898F_u5247_u5F88_u6A21_u7CCA_uFF1F_u90A3_u5C31_u5206_u800C_u6CBB_u4E4B&quot;&gt;&lt;a href=&quot;#u898F_u5247_u5F88_u6A21_u7CCA_uFF1F_u90A3_u5C31_u5206_u800C_u6CBB_u4E4B&quot; class=&quot;headerlink&quot; title=&quot;規則很模糊？那就分而治之&quot;&gt;&lt;/a&gt;規則很模糊？那就分而治之&lt;/h2&gt;&lt;p&gt;因為概念詞會與斷好的每個詞作匹配，那麼匹配的順序就會顯得很重要，我的想法是先從大方向抽取主題，比如「訂房」這類有明確意圖的關鍵詞，再向下觀察地點、時間及其他細項，這很像一個分類器，我們將模糊的大領域切割成若干小領域，再將它們各個擊破：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/JVbysQO.png&quot; alt=&quot;Chatbot&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果一句話得出了最高相似概念是&lt;strong&gt;購物&lt;/strong&gt;，我們會走向與購物相關的規則，以避免一些雜項干擾了對核心概念的評估。這樣出來的結果確實會很好多，在設計新規則時也比較不擔心與原有的抵觸。&lt;/p&gt;
&lt;h2 id=&quot;u5BE6_u969B_u4F7F_u7528_u770B_u770B&quot;&gt;&lt;a href=&quot;#u5BE6_u969B_u4F7F_u7528_u770B_u770B&quot; class=&quot;headerlink&quot; title=&quot;實際使用看看&quot;&gt;&lt;/a&gt;實際使用看看&lt;/h2&gt;&lt;p&gt;我另外寫了一個 &lt;code&gt;console.py&lt;/code&gt; 把斷詞、去除停用詞、匹配這些功能都包覆起來，可以前往&lt;a href=&quot;https://github.com/zake7749/Chatbot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chatbot&lt;/a&gt;進行測試，不過要先準備好一份自己的詞向量才可以唷，我演示所使用的是 300 維的 skipgram，以維基百科和 A+ 醫學百科跟幾本小說作為訓練語料，如果一切都就緒了，就試著調用看看吧：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Chatbot.console &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Console&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console = Console(model_path=&lt;span class=&quot;string&quot;&gt;&quot;詞向量模型的相對路徑&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speech = input(&lt;span class=&quot;string&quot;&gt;&#39;Input a sentence:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res,path = console.rule_match(speech)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.write_output(speech,res,path)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;Case# 我的肚子好餓啊&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.5014	吃喝玩樂		餓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.3816	鬧鐘		肚子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.3736	病症		肚子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.1807	住宿		餓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.1580	天氣		餓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0000	觀光		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0000	購買		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;0.0000	股票		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u4E00_u4E9B_u5C55_u671B&quot;&gt;&lt;a href=&quot;#u4E00_u4E9B_u5C55_u671B&quot; class=&quot;headerlink&quot; title=&quot;一些展望&quot;&gt;&lt;/a&gt;一些展望&lt;/h2&gt;&lt;p&gt;如果還有後續的話，希望先實現看看各平台的 adapter，或者用機器學習來調適規則的權重，目前有些關鍵字的實用性是有些不如預期，我想這跟語料的選用也有很大的關係，在取得更多有效資源前，就先在這告個段落吧！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;2016 will be the year of conversational commerce&lt;br&gt;Chris Messina&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Facebook 釋出 Messenger API 後，形形色色的 Chatterbot 如雨後春筍般湧現：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rLIntyA.gif&quot; alt=&quot;messenger&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;Messenger chatbot - from Facebook&lt;/p&gt;

&lt;p&gt;「以對話式介面取代圖形化介面」、「2016年將成為對話式商務元年」，種種呼聲儼然令聊天機器人成為了一個 NLP 熱點，這將是一場介面革命，我們所專注的不再是色調與元素的微調，而是去思考如何令機器人在談吐間富含溫度，在語意上理解透徹，在思維上，更貼近一個真實的人。&lt;br&gt;
    
    </summary>
    
      <category term="自然語言處理" scheme="http://zake7749.github.io/categories/%E8%87%AA%E7%84%B6%E8%AA%9E%E8%A8%80%E8%99%95%E7%90%86/"/>
    
    
      <category term="Word2Vec" scheme="http://zake7749.github.io/tags/Word2Vec/"/>
    
      <category term="專題紀錄" scheme="http://zake7749.github.io/tags/%E5%B0%88%E9%A1%8C%E7%B4%80%E9%8C%84/"/>
    
  </entry>
  
  <entry>
    <title>以 gensim 訓練中文詞向量</title>
    <link href="http://zake7749.github.io/2016/08/28/word2vec-with-gensim/"/>
    <id>http://zake7749.github.io/2016/08/28/word2vec-with-gensim/</id>
    <published>2016-08-27T16:56:23.000Z</published>
    <updated>2016-11-05T09:25:28.268Z</updated>
    
    <content type="html">&lt;p&gt;最近正在嘗試幾種文本分類的算法，卻一直苦於沒有結構化的中文語料，原本是打算先爬下大把大把的部落格文章，再依 tag 將它們分門別類，可惜試了一陣子後，我見識到了理想和現實間的鴻溝。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/VnjnW7S.jpg&quot; alt=&quot;太麻煩的事我不會做&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;&lt;a href=&quot;https://github.com/zake7749/PTT-Text-Mining&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;儘管後來還是搞定了&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所以就找上了基於非監督學習的 word2vec，為了銜接後續的資料處理，這邊採用的是基於 python 的主題模型函式庫 &lt;a href=&quot;https://radimrehurek.com/gensim/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gensim&lt;/a&gt;。這篇教學並不會談太多 word2vec 的數學原理，而是考慮如何輕鬆又直覺地訓練中文詞向量，文章裡所有的程式碼都會傳上 &lt;a href=&quot;https://github.com/zake7749/word2vec_tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;，現在，就讓我們進入正題吧。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u53D6_u5F97_u8A9E_u6599&quot;&gt;&lt;a href=&quot;#u53D6_u5F97_u8A9E_u6599&quot; class=&quot;headerlink&quot; title=&quot;取得語料&quot;&gt;&lt;/a&gt;取得語料&lt;/h2&gt;&lt;p&gt;要訓練詞向量，第一步當然是取得資料集。由於 word2vec 是基於非監督式學習，訓練集一定一定要越大越好，語料涵蓋的越全面，訓練出來的結果也會越漂亮。我所採用的是維基百科於&lt;a href=&quot;https://dumps.wikimedia.org/zhwiki/20160820/zhwiki-20160820-pages-articles.xml.bz2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016/08/20的備份&lt;/a&gt;，文章篇數共有 2822639 篇，如果需要更近期的數據，可以前往&lt;a href=&quot;https://zh.wikipedia.org/wiki/Wikipedia:%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8B%E8%BD%BD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;維基百科:資料庫下載&lt;/a&gt;，不過請特別注意一點，要挑選的是以 &lt;code&gt;pages-articles.xml.bz2&lt;/code&gt; 結尾的備份，而不是以 &lt;code&gt;pages-articles-multistream.xml.bz2&lt;/code&gt; 結尾的備份唷，不然會在清理上出現一些異常，無法正常解析文章。&lt;/p&gt;
&lt;p&gt;在等待下載的這段時間，我們可以先把這次的主角&lt;code&gt;gensim&lt;/code&gt;配置好:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--upgrade gensim&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;維基百科下載好後，先別急著解壓縮，因為這是一份 xml 文件，裏頭佈滿了各式各樣的標籤，我們得先想辦法送走這群不速之客，不過也別太擔心，gensim 早已看穿了一切，藉由調用 &lt;a href=&quot;https://radimrehurek.com/gensim/corpora/wikicorpus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wikiCorpus&lt;/a&gt;，我們能很輕鬆的只取出文章的標題和內容。&lt;/p&gt;
&lt;p&gt;初始化&lt;code&gt;WikiCorpus&lt;/code&gt;後，能藉由&lt;code&gt;get_texts()&lt;/code&gt;可迭代每一篇文章，它所回傳的是一個tokens list，我以空白符將這些 tokens 串接起來，統一輸出到同一份文字檔裡。這邊要注意一件事，&lt;code&gt;get_texts()&lt;/code&gt;受&lt;code&gt;wikicorpus.py&lt;/code&gt;中的變數&lt;code&gt;ARTICLE_MIN_WORDS&lt;/code&gt;限制，只會回傳內容長度大於 &lt;em&gt;50&lt;/em&gt; 的文章。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; gensim.corpora &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; WikiCorpus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(sys.argv) != &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;Usage: python3 &quot;&lt;/span&gt; + sys.argv[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot; wiki_data_path&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logging.basicConfig(format=&lt;span class=&quot;string&quot;&gt;&#39;%(asctime)s : %(levelname)s : %(message)s&#39;&lt;/span&gt;, level=logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wiki_corpus = WikiCorpus(sys.argv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], dictionary=&amp;#123;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    texts_num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&quot;wiki_texts.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;,encoding=&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; text &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; wiki_corpus.get_texts():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            output.write(&lt;span class=&quot;string&quot;&gt;b&#39; &#39;&lt;/span&gt;.join(text).decode(&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            texts_num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; texts_num % &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(&lt;span class=&quot;string&quot;&gt;&quot;已處理 %d 篇文章&quot;&lt;/span&gt; % texts_num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在shell 裡輸入：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python3 wiki_to_txt&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt; zhwiki-&lt;span class=&quot;number&quot;&gt;20160820&lt;/span&gt;-pages-articles&lt;span class=&quot;selector-class&quot;&gt;.xml&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.bz2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這約需花費20分鐘(on Mac Air)，就先讓我們看一下接下來還要做些什麼吧~&lt;/p&gt;
&lt;h2 id=&quot;u958B_u59CB_u65B7_u8A5E&quot;&gt;&lt;a href=&quot;#u958B_u59CB_u65B7_u8A5E&quot; class=&quot;headerlink&quot; title=&quot;開始斷詞&quot;&gt;&lt;/a&gt;開始斷詞&lt;/h2&gt;&lt;p&gt;我們有清完標籤的語料了，第二件事就是要把語料中每個句子，進一步拆解成一個一個詞，這個步驟稱為「斷詞」。中文斷詞的工具比比皆是，這裏我採用的是 &lt;a href=&quot;https://github.com/fxsjy/jieba&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jieba&lt;/a&gt;，儘管它在繁體中文的斷詞上還是有些不如&lt;code&gt;CKIP&lt;/code&gt;，但他實在太簡單、太方便、太好調用了，足以彌補這一點小缺憾：&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;快速安裝結巴&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 斷詞示例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;seg_list = jieba.cut(&lt;span class=&quot;string&quot;&gt;&quot;我来到北京清华大学&quot;&lt;/span&gt;, cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;Default Mode: &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;/ &quot;&lt;/span&gt;.join(seg_list))  &lt;span class=&quot;comment&quot;&gt;# 精确模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#輸出 Default Mode: 我/ 来到/ 北京/ 清华大学&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在，我們上一階段的檔案也差不多出爐了，以vi打開看起來會是這個樣子：&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;歐幾里得 西元前三世紀的希臘數學家 現在被認為是幾何之父 此畫為拉斐爾的作品 雅典學院 数学 是利用符号语言研究數量 结构 变化以及空间等概念的一門学科 从某种角度看屬於形式科學的一種 數學透過抽象化和邏輯推理的使用 由計數 計算 數學家們拓展這些概念&lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Opps！出了一點狀況，我們發現簡體跟繁體混在一起了，比如「数学」與「數學」會被 word2vec 當成兩個不同的詞，所以我們在斷詞前，還需加上一道繁簡轉換的手續。然而我們的語料集相當龐大，一般的繁簡轉換會有些力不從心，建議採用&lt;a href=&quot;https://github.com/BYVoid/OpenCC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenCC&lt;/a&gt;，轉換的方式很簡單：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;opencc -&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; wiki_texts&lt;span class=&quot;selector-class&quot;&gt;.txt&lt;/span&gt; -o wiki_zh_tw&lt;span class=&quot;selector-class&quot;&gt;.txt&lt;/span&gt; -c s2tw.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是要將繁體轉為簡體，只要將config的參數從&lt;code&gt;s2tw.json&lt;/code&gt;改成&lt;code&gt;t2s.json&lt;/code&gt;即可。現在再檢查一次&lt;code&gt;wiki_zh_tw.txt&lt;/code&gt;，的確只剩下繁體字了，終於能進入斷詞，輸入&lt;code&gt;python3 segment.py&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logging.basicConfig(format=&lt;span class=&quot;string&quot;&gt;&#39;%(asctime)s : %(levelname)s : %(message)s&#39;&lt;/span&gt;, level=logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# jieba custom setting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jieba.set_dictionary(&lt;span class=&quot;string&quot;&gt;&#39;jieba_dict/dict.txt.big&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# load stopwords set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stopwordset = set()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&#39;jieba_dict/stopwords.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;,encoding=&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; sw:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sw:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stopwordset.add(line.strip(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    output = open(&lt;span class=&quot;string&quot;&gt;&#39;wiki_seg.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    texts_num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&#39;wiki_zh_tw.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; content :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; content:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            words = jieba.cut(line, cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; stopwordset:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    output.write(word +&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            texts_num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; texts_num % &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(&lt;span class=&quot;string&quot;&gt;&quot;已完成前 %d 行的斷詞&quot;&lt;/span&gt; % texts_num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    output.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Stopwords_and_Window&quot;&gt;&lt;a href=&quot;#Stopwords_and_Window&quot; class=&quot;headerlink&quot; title=&quot;Stopwords and Window&quot;&gt;&lt;/a&gt;Stopwords and Window&lt;/h3&gt;&lt;p&gt;好啦，這個東西大概要跑個 80 分鐘，&lt;s&gt;先讓我講些幹話&lt;/s&gt;，先讓我們看看上頭做了什麼。除了之前演示的斷詞外，這邊還多做了兩件事，一是調整jieba的辭典，讓他對繁體斷詞比較友善，二是引入了&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%81%9C%E7%94%A8%E8%AF%8D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;停用詞&lt;/a&gt;，停用詞就是像英文中的 the,a,this，中文的你我他，與其他詞相比顯得不怎麼重要，對文章主題也無關緊要的，就可以將它視為停用詞。而要排除停用詞的理由，其實與word2vec的實作概念大大相關，由於在開頭講明了不深究概念，就讓我舉個例子替代長篇大論。&lt;/p&gt;
&lt;p&gt;首先，在word2vec有一個概念叫 windows，我習慣叫他窗口，因為它給我的感覺跟TCP 那個會滑來滑去的東東很像。&lt;/p&gt;
&lt;h2 id=&quot;Word2Vec&quot;&gt;&lt;a href=&quot;#Word2Vec&quot; class=&quot;headerlink&quot; title=&quot;Word2Vec&quot;&gt;&lt;/a&gt;Word2Vec&lt;/h2&gt;&lt;p&gt;很顯然，一個詞的意涵跟他的左右鄰居很有關係，比如「雨越下越大，茶越充越淡」，什麼會「下」？「雨」會下，什麼會「淡」？茶會「淡」，這樣的類比舉不勝舉，那麼，若把思維逆轉過來呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/KR2ISOg.jpg&quot; alt=&quot;逆轉&quot;&gt;&lt;/p&gt;
&lt;p&gt;顯然，我們或多或少能從左右鄰居是誰，猜出中間的是什麼，這很像我們國高中時天天在練的英文克漏字。那麼問題來了，左右鄰居有誰？能更精確地說，你要往左往右看幾個？假設我們以「孔乙己 一到 店 所有 喝酒 的 人 便都 看著 他 笑」為例，如果往左往右各看一個：&lt;/p&gt;
&lt;figure class=&quot;highlight prolog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[孔乙己 一到] 店 所有 喝酒 的 人 便 都 看著 他 笑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[孔乙己 一到 店] 所有 喝酒 的 人 便 都 看著 他 笑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;孔乙己 [一到 店 所有] 喝酒 的 人 便 都 看著 他 笑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;孔乙己 一到 [店 所有 喝酒] 的 人 便 都 看著 他 笑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這樣就構成了一個 size=1 的 windows，這個 1 是極端的例子，為了讓我們看看有停用詞跟沒停用詞差在哪，這句話去除了停用詞應該會變成：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;孔乙己 一到 店 所有 喝酒 人 看著 笑&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們看看「人」的窗口變化，原本是「的 人 便」，後來是「喝酒 人 看著」，相比原本的情形，去除停用詞後，我們對「人」這個詞有更多認識，比如人會喝酒，人會看東西，當然啦，這是我以口語的表達，機器並不會這麼想，機器知道的是人跟喝酒會有某種關聯，跟看會有某種關聯，但儘管如此，也遠比本來的「的 人 便」好太多太多了。&lt;/p&gt;
&lt;p&gt;就在剛剛，我的斷詞已經跑完了，現在，讓我們進入收尾的階段吧&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016&lt;span class=&quot;selector-tag&quot;&gt;-08-26&lt;/span&gt; 22&lt;span class=&quot;selector-pseudo&quot;&gt;:27&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:59&lt;/span&gt;,480 : &lt;span class=&quot;selector-tag&quot;&gt;INFO&lt;/span&gt; : 已處理 260000 個 &lt;span class=&quot;selector-tag&quot;&gt;token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u8A13_u7DF4_u8A5E_u5411_u91CF&quot;&gt;&lt;a href=&quot;#u8A13_u7DF4_u8A5E_u5411_u91CF&quot; class=&quot;headerlink&quot; title=&quot;訓練詞向量&quot;&gt;&lt;/a&gt;訓練詞向量&lt;/h2&gt;&lt;p&gt;這是最簡單的部分，同時也是最困難的部分，簡單的是程式碼，困難的是詞向量效能上的微調與後訓練。對了，如果你已經對詞向量和語言模型有些研究，在輸入&lt;code&gt;python3 train.py&lt;/code&gt;之前，建議先看一下之後的內文，相信我，你會需要的。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; gensim.models &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; word2vec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logging.basicConfig(format=&lt;span class=&quot;string&quot;&gt;&#39;%(asctime)s : %(levelname)s : %(message)s&#39;&lt;/span&gt;, level=logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sentences = word2vec.Text8Corpus(&lt;span class=&quot;string&quot;&gt;&quot;wiki_seg.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    model = word2vec.Word2Vec(sentences, size=&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    model.save_word2vec_format(&lt;span class=&quot;string&quot;&gt;u&quot;med250.model.bin&quot;&lt;/span&gt;, binary=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# how to load a model ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# model = word2vec.Word2Vec.load_word2vec_format(&quot;your_model.bin&quot;, binary=True)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;扣掉&lt;code&gt;logging&lt;/code&gt;與註釋就剩下三行，真是精簡的漂亮。上頭通篇的學問在&lt;code&gt;model = word2vec.Word2Vec(sentences, size=250)&lt;/code&gt;，我們先讓它現出原型：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;gensim&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;models&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;word2vec&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Word2Vec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sentences=None, size=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, alpha=&lt;span class=&quot;number&quot;&gt;0.025&lt;/span&gt;, window=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, min_count=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, max_vocab_size=None, sample=&lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;, seed=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, workers=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, min_alpha=&lt;span class=&quot;number&quot;&gt;0.0001&lt;/span&gt;, sg=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, hs=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, negative=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, cbow_mean=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, hashfxn=&amp;lt;built-in function hash&amp;gt;, iter=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, null_word=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, trim_rule=None, sorted_vocab=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, batch_words=&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這抵得上 train.py 的所有程式碼了。不過也別太擔心，裏頭多數是無關緊要的參數，比較關鍵的大概是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sentences:當然了，這是要訓練的句子集，沒有他就不用跑了&lt;/li&gt;
&lt;li&gt;size:這表示的是訓練出的詞向量會有幾維&lt;/li&gt;
&lt;li&gt;alpha:機器學習中的學習率，這東西會逐漸收斂到 &lt;code&gt;min_alpha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sg:這個不是三言兩語能說完的，sg=1表示採用skip-gram,sg=0 表示採用cbow&lt;/li&gt;
&lt;li&gt;window:還記得孔乙己的例子嗎？往左往右看幾個字的意思，印象中原作者論文裡寫 cbow 採用 5 是不錯的選擇&lt;/li&gt;
&lt;li&gt;workers:執行緒數目，除非電腦不錯，不然建議別超過 4&lt;/li&gt;
&lt;li&gt;min_count:若這個詞出現的次數小於&lt;code&gt;min_count&lt;/code&gt;，那他就不會被視為訓練對象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u8A5E_u5411_u91CF_u5BE6_u9A57&quot;&gt;&lt;a href=&quot;#u8A5E_u5411_u91CF_u5BE6_u9A57&quot; class=&quot;headerlink&quot; title=&quot;詞向量實驗&quot;&gt;&lt;/a&gt;詞向量實驗&lt;/h2&gt;&lt;p&gt;訓練完成後，讓我們來測試一下模型的效能，運行&lt;code&gt;python3 demo.py&lt;/code&gt;。由於 gensim 將整個模型讀了進來並作了一層映射，所以記憶體會消耗相當多，如果出現了&lt;code&gt;MemoryError&lt;/code&gt;，可能得調整一下&lt;code&gt;min_count&lt;/code&gt;或對常用詞作一層快取，這點要特別注意一下。&lt;/p&gt;
&lt;p&gt;先來試試相似詞排序吧！&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;飲料&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;相似詞前 100 排序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;飲品,0&lt;span class=&quot;selector-class&quot;&gt;.8439314365386963&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;果汁,0&lt;span class=&quot;selector-class&quot;&gt;.7858869433403015&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;罐裝,0&lt;span class=&quot;selector-class&quot;&gt;.7305712699890137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;冰淇淋,0&lt;span class=&quot;selector-class&quot;&gt;.702262818813324&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;酸奶,0&lt;span class=&quot;selector-class&quot;&gt;.7007108926773071&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;口香糖,0&lt;span class=&quot;selector-class&quot;&gt;.6987590193748474&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;酒類,0&lt;span class=&quot;selector-class&quot;&gt;.6967358589172363&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可口可樂,0&lt;span class=&quot;selector-class&quot;&gt;.6885123252868652&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;酒精類,0&lt;span class=&quot;selector-class&quot;&gt;.6843742728233337&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;含酒精,0&lt;span class=&quot;selector-class&quot;&gt;.6825539469718933&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;啤酒,0&lt;span class=&quot;selector-class&quot;&gt;.6816493272781372&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;薯片,0&lt;span class=&quot;selector-class&quot;&gt;.6779764294624329&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;紅茶,0&lt;span class=&quot;selector-class&quot;&gt;.6656282544136047&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;奶茶,0&lt;span class=&quot;selector-class&quot;&gt;.656740128993988&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;提神,0&lt;span class=&quot;selector-class&quot;&gt;.6566425561904907&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;牛奶,0&lt;span class=&quot;selector-class&quot;&gt;.6556192636489868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;檸檬茶,0&lt;span class=&quot;selector-class&quot;&gt;.6494661569595337&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;籃球&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;相似詞前 100 排序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;美式足球,0&lt;span class=&quot;selector-class&quot;&gt;.6463411450386047&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;橄欖球,0&lt;span class=&quot;selector-class&quot;&gt;.6382837891578674&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;男子籃球,0&lt;span class=&quot;selector-class&quot;&gt;.6187020540237427&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;冰球,0&lt;span class=&quot;selector-class&quot;&gt;.6056296825408936&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;棒球,0&lt;span class=&quot;selector-class&quot;&gt;.5859025716781616&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;籃球運動,0&lt;span class=&quot;selector-class&quot;&gt;.5831792950630188&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;籃球員,0&lt;span class=&quot;selector-class&quot;&gt;.5782726407051086&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;籃球隊,0&lt;span class=&quot;selector-class&quot;&gt;.576259195804596&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排球,0&lt;span class=&quot;selector-class&quot;&gt;.5743488073348999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;黑子,0&lt;span class=&quot;selector-class&quot;&gt;.5609416961669922&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;籃球比賽,0&lt;span class=&quot;selector-class&quot;&gt;.5498511791229248&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打球,0&lt;span class=&quot;selector-class&quot;&gt;.5496408939361572&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;中國籃球,0&lt;span class=&quot;selector-class&quot;&gt;.5471529960632324&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;男籃,0&lt;span class=&quot;selector-class&quot;&gt;.5460700392723083&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ncaa&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.543986439704895&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;投投,0&lt;span class=&quot;selector-class&quot;&gt;.5439497232437134&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;曲棍球,0&lt;span class=&quot;selector-class&quot;&gt;.5435376167297363&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;nba&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.5415610671043396&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前100太多了，所以只把前幾個結果貼上來，我們也能調用&lt;code&gt;model.similarity(word2,word1)&lt;/code&gt;來直接取得兩個詞的相似度：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;冰沙 刨冰&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;計算 &lt;span class=&quot;selector-tag&quot;&gt;Cosine&lt;/span&gt; 相似度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.631961417455&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;電腦 飛鏢&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;計算 &lt;span class=&quot;selector-tag&quot;&gt;Cosine&lt;/span&gt; 相似度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.154503715708&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;電腦 程式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;計算 &lt;span class=&quot;selector-tag&quot;&gt;Cosine&lt;/span&gt; 相似度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.5021829415&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;衛生紙 漫畫&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;計算 &lt;span class=&quot;selector-tag&quot;&gt;Cosine&lt;/span&gt; 相似度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.167776641495&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;能稍微區隔出詞與詞之間的主題，整體來說算是可以接受的了。&lt;/p&gt;
&lt;h3 id=&quot;u66F4_u4E0A_u4E00_u5C64_u6A13&quot;&gt;&lt;a href=&quot;#u66F4_u4E0A_u4E00_u5C64_u6A13&quot; class=&quot;headerlink&quot; title=&quot;更上一層樓&quot;&gt;&lt;/a&gt;更上一層樓&lt;/h3&gt;&lt;p&gt;如何優化詞向量的表現？這其實有蠻多方法的，大方向是從應用的角度出發，我們能針對應用特化的語料進行再訓練，除此之外，斷詞器的選擇也很重要，它很大程度的決定什麼詞該在什麼地方出現，如果發現 &lt;code&gt;jieba&lt;/code&gt; 有些力不能及的，不妨試著採用別的斷詞器，或是試著在 &lt;code&gt;jieba&lt;/code&gt; 自訂辭典，調一下每個詞的權重。&lt;/p&gt;
&lt;p&gt;應用考慮好了，接著看看模型，我們可以調整 &lt;code&gt;model()&lt;/code&gt; 的參數，比方窗口大小、維度、學習率，進一步還能比較 skip-gram 與 cbow 的效能差異，什麼，你說不知道 skip-gram 跟 cbow 是什麼？且看下回分解。&lt;/p&gt;
&lt;h2 id=&quot;u53C3_u8003_u8CC7_u6599&quot;&gt;&lt;a href=&quot;#u53C3_u8003_u8CC7_u6599&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://textminingonline.com/training-word2vec-model-on-english-wikipedia-by-gensim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Training Word2Vec Model on English Wikipedia by Gensim&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近正在嘗試幾種文本分類的算法，卻一直苦於沒有結構化的中文語料，原本是打算先爬下大把大把的部落格文章，再依 tag 將它們分門別類，可惜試了一陣子後，我見識到了理想和現實間的鴻溝。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/VnjnW7S.jpg&quot; alt=&quot;太麻煩的事我不會做&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;img-meta&quot;&gt;&lt;a href=&quot;https://github.com/zake7749/PTT-Text-Mining&quot;&gt;儘管後來還是搞定了&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所以就找上了基於非監督學習的 word2vec，為了銜接後續的資料處理，這邊採用的是基於 python 的主題模型函式庫 &lt;a href=&quot;https://radimrehurek.com/gensim/&quot;&gt;gensim&lt;/a&gt;。這篇教學並不會談太多 word2vec 的數學原理，而是考慮如何輕鬆又直覺地訓練中文詞向量，文章裡所有的程式碼都會傳上 &lt;a href=&quot;https://github.com/zake7749/word2vec_tutorial&quot;&gt;github&lt;/a&gt;，現在，就讓我們進入正題吧。&lt;/p&gt;
    
    </summary>
    
      <category term="自然語言處理" scheme="http://zake7749.github.io/categories/%E8%87%AA%E7%84%B6%E8%AA%9E%E8%A8%80%E8%99%95%E7%90%86/"/>
    
    
      <category term="Word Embedding" scheme="http://zake7749.github.io/tags/Word-Embedding/"/>
    
      <category term="Word2Vec" scheme="http://zake7749.github.io/tags/Word2Vec/"/>
    
      <category term="gensim" scheme="http://zake7749.github.io/tags/gensim/"/>
    
  </entry>
  
  <entry>
    <title>淺談Java的常數池</title>
    <link href="http://zake7749.github.io/2015/11/08/constantPool/"/>
    <id>http://zake7749.github.io/2015/11/08/constantPool/</id>
    <published>2015-11-08T11:18:35.000Z</published>
    <updated>2016-10-21T12:32:01.303Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 	What is the output of this program ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *	猜猜看，這個程式的輸出是什麼？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;public&lt;/span&gt; class ConstanPool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static void main(&lt;span class=&quot;keyword&quot;&gt;String[] &lt;/span&gt;args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ConstanPool &lt;span class=&quot;meta&quot;&gt;cp&lt;/span&gt; = new ConstanPool()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;meta&quot;&gt;cp&lt;/span&gt;.aboutString()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void aboutString()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s2&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt; = new &lt;span class=&quot;keyword&quot;&gt;String(&quot;Hello&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s4&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hel&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;lo&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s5&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hel&quot;&lt;/span&gt; + new &lt;span class=&quot;keyword&quot;&gt;String(&quot;lo&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s7&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;He&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s8&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;llo&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s9&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;s7&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;s8&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s10&lt;/span&gt; = new &lt;span class=&quot;keyword&quot;&gt;String(&quot;Hello&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * Try this :)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s2&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s3&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s4&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s5&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s9&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s10&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Answer&quot;&gt;&lt;a href=&quot;#Answer&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h3&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u9019_u662F_u4EC0_u9EBC_u5DEB_u8853__3F&quot;&gt;&lt;a href=&quot;#u9019_u662F_u4EC0_u9EBC_u5DEB_u8853__3F&quot; class=&quot;headerlink&quot; title=&quot;這是什麼巫術 ?&quot;&gt;&lt;/a&gt;這是什麼巫術 ?&lt;/h4&gt;&lt;p&gt;首先，在Java中的&lt;code&gt;==&lt;/code&gt;有兩種意涵：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;對於基本資料型態，比對兩者的數值&lt;br&gt;對於物件，則是比對兩者存放的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;String是個物件，所以對String使用==，我們其實是在比較物件的記憶體位置，這就解決了最後一個問題，s3與s10都是經過&lt;code&gt;new&lt;/code&gt;配置而成，實際上new傳回了兩個String，只不過他們的字串值都叫做Hello而已，比對兩者的位置當然會得出false。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;stack&lt;/th&gt;
&lt;th&gt;heap&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;s3 -&amp;gt;&lt;/td&gt;
&lt;td&gt;“Hello”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s10-&amp;gt;&lt;/td&gt;
&lt;td&gt;“Hello”&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果明白了最後一題在搞什麼花樣，問題來了，為什麼第一題是true？&lt;/p&gt;
&lt;h4 id=&quot;u5E38_u6578_u6C60&quot;&gt;&lt;a href=&quot;#u5E38_u6578_u6C60&quot; class=&quot;headerlink&quot; title=&quot;常數池&quot;&gt;&lt;/a&gt;常數池&lt;/h4&gt;&lt;p&gt;讓我們從答案往回推，既然第一題是true，也就代表s1與s2所指向的是&lt;strong&gt;同一個物件&lt;/strong&gt;，而為何會指向同一個物件呢？&lt;/p&gt;
&lt;p&gt;其實是Java存在一個特殊空間，把&lt;strong&gt;編譯時期&lt;/strong&gt;就已經確定的&lt;strong&gt;常數(constant)&lt;/strong&gt;包進.class，執行時再從這個空間統一拿出。這個特殊空間稱作常數池或常量池(constant pool)，它主要保管這兩種東西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字面量(Literal)&lt;br&gt;包含了常數以及既定字串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Symbolic References&lt;br&gt;主要是類別和介面的&lt;a href=&quot;https://en.wikipedia.org/wiki/Fully_qualified_name&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fully qualified name&lt;/a&gt;，欄位和方法的名稱。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每當編譯完成，編譯器會將上述兩者包進.class中。原始碼中每一個字面量會被統一構成一張常數表，並透過索引的型式參照它。而當JVM載入這份.class檔時，會特別為常數池在方法區建立一個資料結構，並把常數表中所有的字面量在Heap上生成一個實例(即是String.intern()的工作內容)。&lt;/p&gt;
&lt;p&gt;除了String，Java對&lt;code&gt;double&lt;/code&gt;及&lt;code&gt;float&lt;/code&gt;以外的6個基本類別在區間&lt;code&gt;-128~127&lt;/code&gt;都實作了常數池，也就是說&lt;/p&gt;
&lt;figure class=&quot;highlight protobuf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Integer i1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer i2 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer i3 = &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer i4 = &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(i1==i2);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(i3==i4);&lt;span class=&quot;comment&quot;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;關於這點，我們也可從Integer類別中valueOf的實作得到證實：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//IntegerCache.low  預設為 -128&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//IntegerCache.high 預設為  127&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Integer &lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; IntegerCache.high &amp;gt;= &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= IntegerCache.low &amp;amp;&amp;amp; i &amp;lt;= IntegerCache.high)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; IntegerCache.cache[i + (-IntegerCache.low)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Integer(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;psBox&quot;&gt;&lt;span class=&quot;ps&quot;&gt;P.S&lt;/span&gt;&lt;br&gt;我會提到valueOf是因為&lt;code&gt;Integer i1 = 1&lt;/code&gt;其實是個編譯器蜜糖，編譯器會將上述程式碼展開成&lt;code&gt;Integer i1 = valueOf(1)&lt;/code&gt;，對於這部分更深入的細節，可以餵食Google「Java裝箱拆箱」。&lt;br&gt;&lt;/div&gt;

&lt;p&gt;一般來說，常數池是這麼運作的(以string及題目為例)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;編譯時發現字串，若常數池中已存在，則將現有的(先前找到的)位置賦予它，否則將該字串壓入常數池，並紀錄位置&lt;/li&gt;
&lt;li&gt;當載入class時，JVM會尋找.class的常數表，發現了字串常量&lt;code&gt;Hello&lt;/code&gt;，在heap中生成對應的實例。&lt;/li&gt;
&lt;li&gt;接著JVM會對常數池的入口位置進行解析，首先會找到字串&lt;code&gt;s1&lt;/code&gt;的字面量&lt;code&gt;Hello&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;由於常數池中已經存在&lt;code&gt;Hello&lt;/code&gt;，所以提供常數池的引用給&lt;code&gt;s1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;之後JVM找到&lt;code&gt;s2&lt;/code&gt;的字面量&lt;code&gt;Hello&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;由於常數池中已經存在&lt;code&gt;Hello&lt;/code&gt;，所以仍舊將&lt;code&gt;s2&lt;/code&gt;指向已經生成好的&lt;code&gt;Hello&lt;/code&gt;，而非再產生一個&lt;code&gt;Hello&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由此我們也能發現常數池的優點，它達到了共享的效果，避免資源頻繁產生或釋放造成不必要的浪費。&lt;/p&gt;
&lt;p&gt;關於第二題 (s1==s3) 為false，是因為new是動態產生新的物件，其跟s1接收到的Hello自然是不同的，但是要注意，new 仍舊會觸發常數池存取，如果今天&lt;code&gt;s3 = new String(&amp;quot;Hello&amp;quot;);&lt;/code&gt;是第一行，常數池的處理會變成這樣：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;當載入class時，JVM會尋找.class的常數表，發現了字串常量&lt;code&gt;Hello&lt;/code&gt;，在heap中生成對應的實例。&lt;/li&gt;
&lt;li&gt;因為 s3 使用的是 new ，所以其不引用常數池，而是在heap生成一個新的String物件&lt;/li&gt;
&lt;li&gt;所以此時heap實際上存在&lt;strong&gt;兩份物件&lt;/strong&gt;，一個是讓常數池提供引用的，另一個是s3持有的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直觀來看，= 與 new 都會進行常數池的檢查，就像先前說的，編譯器找的是原始碼中的字面量，它才不會管你是 new 還是 = 。不過在執行時， = 會引用常數池，new則是另外生成新的物件。&lt;/p&gt;
&lt;p&gt;關於第三題 (s1==s4) 為true，是Java的優化功能之一，編譯器會將&lt;code&gt;&amp;quot;Hel&amp;quot;+&amp;quot;lo&amp;quot;&lt;/code&gt;組合成&lt;code&gt;&amp;quot;Hello&amp;quot;&lt;/code&gt;，因此道理和(s1==s2)相同。&lt;/p&gt;
&lt;p&gt;關於第四題，近似於第二題的概念，具體來說&lt;code&gt;String s5 = &amp;quot;Hel&amp;quot; + new String(&amp;quot;lo&amp;quot;);&lt;/code&gt;做了三件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;常數池存放了 “Hel” 及 “lo”，並產生對應的實例&lt;/li&gt;
&lt;li&gt;heap 再另外new出一個新的 “lo”&lt;/li&gt;
&lt;li&gt;使用String方法.append()合併”Hel”與”lo”，傳回一個新字串給s5&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第五題則是和第三題的類比，會回傳false可不是因為它是拆成He與llo，而是跟先前提到的優化有關，它只會進行常數的優化，這是因為編譯器不知道我們在&lt;code&gt;String s9 = s7+s8;&lt;/code&gt;這行前，會不會對&lt;code&gt;s7&lt;/code&gt;與&lt;code&gt;s8&lt;/code&gt;的值進行修改，若貿然的假設&lt;code&gt;s7&lt;/code&gt;仍是He或&lt;code&gt;s8&lt;/code&gt;仍是llo，反而可能導致預期外的錯誤，這風險可不是編譯器能承擔的，自然也不會負責這個部分。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 	What is the output of this program ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *	猜猜看，這個程式的輸出是什麼？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;public&lt;/span&gt; class ConstanPool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static void main(&lt;span class=&quot;keyword&quot;&gt;String[] &lt;/span&gt;args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ConstanPool &lt;span class=&quot;meta&quot;&gt;cp&lt;/span&gt; = new ConstanPool()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;meta&quot;&gt;cp&lt;/span&gt;.aboutString()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void aboutString()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s2&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt; = new &lt;span class=&quot;keyword&quot;&gt;String(&quot;Hello&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s4&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hel&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;lo&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s5&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Hel&quot;&lt;/span&gt; + new &lt;span class=&quot;keyword&quot;&gt;String(&quot;lo&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s7&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;He&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s8&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;llo&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s9&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;s7&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;s8&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;s10&lt;/span&gt; = new &lt;span class=&quot;keyword&quot;&gt;String(&quot;Hello&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * Try this :)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s2&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s3&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s4&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s5&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s9&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt;=&lt;span class=&quot;symbol&quot;&gt;=s10&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="程式語言" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/"/>
    
      <category term="Java" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/Java/"/>
    
    
      <category term="Java" scheme="http://zake7749.github.io/tags/Java/"/>
    
      <category term="解題" scheme="http://zake7749.github.io/tags/%E8%A7%A3%E9%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>打造一個書籤管理網站</title>
    <link href="http://zake7749.github.io/2015/10/26/homework3/"/>
    <id>http://zake7749.github.io/2015/10/26/homework3/</id>
    <published>2015-10-26T12:03:07.000Z</published>
    <updated>2016-10-21T12:31:36.638Z</updated>
    
    <content type="html">&lt;p&gt;最近系上的OJ不幸陣亡，打算自己東敲西打搞出一個新的批改系統，適逢這次的作業是個書籤管理網，需要登入介面及支援線上修改，不妨就拿來小試身手吧 ~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;目前整個網站都放在&lt;a href=&quot;https://github.com/zake7749/Leaftag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上，這篇文章只摘記了一些實作方法與概念，若有任何問題或改進方向歡迎留言及提出Issue。&lt;/p&gt;
&lt;h2 id=&quot;u7DB2_u7AD9_u6982_u89C0&quot;&gt;&lt;a href=&quot;#u7DB2_u7AD9_u6982_u89C0&quot; class=&quot;headerlink&quot; title=&quot;網站概觀&quot;&gt;&lt;/a&gt;網站概觀&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RyXs7Nd.png&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;
&lt;p&gt;這是一個簡單的書籤管理網站，不妨就當成會走路的「我的最愛」吧。&lt;/p&gt;
&lt;p&gt;使用者登入後，就能夠新增/刪改自己的書籤集。此外，連結多起來時，也提供了篩選功能可快速取得需要的書籤。&lt;/p&gt;
&lt;p&gt;作業要求是這麼說啦，不過目前登入與註冊都蠻方便的，所以當成個線上筆記條也不賴。以後出門在外，瀏覽到了什麼精彩文章，也不必再發訊息給自己，就直接在&lt;a href=&quot;http://140.116.245.148/WebCourse/students/f74026284/hw3/login.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeafTag&lt;/a&gt;上留下足跡吧。&lt;/p&gt;
&lt;h2 id=&quot;u5F9E_u767B_u5165_u9801_u9762_u8AAA_u8D77&quot;&gt;&lt;a href=&quot;#u5F9E_u767B_u5165_u9801_u9762_u8AAA_u8D77&quot; class=&quot;headerlink&quot; title=&quot;從登入頁面說起&quot;&gt;&lt;/a&gt;從登入頁面說起&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/6fysL00.png&quot; alt=&quot;Imgur&quot;&gt;&lt;br&gt;&lt;span class=&quot;img-detail&quot;&gt;很熟悉嗎？其實是照著Github刻出來的(´･ω･`) &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;網站的運作流程大致是這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;              SESSION之壁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  login.html  --login--&amp;gt;   index.php - 標籤管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      |&lt;span class=&quot;string&quot;&gt;           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;        metaSearch.php - 資料搜尋&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;        update.php - 個人資訊管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register.html     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;        上述三者使用navbar.html切換&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;當登入成功後，會在伺服端建立&lt;code&gt;$_SESSION[&amp;#39;userID&amp;#39;]&lt;/code&gt;，除了告知目前的使用者是誰外，也可透過檢測&lt;code&gt;$_SESSION[&amp;#39;userID&amp;#39;]&lt;/code&gt;來阻止未登入用戶存取頁面：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//如果沒記錄登入訊息，就把用戶送回登入頁面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  session_start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_SESSION[&lt;span class=&quot;string&quot;&gt;&#39;userID&#39;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    header(&lt;span class=&quot;string&quot;&gt;&quot;Location: login.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除了metasearch以外，各頁面對php的請求統一會送往&lt;code&gt;action.php&lt;/code&gt;，在表單中會設置一個隱藏欄位或參數&lt;code&gt;action&lt;/code&gt;，我透過&lt;code&gt;switch(_POST[&amp;quot;action&amp;quot;])&lt;/code&gt;來告知接下來伺服端該做什麼：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Get the action command from client&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Usage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      switch(_POST[&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 0 : login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 1 : Register&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 2 : Logout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 3 : Add a tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 4 : Modify a tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 5 : Delete a tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 6 : Update personal data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - 7 : List all the tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;switch ($_POST[&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;0&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      login($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;1&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      register($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;2&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      logout();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;3&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      addTag($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;4&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      modifyTag($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;5&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      deleteTag($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;6&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      updateData($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  case &#39;7&#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      listAllTags($link);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比方&lt;code&gt;login.html&lt;/code&gt;就向後端送出了表單內容與&lt;code&gt;action=0&lt;/code&gt;;&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; login($db)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $escapeUN = mysql_real_escape_string($_POST[&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $query= &lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM `user_table` WHERE username = &#39;&quot;&lt;/span&gt;.$escapeUN.&lt;span class=&quot;string&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $result= mysql_query($query,$db) or die (&lt;span class=&quot;string&quot;&gt;&quot;Error in query: $query.&quot;&lt;/span&gt;. mysql_error());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $rows=mysql_fetch_array($result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $password = $rows[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if(md5($_POST[&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;]) == $password)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo(&lt;span class=&quot;string&quot;&gt;&quot;Success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $_SESSION[&lt;span class=&quot;string&quot;&gt;&quot;userID&quot;&lt;/span&gt;] = $_POST[&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo(&lt;span class=&quot;string&quot;&gt;&quot;Wrong username or password.&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;action.php&lt;/code&gt; 不會輸出任何頁面，而只簡單的回報工作成果，這全都要歸功於 AJAX 的發明。&lt;/p&gt;
&lt;h3 id=&quot;u5229_u7528AJAX_u4F86_u6E9D_u901A_u5427&quot;&gt;&lt;a href=&quot;#u5229_u7528AJAX_u4F86_u6E9D_u901A_u5427&quot; class=&quot;headerlink&quot; title=&quot;利用AJAX來溝通吧&quot;&gt;&lt;/a&gt;利用AJAX來溝通吧&lt;/h3&gt;&lt;p&gt;在上古時期，客戶端使用Form提交時，會把資料以POST/GET的方式丟到後端，伺服端處理好請求後，再回傳一個新的網頁，最糟糕的是，這個全新網頁和原本使用者用來提交資料的網頁幾乎一模一樣，無疑是在浪費頻寬與時間。&lt;br&gt;於是有人想到了，「我們每次提交表單時，&lt;strong&gt;就只更新需要更新的部分&lt;/strong&gt;，別把整個頁面都重新整理」，這就是AJAX的中心思想。以&lt;code&gt;login.html&lt;/code&gt;為例，使用者送出請求後，如果成功，直接登入系統，失敗則只在 Sign in 下追加一行提示訊息，而非把整個頁面重刷一次。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--login.html表單內容--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;user-information&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Username&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pw&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;gitbuh-submit-button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sign in&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onClick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Submit()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;response-text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;feedback&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按下送出後，AJAX會將資料擲往伺服器，再將伺服器的輸出(&lt;code&gt;echo&lt;/code&gt;/&lt;code&gt;print&lt;/code&gt;)填入id為&lt;code&gt;response-text&lt;/code&gt;的區塊中。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--JQuery with AJAX --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Submit=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//該傳往哪個php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url: &lt;span class=&quot;string&quot;&gt;&quot;action.php&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//把表格序列化即是把資料串起來&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//比如username=hello&amp;amp;passowrd=world&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data: $(&lt;span class=&quot;string&quot;&gt;&#39;#user-information&#39;&lt;/span&gt;).serialize(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//說明php的傳輸方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type:&lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataType:&lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//AJAX執行成功時&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果驗證成功，把使用者導向index.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果驗證失敗，把伺服器的說明填到response-text裡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;response&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(response == &lt;span class=&quot;string&quot;&gt;&quot;Success&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.location.href=&lt;span class=&quot;string&quot;&gt;&quot;index.php&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	&lt;span class=&quot;comment&quot;&gt;//show the error message in login.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&#39;#response-text&#39;&lt;/span&gt;).html(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&#39;#response-text&#39;&lt;/span&gt;).fadeIn(&lt;span class=&quot;string&quot;&gt;&quot;slow&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果AJAX執行中發生了錯誤，提示Exception與AJAX status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            error:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;xhr, ajaxOptions, thrownError&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                alert(xhr.status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                alert(thrownError);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u66F8_u7C64_u7684_u52D5_u614B_u522A_u6E1B&quot;&gt;&lt;a href=&quot;#u66F8_u7C64_u7684_u52D5_u614B_u522A_u6E1B&quot; class=&quot;headerlink&quot; title=&quot;書籤的動態刪減&quot;&gt;&lt;/a&gt;書籤的動態刪減&lt;/h3&gt;&lt;p&gt;毫無疑問，做為一個書籤網站，如果每增加或刪除一個書籤，頁面就要重新整理一次，使用者體驗實在有待加強。要讓書籤的刪改儘可能自然，不妨讓AJAX一手包辦吧。在tag.js實作了新增、刪除、修改書籤這類基本操作：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//新增與修改書籤&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; TagOperate=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;actionCode&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; para = $(&lt;span class=&quot;string&quot;&gt;&#39;#tagTable&#39;&lt;/span&gt;).serialize() + &lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;action=&quot;&lt;/span&gt; + actionCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      url: &lt;span class=&quot;string&quot;&gt;&quot;action.php&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: para,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type:&lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dataType:&lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;response&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#tag-list&#39;&lt;/span&gt;).html(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#tag-list&#39;&lt;/span&gt;).fadeIn(&lt;span class=&quot;string&quot;&gt;&quot;slow&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      error:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;xhr, ajaxOptions, thrownError&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(thrownError);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;事實上，只要增加參數，再處理一下&lt;code&gt;para&lt;/code&gt;就能將所有操作整合在一塊兒，不過我的php端已經繳交了，所以就…… ╮(￣▽￣)╭&lt;/p&gt;
&lt;h2 id=&quot;u66F8_u7C64_u641C_u5C0B&quot;&gt;&lt;a href=&quot;#u66F8_u7C64_u641C_u5C0B&quot; class=&quot;headerlink&quot; title=&quot;書籤搜尋&quot;&gt;&lt;/a&gt;書籤搜尋&lt;/h2&gt;&lt;p&gt;當初會想搞這個是想&lt;a href=&quot;http://zake7749.github.io/all-tags/&quot;&gt;仿效一下Blog的篩選功能&lt;/a&gt;，可惜本錢不夠&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/VJvhkyG.jpg&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;
&lt;p&gt;我的做法是單純的字串比對，找到符合的就留下來，不符合的就把它隱藏起來&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- HTML端的書籤搜尋欄 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tag-filter&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;書籤搜尋&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用KeyUp監聽使用者的輸入，當按鍵一放開，就開始篩選需要的標籤。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//將KeyUp綁定在輸入欄上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;string&quot;&gt;&quot;#tag-filter&quot;&lt;/span&gt;).keyup(tagSearch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//KeyUp觸發時，開始篩選&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tagSearch=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//取得使用者的關鍵字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; itag = $(&lt;span class=&quot;string&quot;&gt;&quot;#tag-filter&quot;&lt;/span&gt;).val();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//把所有tag都抓下來&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; list = $(&lt;span class=&quot;string&quot;&gt;&quot;.tag-detail&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//為空代表使用者沒有查詢，即是所有標籤都符合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(itag != &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//遍歷 - 如果比對失敗就隱藏，比對成功則留下來&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;list.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!stringMatching(itag,list[i].innerHTML))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;+i).addClass(&lt;span class=&quot;string&quot;&gt;&quot;hideThis&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;+i).removeClass(&lt;span class=&quot;string&quot;&gt;&quot;hideThis&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listAllTag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//字串比對&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stringMatching&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;matcher,matchee&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; patternLength = matchee.length - matcher.length + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; , j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ; i &amp;lt; patternLength ; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ; i+j &amp;lt; matchee.length &amp;amp;&amp;amp; matchee[i+j] == matcher[j] ; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; == matcher.length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;css 中 hideThis的內容其實相當簡單：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.hideThis&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;:none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u9019_u500B_u7DB2_u7AD9_u5B89_u5168_u55CE_uFF1F&quot;&gt;&lt;a href=&quot;#u9019_u500B_u7DB2_u7AD9_u5B89_u5168_u55CE_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;這個網站安全嗎？&quot;&gt;&lt;/a&gt;這個網站安全嗎？&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;不安全&lt;/strong&gt;，這只是個登入網站的小範例，請別直接移植它。&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/nDfXp06.png&quot; alt=&quot;Imgur&quot;&gt;&lt;span class=&quot;img-detail&quot;&gt;看吶 ~ 火狐的精美吐槽。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;目前在網路安全上只做了兩點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;擋 SQL injection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;關於SQL注射式攻擊在網路上已一談再談，解決方法也很多，像是&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8F%83%E6%95%B8%E5%8C%96%E6%9F%A5%E8%A9%A2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;參數化查詢&lt;/a&gt;啦、弄個簡單的cleanInput()過濾輸入啦，而我採用的是最懶人的策略：&lt;code&gt;mysql_real_escape_string&lt;/code&gt;，他可以在特殊字元前加上跳脫字元，比如&lt;code&gt;&amp;#39;&lt;/code&gt;會變成&lt;code&gt;\&amp;#39;&lt;/code&gt;，這麼一來，即便使用者在輸入填上了SQL指令，也會被篩成一般的字串，能避免基本的SQL注射。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL 端的密碼以MD5呈現&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我曾經想過先在用戶端取得密碼雜湊，再傳送至伺服端，避免監聽人抓到的是原始密碼。不過話說回來，這其實就是TLS/SSL的工作，只要有伺服端的控制權，要追加根本不成問題，自己刻一個簡直多此一舉，說不定還會留下漏洞給別人攻擊。&lt;/p&gt;
&lt;p&gt;所以我就只在PHP端雜湊一下使用者的密碼囉，不過只防君子。以前曾看過一個使用者與密碼都是原始值的資料庫，這種做法其實相當危險，會讓管理者變成最恐怖的攻擊者。如果說在送到資料庫前多一層雜湊保護，至少能減少這類不必要的風險。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近系上的OJ不幸陣亡，打算自己東敲西打搞出一個新的批改系統，適逢這次的作業是個書籤管理網，需要登入介面及支援線上修改，不妨就拿來小試身手吧 ~&lt;/p&gt;
    
    </summary>
    
      <category term="網頁設計" scheme="http://zake7749.github.io/categories/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88/"/>
    
    
      <category term="JavaScript" scheme="http://zake7749.github.io/tags/JavaScript/"/>
    
      <category term="PHP" scheme="http://zake7749.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>插入排序法</title>
    <link href="http://zake7749.github.io/2015/09/22/insertionSort/"/>
    <id>http://zake7749.github.io/2015/09/22/insertionSort/</id>
    <published>2015-09-22T14:22:58.000Z</published>
    <updated>2016-07-24T14:10:29.305Z</updated>
    
    <content type="html">&lt;p&gt;插入排序(insertion sort)是一種排序演算法，它將一個數列分成&lt;strong&gt;已排序&lt;/strong&gt;與&lt;strong&gt;未排序&lt;/strong&gt;兩個部分，透過不斷將未排序數列插入至已排序數列的正確位置達成，嗯…這個定義唸起來實在有些饒口，不如讓我們看個實例：&lt;/p&gt;
&lt;p&gt;假設我們要由小到大排序數列：&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25 49 22 33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;依據先前說的，我們必須要將數列分割為已排序與未排序兩類，為了方便就用&lt;code&gt;|&lt;/code&gt;隔開吧：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NULL &lt;span class=&quot;string&quot;&gt;| 25 49 22 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;目前什麼都沒做，所以已排序的部分為空，未排序的部分為整個數列。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下來開始遍歷數列，首先遇到值&lt;code&gt;25&lt;/code&gt;，如前所述，我們要將未排序數插入至已排序數的正確位置，不過目前未排序區段是空的，所以也沒什麼值能跟&lt;code&gt;25&lt;/code&gt;相比，便直接將25放入已排序數列的首位吧：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 49 22 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已排序前 &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; 個數&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二個遇到的是&lt;code&gt;49&lt;/code&gt;，重申最後一次，我們將它插至已排序數列的正確位置。目前已排序的有&lt;code&gt;25&lt;/code&gt;，因為是由小排到大，我們便把&lt;code&gt;49&lt;/code&gt;放到&lt;code&gt;25&lt;/code&gt;的後頭：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 22 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已排序前 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; 個數&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第三個遇到的是&lt;code&gt;22&lt;/code&gt;，直觀來排的話，我們會直接把&lt;code&gt;22&lt;/code&gt;放在&lt;code&gt;25&lt;/code&gt;前頭，不過遍歷陣列是循序的，實際上插入排序做的是&lt;strong&gt;不斷從22的索引值往前找，直到找到一個數比22小或至陣列盡頭，再將22放於該數後&lt;/strong&gt;，所以我們會先遇到&lt;code&gt;49&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因為&lt;code&gt;49&lt;/code&gt;比&lt;code&gt;22&lt;/code&gt;大，那我們應該&lt;code&gt;22&lt;/code&gt;走到前面，這有兩種做法，目前先介紹第一種方法：透過交換兩者的位置，來把&lt;code&gt;22&lt;/code&gt;往前推：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來遇到&lt;code&gt;25&lt;/code&gt;，顯然&lt;code&gt;25&lt;/code&gt;還是比&lt;code&gt;22&lt;/code&gt;大，再換一次位置：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再往前找，沒了，已經到已排序陣列的尾端，&lt;code&gt;22&lt;/code&gt;也已經放在正確位置：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已排序前 &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; 個數&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下來是&lt;code&gt;33&lt;/code&gt;，首先遇到&lt;code&gt;49&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因為，&lt;code&gt;49&lt;/code&gt;&amp;gt;&lt;code&gt;33&lt;/code&gt;，讓&lt;code&gt;33&lt;/code&gt;走到前面：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來&lt;code&gt;33&lt;/code&gt;碰上了&lt;code&gt;25&lt;/code&gt;，它比&lt;code&gt;25&lt;/code&gt;大，所以就不用動了，直接擺在&lt;code&gt;25&lt;/code&gt;後頭：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已排序前 &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; 個數&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;終於到最後了，&lt;code&gt;47&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;49&lt;/code&gt;&amp;gt;&lt;code&gt;47&lt;/code&gt;，往前站：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;排序中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;47&lt;/code&gt;&amp;gt;&lt;code&gt;33&lt;/code&gt;，放在&lt;code&gt;33&lt;/code&gt;後頭，排序完成：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已排序前 &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; 個數，排序完成 :)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上就是插入排序法，演練有點繁瑣，但流程其實能簡要成幾個步驟，假設我們想由小排到大的話：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;挑選未排序數列的一個值為 Key&lt;/li&gt;
&lt;li&gt;將 Key 與已排序數 N 比較&lt;/li&gt;
&lt;li&gt;若 Key &amp;gt;= N，則將 Key 至於 N 後&lt;/li&gt;
&lt;li&gt;若 Key &amp;lt; N，則將 N 與 Key 位置互換&lt;/li&gt;
&lt;li&gt;終止條件為找到小於Key的N或遍歷至已排序數列的盡頭&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;依照這個原則，我們能完成如下的虛擬碼(取自wiki)：&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//A 為欲排序數列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i ← &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; length(A) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    j ← i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; j &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; A[j-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;gt; A[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swap A[j] &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; A[j-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        j ← j - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;出乎意料的簡單，對吧？附上C語言的簡單實作：&lt;/p&gt;
&lt;figure class=&quot;highlight glsl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; insertionSort(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; arr[],&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;//已排序陣列|key|未排序陣列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; key = arr[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//從已排序陣列(0~i-1)去找適合的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;j&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; arr[j]&amp;gt;key;j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SWAP(arr[j],arr[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;熟悉之後，將key拿掉會更為簡潔：&lt;/p&gt;
&lt;figure class=&quot;highlight glsl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; insertionSort(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; arr[],&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=i;j&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; arr[j]&amp;lt;arr[j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SWAP(arr[j],arr[j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u6E1B_u5C11_u8CE6_u503C_u7684_u6B21_u6578&quot;&gt;&lt;a href=&quot;#u6E1B_u5C11_u8CE6_u503C_u7684_u6B21_u6578&quot; class=&quot;headerlink&quot; title=&quot;減少賦值的次數&quot;&gt;&lt;/a&gt;減少賦值的次數&lt;/h4&gt;&lt;p&gt;先前的做法是透過不斷交換來把Key的位置往前推動，但若交換後Key的位置並不正確，其實我們也不一定要把Key塞進去，因為即便塞進了錯誤的位置，再往前查找仍還要做交換，導致要往前N個單位，勢必要進行2N次的賦值。&lt;/p&gt;
&lt;p&gt;為了減少賦值的次數，不妨只動Key一次，而這一次恰巧位在已排序陣列的正確位置，實作方法是以一個變數儲存Key的值，看看老例子：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;我們的目標是把&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;放到正確位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;22為Key，我們用變數Key來儲存22&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int Key = &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;| 33 47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先講結論，同樣的我們會持續往前找，直至陣列盡頭找到一個數小於22，不同點在於我們是對已排序陣列做&lt;strong&gt;平移&lt;/strong&gt;，為Key提供一個合適的插槽，這樣的思維其實更適合插入(insert)的涵意：&lt;/p&gt;
&lt;p&gt;我們能透過將前項的值賦與後項達成平移，首先把49後推：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;int&lt;/span&gt; Key = &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; | &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;	^&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	我們查找到這個位置(A[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來把25往後推：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;int&lt;/span&gt; Key = &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; | &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我們查找到這個位置(A[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查找到陣列盡頭了，接下來把Key的值放入合適地點：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;int&lt;/span&gt; Key = &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt; | &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = Key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這麼一來就完成排序了，由於Key一次就放對了，省去了一些不必要的賦值，這也是目前較常用的插入排序方式。附上對應的程式碼：&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; insertionSort(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; arr[],&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; length)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; = arr[i];&lt;span class=&quot;comment&quot;&gt;//保存當前選擇&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=i;j&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;&amp;lt;arr[j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            arr[j] = arr[j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//平移陣列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        arr[j] = &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u63D2_u5165_u6392_u5E8F_u7684_u4E00_u4E9B_u7279_u6027_uFF1A&quot;&gt;&lt;a href=&quot;#u63D2_u5165_u6392_u5E8F_u7684_u4E00_u4E9B_u7279_u6027_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;插入排序的一些特性：&quot;&gt;&lt;/a&gt;插入排序的一些特性：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;插入排序是穩定的，因為我們總是有方向性的比對值&lt;/li&gt;
&lt;li&gt;插入排序的時間複雜度：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;輸入的大小為N，要遍歷整個陣列需要 O(n)，從Key往前找也需要 O(n)，所以平均而言是 O(n&lt;sup&gt;2&lt;/sup&gt;)。&lt;/p&gt;
&lt;p&gt;最佳時間複雜度為 O(n) -&amp;gt; 如已完成排序的情形&lt;br&gt;平均時間複雜度為 O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;br&gt;最糟時間複雜度為 O(n&lt;sup&gt;2&lt;/sup&gt;) -&amp;gt; 如完全相反的情形&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入排序的空間複雜度：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這要看需不需要輔助空間來存放已排序陣列，上頭兩個方法都是不需要輔助陣列的(in-place)，所以為 O(1)，如果需要的話就為 O(n)。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;插入排序(insertion sort)是一種排序演算法，它將一個數列分成&lt;strong&gt;已排序&lt;/strong&gt;與&lt;strong&gt;未排序&lt;/strong&gt;兩個部分，透過不斷將未排序數列插入至已排序數列的正確位置達成，嗯…這個定義唸起來實在有些饒口，不如讓我們看個實例：&lt;/p&gt;
&lt;p&gt;假設我們要由小到大排序數列：&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;25 49 22 33&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="演算法" scheme="http://zake7749.github.io/categories/%E6%BC%94%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="學習筆記" scheme="http://zake7749.github.io/tags/%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
      <category term="排序" scheme="http://zake7749.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>短路求值</title>
    <link href="http://zake7749.github.io/2015/09/07/minimalEvaluation/"/>
    <id>http://zake7749.github.io/2015/09/07/minimalEvaluation/</id>
    <published>2015-09-07T12:47:47.000Z</published>
    <updated>2015-09-12T08:49:56.220Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	What is the output of this program ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	猜猜看，這個程式的輸出是什麼？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Problem&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Problem p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Problem();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		p.evaluation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; boolean &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;evaluation&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		boolean t = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(t||sayHello())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;finish&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Answer&quot;&gt;&lt;a href=&quot;#Answer&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h3&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finish&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很遺憾，他不會和你sayHello，不過只要我們做點小小的改動：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; t = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(t|sayHello())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;finish&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Output&quot;&gt;&lt;a href=&quot;#Output&quot; class=&quot;headerlink&quot; title=&quot;Output&quot;&gt;&lt;/a&gt;Output&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Hello&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;finish&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整份程式碼只將&lt;code&gt;if&lt;/code&gt;判斷中的&lt;code&gt;||&lt;/code&gt;修改成&lt;code&gt;|&lt;/code&gt;，在解答理由之前，先看看第二個問題吧。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    and what about this?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Problem&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Problem p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Problem();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		p.evaluation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; boolean &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;evaluation&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		boolean t = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(t&amp;amp;&amp;amp;sayHello())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;finish&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;goal&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Answer-1&quot;&gt;&lt;a href=&quot;#Answer-1&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h3&gt;&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;goal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有了先前的經驗，答案應該不怎麼意外吧？同樣的，只要做點小小的更改，&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;-&amp;gt;&lt;code&gt;&amp;amp;&lt;/code&gt;就會進入&lt;code&gt;sayHello()&lt;/code&gt;，可以親自嘗試看看。&lt;/p&gt;
&lt;h4 id=&quot;u70BA_u4EC0_u9EBC_u6C92_u6709_u57F7_u884CsayHello_28_29_uFF1F&quot;&gt;&lt;a href=&quot;#u70BA_u4EC0_u9EBC_u6C92_u6709_u57F7_u884CsayHello_28_29_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;為什麼沒有執行sayHello()？&quot;&gt;&lt;/a&gt;為什麼沒有執行sayHello()？&lt;/h4&gt;&lt;p&gt;仔細推敲上頭的兩個問題，我們可以發現第一個問題是&lt;code&gt;||&lt;/code&gt;屬於OR關係，只要其中之一為真，該敘述即為真。第二個問題則是&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;屬於AND關係，只要其中之一為假，該敘述便為假。&lt;/p&gt;
&lt;p&gt;換句話來說，在一個OR關係中，只要出現了一個&lt;code&gt;true&lt;/code&gt;，不管其他的變數是真是假，我們都能聲稱該敘述為真，同樣的，在AND關係中只要出現了一個&lt;code&gt;false&lt;/code&gt;，該敘述即為假。所以為求效率，我們可以把求值策略改成這樣：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只有前 i 個運算式求不出結果時，才去執行第 i+1 個運算式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;像這類只進行必要運算的求值策略，被稱為短路求值(Short-circuit evaluation)，就好比物理中只要電路某處短路，電流就會直接繞道而行一般，又因為它只進行必要的運算，又被稱為最小化求值。&lt;/p&gt;
&lt;p&gt;第一個問題的運算為&lt;code&gt;true||sayHello()&lt;/code&gt;，OR中一個為真結果就為真，所以沒必要大費周章的執行sayHello()，第二個問題是同樣的道理。值得一提的是，判斷仍然是由左而右，而不是挑成本最小的運算。&lt;/p&gt;
&lt;p&gt;短路求值能為我們的程式碼提升不少彈性，比如&lt;/p&gt;
&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(obj!=&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&amp;amp;&amp;amp;obj.&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; something...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即便obj真的為null，求值也在&lt;code&gt;obj!=null&lt;/code&gt;就結束了，不會因執行了&lt;code&gt;obj.func&lt;/code&gt;而跳出Exception。然而，在使用上也當務求謹慎，比如上述的例子，若調轉了求值順序便會擲出例外。&lt;/p&gt;
&lt;h4 id=&quot;u70BA_u4EC0_u9EBC_u90A3_u4E9B_u6539_u52D5_u6703_u9020_u6210_u7D50_u679C_u4E0D_u540C_uFF1F&quot;&gt;&lt;a href=&quot;#u70BA_u4EC0_u9EBC_u90A3_u4E9B_u6539_u52D5_u6703_u9020_u6210_u7D50_u679C_u4E0D_u540C_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;為什麼那些改動會造成結果不同？&quot;&gt;&lt;/a&gt;為什麼那些改動會造成結果不同？&lt;/h4&gt;&lt;p&gt;有短路求值，也自然有與之相對的嚴格求值(Eager evaluation)，其不論是否已知結果，都會很守本分的把運算式通通做完。在C++/Java，嚴格求值所用的運算子即為&lt;code&gt;|&lt;/code&gt;與&lt;code&gt;&amp;amp;&lt;/code&gt;，所以即便早就知道結果了，程式仍舊會把&lt;code&gt;sayHello()&lt;/code&gt;執行一遍。若有興趣其他語言的運算子是哪些，&lt;a href=&quot;https://en.wikipedia.org/wiki/Short-circuit_evaluation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可以看看wiki的這份表格。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	What is the output of this program ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	猜猜看，這個程式的輸出是什麼？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Problem&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Problem p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Problem();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		p.evaluation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; boolean &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;evaluation&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		boolean t = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(t||sayHello())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;finish&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="程式語言" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/"/>
    
      <category term="語言原理" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/%E8%AA%9E%E8%A8%80%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="Java" scheme="http://zake7749.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>古典密碼學</title>
    <link href="http://zake7749.github.io/2015/08/15/classical_cipher/"/>
    <id>http://zake7749.github.io/2015/08/15/classical_cipher/</id>
    <published>2015-08-15T12:03:07.000Z</published>
    <updated>2016-08-27T18:14:49.032Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;古典密碼學已經被電腦打爆了，但這跟它重不重要一點關係都沒有。&lt;br&gt;── 我的資安導師總是這樣嘮叨著……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近重新改寫以前的&lt;a href=&quot;http://sogacsie.blogspot.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Blog&lt;/a&gt;，終於理解這句話的意涵。舉凡近代加密演算法，多為古典密碼學&lt;strong&gt;手段&lt;/strong&gt;的組合，只不過以前人力與能力都不及。&lt;/p&gt;
&lt;p&gt;比方說你不會想把16個字母放進一個矩陣中，每個查表代換10次，再每行平移幾個單位，然後各別乘上一個矩陣，最後再和別的矩陣做XOR邏輯判斷。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Welcome to modern cryptography&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;這也太繁瑣了，正常人才不會想圈圈畫畫這些詭異的流程。不過，若將這些細項拆開來看，平移對應到移項式密碼，代換跟替換式密碼有關，矩陣運算則是來自希爾密碼，XOR就比較特別了些，但兩無關序列間的運算，可讓人追溯至維吉尼亞密碼的金鑰概念，這些都屬於古典加密的範疇。所以若想踏入近代密碼的殿堂，古典密碼當為一個必經的前哨站，助於釐清算法本身的原理與優劣勢。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u57FA_u672C_u6982_u5FF5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u6982_u5FF5&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;h3 id=&quot;u660E_u6587__28Plain_text_29&quot;&gt;&lt;a href=&quot;#u660E_u6587__28Plain_text_29&quot; class=&quot;headerlink&quot; title=&quot;明文 (Plain text)&quot;&gt;&lt;/a&gt;明文 (Plain text)&lt;/h3&gt;&lt;p&gt;即是要加密的內容，不過，文不一定單指文字，也包含了圖片、音樂、各式各樣的檔案都可以當作明文。又因為明文的單字為Plain text，在密碼學上，我們常常用大寫字母&lt;code&gt;P&lt;/code&gt;來表示它。&lt;/p&gt;
&lt;h3 id=&quot;u5BC6_u6587__28Cipher_text_29&quot;&gt;&lt;a href=&quot;#u5BC6_u6587__28Cipher_text_29&quot; class=&quot;headerlink&quot; title=&quot;密文 (Cipher text)&quot;&gt;&lt;/a&gt;密文 (Cipher text)&lt;/h3&gt;&lt;p&gt;呃…顧名思義，加密後的結果，跟明文一樣能有很多種型式，&lt;a href=&quot;https://code.google.com/p/corkami/source/detail?r=1906&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;比方可以把圖片加密成另一張圖片&lt;/a&gt;。因為單字是Cipher text，所以用&lt;code&gt;C&lt;/code&gt;來表示它。&lt;/p&gt;
&lt;h3 id=&quot;u91D1_u9470&quot;&gt;&lt;a href=&quot;#u91D1_u9470&quot; class=&quot;headerlink&quot; title=&quot;金鑰&quot;&gt;&lt;/a&gt;金鑰&lt;/h3&gt;&lt;p&gt;有些加密算法會有的另一個參數，當然它也不是真的鑰匙，可能為一組文字序列，演算法把它和明文做處理後產出密文。&lt;/p&gt;
&lt;h3 id=&quot;u7D55_u5C0D_u5B89_u5168&quot;&gt;&lt;a href=&quot;#u7D55_u5C0D_u5B89_u5168&quot; class=&quot;headerlink&quot; title=&quot;絕對安全&quot;&gt;&lt;/a&gt;絕對安全&lt;/h3&gt;&lt;p&gt;若我們說一個演算法是絕對安全的，代表即便有無限的時間、無限的資源，也沒辦法靠蠻力破解該算法。&lt;/p&gt;
&lt;h3 id=&quot;u8A08_u7B97_u5B89_u5168&quot;&gt;&lt;a href=&quot;#u8A08_u7B97_u5B89_u5168&quot; class=&quot;headerlink&quot; title=&quot;計算安全&quot;&gt;&lt;/a&gt;計算安全&lt;/h3&gt;&lt;p&gt;若我們說一個演算法是計算安全的，則是說靠蠻力攻擊，我們確實能破解這個算法，不過得付出極為大量的時間。&lt;/p&gt;
&lt;h3 id=&quot;u52A0_u5BC6_u7B97_u6CD5&quot;&gt;&lt;a href=&quot;#u52A0_u5BC6_u7B97_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;加密算法&quot;&gt;&lt;/a&gt;加密算法&lt;/h3&gt;&lt;p&gt;它會吃進明文吐出密文，接下來的重頭戲。&lt;/p&gt;
&lt;p&gt;一個好的加密算法應至少具備這兩項條件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;混淆(confusion)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;讓密文與金鑰的關係盡可能複雜，排除掉一些不該存在的弱金鑰，以防攻擊者透過觀察密文就能破解算法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;擴散(diffusion)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;擴散是指即便明文間只有一丁點的不同，產生出的密文也要大不相同。&lt;/p&gt;
&lt;h2 id=&quot;u52A0_u5BC6_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#u52A0_u5BC6_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;加密工具&quot;&gt;&lt;/a&gt;加密工具&lt;/h2&gt;&lt;h3 id=&quot;1-_u5BC6_u78BC_u68D2__28Scytale_29&quot;&gt;&lt;a href=&quot;#1-_u5BC6_u78BC_u68D2__28Scytale_29&quot; class=&quot;headerlink&quot; title=&quot;1.密碼棒 (Scytale)&quot;&gt;&lt;/a&gt;1.密碼棒 (Scytale)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://3.bp.blogspot.com/-cIUNh6ALKzs/VGV1ikUgOKI/AAAAAAAAAL0/t2mG1J9F1qA/s320/scytale.gif&quot; alt=&quot;skytale&quot;&gt;&lt;/p&gt;
&lt;p&gt;取布條將其纏繞於木棒上，橫向寫下明文後取下布條。解密時，必須取得相同直徑的木棒。&lt;/p&gt;
&lt;h3 id=&quot;2-_u5361_u723E_u9054_u8AFE_u6F0F_u683C_u677F__28CardanGrille_29&quot;&gt;&lt;a href=&quot;#2-_u5361_u723E_u9054_u8AFE_u6F0F_u683C_u677F__28CardanGrille_29&quot; class=&quot;headerlink&quot; title=&quot;2.卡爾達諾漏格板 (CardanGrille)&quot;&gt;&lt;/a&gt;2.卡爾達諾漏格板 (CardanGrille)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-awX-BGDZDMM/VGYhoh_nnsI/AAAAAAAAAMc/vq9awjlikUQ/s1600/CardanGrille.png&quot; alt=&quot;CardanGrille&quot;&gt;&lt;/p&gt;
&lt;p&gt;依照漏格書寫明文以及觀看明文。&lt;/p&gt;
&lt;h3 id=&quot;3-_u4E00_u6B21_u6027_u5BC6_u78BC_u672C&quot;&gt;&lt;a href=&quot;#3-_u4E00_u6B21_u6027_u5BC6_u78BC_u672C&quot; class=&quot;headerlink&quot; title=&quot;3.一次性密碼本&quot;&gt;&lt;/a&gt;3.一次性密碼本&lt;/h3&gt;&lt;p&gt;使用亂數產生的一本加密用密碼本，可以把它想成一組金鑰，每當要產生明文時，將明文與密碼本的內容相加，如明文中的字母C (3)與密碼本的字母 X (25)，3+25=28，因為28超過了26個英文字母，而對28取餘數得2，即得加密完成的密文字母B。&lt;br&gt;一次性密碼本有三個限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;確定密碼本是由隨機產生的&lt;/li&gt;
&lt;li&gt;密碼本必須只能使用一次&lt;/li&gt;
&lt;li&gt;因為要與明文相加，密碼本至少要與明文一樣長&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u52A0_u5BC6_u7B97_u6CD5-1&quot;&gt;&lt;a href=&quot;#u52A0_u5BC6_u7B97_u6CD5-1&quot; class=&quot;headerlink&quot; title=&quot;加密算法&quot;&gt;&lt;/a&gt;加密算法&lt;/h2&gt;&lt;h3 id=&quot;u51F1_u6492_u5BC6_u78BC&quot;&gt;&lt;a href=&quot;#u51F1_u6492_u5BC6_u78BC&quot; class=&quot;headerlink&quot; title=&quot;凱撒密碼&quot;&gt;&lt;/a&gt;凱撒密碼&lt;/h3&gt;&lt;p&gt;凱撒密碼出自羅馬軍事家&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%B0%A4%E5%88%A9%E7%83%8F%E6%96%AF%C2%B7%E5%87%B1%E6%92%92&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;尤利烏斯·凱撒&lt;/a&gt;，遽聞其當年曾用此與將領們進行秘密通訊。&lt;/p&gt;
&lt;p&gt;凱撒密碼的流程並不難，因為當時的敵人多是目不識丁的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;已知明文字母P，引入一個參數K，得出密文 C = (P + K)mod 26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如 ABCDEFGHIJK，在K=3時，得出密文DEFGHIJKLMN。(K=3是最初的凱撒密碼)&lt;br&gt;解密時 P = (C - K)mod 26。&lt;/p&gt;
&lt;p&gt;由於凱撒密碼只是對英文字母進行簡單的代換，我們可以透過分析各個字母出現的頻率推斷明文，比方說英文書寫上最常出現的字為 E ，我們便可以猜測密文中出現最多次數的英文字母是 E 的代換，藉此得出 P 與 C 的關係。&lt;/p&gt;
&lt;p&gt;由於這個方法主要是觀察英文字母使用的頻率，故又稱為頻率分析法，對於簡單的字母代換，頻率分析往往是有效的手段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/4/41/English-slf.png&quot; alt=&quot;&amp;quot;English-slf&amp;quot;。使用來自维基共享资源-的創用CC姓名標示-相同方式分享 3.0 條款授權&quot;&gt;&lt;/p&gt;
&lt;p&gt;也因其架構簡單，現今電腦已能用暴力法輕易破解，故鮮少在資安領域出現了，不過仍常在字謎遊戲見到它的蹤影，比如ROT-13。&lt;/p&gt;
&lt;h3 id=&quot;u5E0C_u723E_u5BC6_u78BC&quot;&gt;&lt;a href=&quot;#u5E0C_u723E_u5BC6_u78BC&quot; class=&quot;headerlink&quot; title=&quot;希爾密碼&quot;&gt;&lt;/a&gt;希爾密碼&lt;/h3&gt;&lt;p&gt;使用矩陣進行加密，由密文構成的密文矩陣C = KP，其中P為明文構成的明文矩陣，K為密鑰矩陣，密鑰矩陣須為可逆才可供解密&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-CLC48A92h_w/VJFiTQvAhCI/AAAAAAAAAQk/XOSwXGlgeho/s1600/hILL%2BCIPHER.png&quot; alt=&quot;HillCipher&quot;&gt;&lt;/p&gt;
&lt;p&gt;希爾加密避開了頻率分析攻擊，然而在已知明文的情況下，可透過逆運算求得金鑰，無法保證安全性。&lt;/p&gt;
&lt;h3 id=&quot;u8DEF_u7531_u52A0_u5BC6&quot;&gt;&lt;a href=&quot;#u8DEF_u7531_u52A0_u5BC6&quot; class=&quot;headerlink&quot; title=&quot;路由加密&quot;&gt;&lt;/a&gt;路由加密&lt;/h3&gt;&lt;p&gt;近似於密碼棒，採用直書橫寫的方式進行加密。&lt;/p&gt;
&lt;h3 id=&quot;u55AE_u5B57_u6BCD_u66FF_u63DB_u5BC6_u78BC&quot;&gt;&lt;a href=&quot;#u55AE_u5B57_u6BCD_u66FF_u63DB_u5BC6_u78BC&quot; class=&quot;headerlink&quot; title=&quot;單字母替換密碼&quot;&gt;&lt;/a&gt;單字母替換密碼&lt;/h3&gt;&lt;p&gt;與凱撒密碼同為單字母取代的概念。將26個英文字母分別做對應，比如A對應C，B對應F，替換不受限於特定規則，也不要求有跡可循，純粹是做出26個字母的明文密文對應表，以供加密與解密時使用。&lt;/p&gt;
&lt;p&gt;我們能運用洗牌演算法很輕易的產生出單字母密碼替換表。儘管其複雜度(26!)遠遠高於凱撒密碼，但明文字母與密文字母仍屬一對一對應，同樣易受頻率分析攻擊破解，當然也擋不住電腦暴力搜尋。一個可行的解決方案是：在明文中添加一些無關緊要的擾亂字母，或是一份明文使用多個表進行對應。&lt;/p&gt;
&lt;h3 id=&quot;u7DAD_u5409_u5C3C_u96C5_u5BC6_u78BC&quot;&gt;&lt;a href=&quot;#u7DAD_u5409_u5C3C_u96C5_u5BC6_u78BC&quot; class=&quot;headerlink&quot; title=&quot;維吉尼雅密碼&quot;&gt;&lt;/a&gt;維吉尼雅密碼&lt;/h3&gt;&lt;p&gt;維吉尼亞密碼主要是透過查表進行字母的轉換&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://3.bp.blogspot.com/-DwYbQG7U6u0/VGWGDLIZM-I/AAAAAAAAAMM/tXsTlLvCw14/s400/300px-Vigene%CC%80re_square.svg.png&quot; alt=&quot;維吉尼亞加密&quot;&gt;&lt;/p&gt;
&lt;p&gt;上圖其實是由26個凱撒密碼構成的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一行為字母位移 0 位的凱撒密碼 ABCDEFG…(即原順序)&lt;/li&gt;
&lt;li&gt;第二行為字母位移 1 位的凱撒密碼 BCDEFGH…&lt;/li&gt;
&lt;li&gt;第三行為字母位移 2 位的凱撒密碼 CDEFGHI…&lt;/li&gt;
&lt;li&gt;……以此類推&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;維吉尼雅密碼首先引入了&lt;strong&gt;金鑰&lt;/strong&gt;的概念，假設要加密ABCDEFG，使用密鑰CIP。首先，先將密鑰長度補至和明文一樣長，例如：&lt;/p&gt;
&lt;center&gt;ＡＢＣＤＥＦＧ&lt;br&gt;ＣＩＰＣＩＰＣ&lt;/center&gt;

&lt;p&gt;接下來，取第Ａ行第Ｃ列得Ａ(實際上就是雙重的凱撒密碼)，取第Ｂ行第Ｉ列得Ｊ…取第Ｇ行第Ｃ列得I，如此完成加密。&lt;/p&gt;
&lt;p&gt;由於引入了金鑰這個變換要素，我們在明文上做了兩次變換，普通的頻率分析不適用在維吉尼亞密碼，只要確保金鑰不過度重複(如配合一次性密碼本)，維吉尼亞密碼是足夠安全的。&lt;/p&gt;
&lt;h2 id=&quot;u653B_u64CA_u985E_u578B&quot;&gt;&lt;a href=&quot;#u653B_u64CA_u985E_u578B&quot; class=&quot;headerlink&quot; title=&quot;攻擊類型&quot;&gt;&lt;/a&gt;攻擊類型&lt;/h2&gt;&lt;h3 id=&quot;1-_u50C5_u77E5_u5BC6_u6587_u653B_u64CA&quot;&gt;&lt;a href=&quot;#1-_u50C5_u77E5_u5BC6_u6587_u653B_u64CA&quot; class=&quot;headerlink&quot; title=&quot;1.僅知密文攻擊&quot;&gt;&lt;/a&gt;1.僅知密文攻擊&lt;/h3&gt;&lt;p&gt;攻擊者在只知道密文的情況下試圖求得明文或金鑰。&lt;/p&gt;
&lt;h3 id=&quot;2-_u5DF2_u77E5_u660E_u6587_u653B_u64CA&quot;&gt;&lt;a href=&quot;#2-_u5DF2_u77E5_u660E_u6587_u653B_u64CA&quot; class=&quot;headerlink&quot; title=&quot;2.已知明文攻擊&quot;&gt;&lt;/a&gt;2.已知明文攻擊&lt;/h3&gt;&lt;p&gt;攻擊者在知道部分明文與密文配對的情況下試圖破解。&lt;/p&gt;
&lt;h3 id=&quot;3-_u9078_u64C7_u660E_u6587_u653B_u64CA&quot;&gt;&lt;a href=&quot;#3-_u9078_u64C7_u660E_u6587_u653B_u64CA&quot; class=&quot;headerlink&quot; title=&quot;3.選擇明文攻擊&quot;&gt;&lt;/a&gt;3.選擇明文攻擊&lt;/h3&gt;&lt;p&gt;公開加密器，攻擊者可以自由輸入明文及得到該明文的密文，藉此試圖破解算法。&lt;/p&gt;
&lt;p&gt;儘管選擇明文攻擊攻防上看似不合理，&lt;strong&gt;但在近代密碼學中，十分強調在公開演算法的情況下，還能保證安全的才是優秀的演算法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用最最直觀的角度來看，要做一個加密流程很容易，我們可以有很多把金鑰，再搭配各式各樣的函式打造自己的流程，反覆做個幾十次，甚至幾百次，雖然它的效率不怎麼樣&lt;span style=&quot;color:#666&quot;&gt;(其實這是個大問題)&lt;/span&gt;，但只要流程與金鑰不外洩，這個演算法理論上牢不可破。&lt;/p&gt;
&lt;p&gt;但是換個立場，如果我們是使用者，今天開發者送來了一個自行開發的加密算法，就像上述的流程一樣繁瑣，明文與密文間根本找不著對應。乍看之下，這個加密器可說是有效的，但是，如果它擁有一把尚未發現的萬用鑰匙呢？或是說這幾百道的換算其實能被規約成兩三條式子，是不是藏著一些未發現的漏洞或暗門？。&lt;/p&gt;
&lt;p&gt;對這些疑問，身為使用者的我們無法斷言，至於開發者？如果知道，那他便是最危險的攻擊者。若連開發者也不能肯定，這個算法隨時都有可能會爆炸，更糟糕的是，爆炸按鈕還是我們自己觸發的。&lt;/p&gt;
&lt;p&gt;確實，加密流程較少人知道會較安全，但暗門也較難找出。對這種保護機密資料的演算法，應該公開給全世界敲敲打打，把流程都公開，如果還是牢不可破，這個算法的安全性便有全球資安好手掛保證，像是近代算法中的AES、A5/1，便透過各方人才的審核，不但確保了使用上了安全性，也建立出自己的好口碑。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;古典密碼學已經被電腦打爆了，但這跟它重不重要一點關係都沒有。&lt;br&gt;── 我的資安導師總是這樣嘮叨著……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近重新改寫以前的&lt;a href=&quot;http://sogacsie.blogspot.tw/&quot;&gt;Blog&lt;/a&gt;，終於理解這句話的意涵。舉凡近代加密演算法，多為古典密碼學&lt;strong&gt;手段&lt;/strong&gt;的組合，只不過以前人力與能力都不及。&lt;/p&gt;
&lt;p&gt;比方說你不會想把16個字母放進一個矩陣中，每個查表代換10次，再每行平移幾個單位，然後各別乘上一個矩陣，最後再和別的矩陣做XOR邏輯判斷。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Welcome to modern cryptography&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;這也太繁瑣了，正常人才不會想圈圈畫畫這些詭異的流程。不過，若將這些細項拆開來看，平移對應到移項式密碼，代換跟替換式密碼有關，矩陣運算則是來自希爾密碼，XOR就比較特別了些，但兩無關序列間的運算，可讓人追溯至維吉尼亞密碼的金鑰概念，這些都屬於古典加密的範疇。所以若想踏入近代密碼的殿堂，古典密碼當為一個必經的前哨站，助於釐清算法本身的原理與優劣勢。&lt;/p&gt;
    
    </summary>
    
      <category term="資訊安全" scheme="http://zake7749.github.io/categories/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="密碼學" scheme="http://zake7749.github.io/tags/%E5%AF%86%E7%A2%BC%E5%AD%B8/"/>
    
  </entry>
  
  <entry>
    <title>前置處理器</title>
    <link href="http://zake7749.github.io/2015/08/13/Cpreprocessor/"/>
    <id>http://zake7749.github.io/2015/08/13/Cpreprocessor/</id>
    <published>2015-08-13T08:44:09.000Z</published>
    <updated>2016-07-31T13:07:34.736Z</updated>
    
    <content type="html">&lt;p&gt;前置處理器 = 進行「前置處理」的文字編輯器。&lt;/p&gt;
&lt;p&gt;或許我們得先解決什麼是「前置處理」。&lt;br&gt;從說文解字的角度出發，它做的是某件工作的事前處理，在C和C++中，我們指的是進行&lt;strong&gt;編譯前&lt;/strong&gt;的處理工作，大致上可分為：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入標頭檔(Header file)&lt;/li&gt;
&lt;li&gt;進行文字的取代&lt;ul&gt;
&lt;li&gt;巨集、常數的定義……&lt;/li&gt;
&lt;li&gt;條件式編譯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具體而言，在程式中前有 &lt;code&gt;#&lt;/code&gt; 的部分就涉及了前置處理，比如&lt;code&gt;#define&lt;/code&gt;、&lt;code&gt;#Pragma&lt;/code&gt;與&lt;code&gt;#include&lt;/code&gt;等等。&lt;/p&gt;
&lt;p&gt;要注意，前置處理器並不屬於C編譯器的一部分，它也不了解C家族的語法，如果你用C的觀點來審視它可能會碰上大麻煩。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4E00_u4E9B_u5E38_u898B_u7684_u7528_u6CD5&quot;&gt;&lt;a href=&quot;#u4E00_u4E9B_u5E38_u898B_u7684_u7528_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;一些常見的用法&quot;&gt;&lt;/a&gt;一些常見的用法&lt;/h2&gt;&lt;h3 id=&quot;include&quot;&gt;&lt;a href=&quot;#include&quot; class=&quot;headerlink&quot; title=&quot;include&quot;&gt;&lt;/a&gt;include&lt;/h3&gt;&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;用於引入外部的標頭檔，比如以下程式碼：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;便引入stdio.h，明確的宣告(explicit declaration)了printf，並放入目前的程式中，所以我們能使用標準輸出的printf函式，而不必自己實作它的細節。&lt;/p&gt;
&lt;p&gt;順代一提，若你使用的是C編譯器而非C++編譯器，就算沒有引入對應的標頭檔，編譯器仍會為函式建立一個隱性宣告(implicit declaration)，當聯結至標準函式庫時，若「湊巧」在庫中發現了一個同名的函式，便會把它們聯結在一塊兒，編譯時跳出的就不會是 Error 而是報 Warning，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;waring: incompatible implicit declaration of built-in function ‘printf’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而在c++的編譯器上則是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error: ‘printf’ was not declared in this scope&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;關於C標準上更詳細的資訊，可以看看&lt;a href=&quot;https://www.ptt.cc/bbs/C_and_CPP/M.1416824909.A.E7F.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在使用include上有兩種格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#include &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;file_name為系統內建的標頭檔，如stdio、stdlib等等，通常放於預設目錄底下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#include &amp;quot;file_name&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當用雙引號包覆時，file_name 是我們自定義的標頭檔。引用方式可採相對路徑或絕對路徑，此外，我們也可以在追加 gcc flag &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/cpp/Invocation.html#Invocation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;-i&lt;/a&gt; 來告知標頭檔所在目錄，編譯時 gcc 會先查找系統目錄，再從 -i 的引數中由左至右尋找檔案。&lt;/p&gt;
&lt;h3 id=&quot;define&quot;&gt;&lt;a href=&quot;#define&quot; class=&quot;headerlink&quot; title=&quot;define&quot;&gt;&lt;/a&gt;define&lt;/h3&gt;&lt;p&gt;&lt;code&gt;define&lt;/code&gt;的功能是進行文字上的取代：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;define NAME Substitute-text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;便會將NAME替代為Substitute-text，我們稱NAME為巨集，常會全以字母大寫呈現巨集，當作和普通變數的辨別標準：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TEN 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,TEN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我們可以用gcc -E 來觀察前置處理器的輸出。完成前置處理後，&lt;code&gt;TEN&lt;/code&gt;便被定義(define)為&lt;code&gt;“10”&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TEN 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;透過適當地調用巨集，能讓起來程式碼看起來更加友善，即便不使用&lt;code&gt;string&lt;/code&gt;，我們也能很形象化的描述各種情形：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MEDICINE 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; SCIENCE 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; ENGLISH 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(type)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MEDICINE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; SCIENCE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;define&lt;/code&gt;也能夠引入參數：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; swap(x,y) &amp;#123;int t; t=x; x=y; y=t; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	swap(a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中swap後請記得「緊接」&lt;code&gt;(&lt;/code&gt;，否則會跳脫出取代範圍，還記得嗎？我們是用空白來做區分的。上述程式碼在完成前置處理後會變成這樣：&lt;br&gt;&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define swap(x,y) &amp;#123;int t&lt;span class=&quot;comment&quot;&gt;; t=x; x=y; y=t; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; t&lt;span class=&quot;comment&quot;&gt;; t=a; a=b; b=t;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可能覺得這麼做跟使用行內涵式(&lt;code&gt;inline&lt;/code&gt;)沒什麼兩樣，不過早期的C編譯器並沒有常數與行內涵式的功能，才衍生出這樣的解決方案。&lt;/p&gt;
&lt;p&gt;此外，正如前文所提到的，前置處理器並不了解 C 家族的語法，所以他所做的僅僅是取代而已，諸如要去取代的變數型別、運算元的優先順序上等涉及 C 語法的細節都不會加以檢查，所以使用上須格外小心，否則會在除錯上造成很大的盲點。比方說，變數的組合建議以括弧包覆，不然可能發生這種情形：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; FIRST_PART 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LAST_PART 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; ALL_PARTS FIRST_PART + LAST_PART&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;The square of all the parts is &quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ALL_PARTS * ALL_PARTS &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;預期的輸出為 12 * 12 = 144 ，但是真正的輸出是 7+5*7+5 =47，這便是沒考慮到運算順序導置的缺失，應該修正為：&lt;br&gt;&lt;code&gt;#define ALL_PARTS ((FIRST_PART) + (LAST_PART))&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;u689D_u4EF6_u5F0F_u7DE8_u8B6F&quot;&gt;&lt;a href=&quot;#u689D_u4EF6_u5F0F_u7DE8_u8B6F&quot; class=&quot;headerlink&quot; title=&quot;條件式編譯&quot;&gt;&lt;/a&gt;條件式編譯&lt;/h3&gt;&lt;p&gt;前置處理器提供了一些if判斷指令，我們能透過它來控制某些功能是否實現，最常見的莫過於&lt;a href=&quot;https://zh.wikipedia.org/wiki/Include%E9%98%B2%E7%AF%84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;include guard&lt;/a&gt;了，這避免了引入了某些程式碼導至的錯誤，我們能用&lt;code&gt;#ifndef&lt;/code&gt;與&lt;code&gt;endif&lt;/code&gt;來達成，引用wiki的例子：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; H_GRANDFATHER ← &lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; not &lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; H_GRANDFATHER.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; H_GRANDFATHER ← then &lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; H_GRANDFATHER.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; foo &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; member;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt; ← close this &lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; statement.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;既然有&lt;code&gt;#ifndef&lt;/code&gt;，當然也有&lt;code&gt;#ifdef&lt;/code&gt;、&lt;code&gt;#if&lt;/code&gt;、&lt;code&gt;#else&lt;/code&gt;囉，像上述的功能也可以用&lt;code&gt;#ifdef&lt;/code&gt;配合&lt;code&gt;#else&lt;/code&gt;或使用&lt;code&gt;#if defined(H_GRANDFATHER)&lt;/code&gt;達成。&lt;/p&gt;
&lt;p&gt;除了include guard，條件式編譯也有不少用途，比方說程式碼的除錯，我們可以透過定義一個巨集DEBUG，藉由&lt;code&gt;#define&lt;/code&gt;及判斷式來開關除錯模式：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Debug version.\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//insert your debug code or function.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Production version.\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前置處理器 = 進行「前置處理」的文字編輯器。&lt;/p&gt;
&lt;p&gt;或許我們得先解決什麼是「前置處理」。&lt;br&gt;從說文解字的角度出發，它做的是某件工作的事前處理，在C和C++中，我們指的是進行&lt;strong&gt;編譯前&lt;/strong&gt;的處理工作，大致上可分為：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入標頭檔(Header file)&lt;/li&gt;
&lt;li&gt;進行文字的取代&lt;ul&gt;
&lt;li&gt;巨集、常數的定義……&lt;/li&gt;
&lt;li&gt;條件式編譯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具體而言，在程式中前有 &lt;code&gt;#&lt;/code&gt; 的部分就涉及了前置處理，比如&lt;code&gt;#define&lt;/code&gt;、&lt;code&gt;#Pragma&lt;/code&gt;與&lt;code&gt;#include&lt;/code&gt;等等。&lt;/p&gt;
&lt;p&gt;要注意，前置處理器並不屬於C編譯器的一部分，它也不了解C家族的語法，如果你用C的觀點來審視它可能會碰上大麻煩。&lt;br&gt;
    
    </summary>
    
      <category term="程式語言" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/"/>
    
      <category term="C" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/C/"/>
    
    
      <category term="C" scheme="http://zake7749.github.io/tags/C/"/>
    
      <category term="C++" scheme="http://zake7749.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>訊息鑑別技術</title>
    <link href="http://zake7749.github.io/2015/08/06/message_auth/"/>
    <id>http://zake7749.github.io/2015/08/06/message_auth/</id>
    <published>2015-08-06T03:18:44.000Z</published>
    <updated>2015-09-13T14:22:40.695Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u4EC0_u9EBC_u662F_u8A0A_u606F_u9451_u5225_u6280_u8853_uFF1F&quot;&gt;&lt;a href=&quot;#u4EC0_u9EBC_u662F_u8A0A_u606F_u9451_u5225_u6280_u8853_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;什麼是訊息鑑別技術？&quot;&gt;&lt;/a&gt;什麼是訊息鑑別技術？&lt;/h2&gt;&lt;p&gt;顧名思義，我們是在&lt;span style=&quot;color:#99dd00&quot;&gt;識別&lt;/span&gt;文件，不過比起去深究文章內涵與背景故事，我們通常會更關心這三件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;送出的訊息是否完整且正確 (protect integrity)&lt;ul&gt;
&lt;li&gt;你不會希望在匯款時多送了幾個 0 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;發訊人的身分是不是正確的 (validate identity)&lt;ul&gt;
&lt;li&gt;防止有人假冒你幹些雞鳴狗盜的勾當&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;發訊人不可否認曾做過的事 (Non-repudiation)&lt;ul&gt;
&lt;li&gt;沒辦法切割曾經幹過的壞事&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要實踐訊息鑑別，有兩個簡單的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CBC - residue , CMAC(Cipher-based MAC)：在區塊加密時進行鑑別&lt;/li&gt;
&lt;li&gt;HMAC ：另外用個雜湊函式(Hash) 進行鑑別&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h5 id=&quot;MAC_u662F_u4EC0_u9EBC_u6771_u6771_uFF1F&quot;&gt;&lt;a href=&quot;#MAC_u662F_u4EC0_u9EBC_u6771_u6771_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;MAC是什麼東東？&quot;&gt;&lt;/a&gt;MAC是什麼東東？&lt;/h5&gt;&lt;p&gt;MAC是Message Authentication code的縮寫，由文件經過某些演算法(MAC algorith)產生的。MAC能夠擷取出文件訊息，這些訊息往往能代表該份文件的特徵，就像是指紋、DNA訊息一般，透過比對得出MAC，我們通常能得知文件的一致性。&lt;br&gt;如果從加解密的角度出發，我們可以把它當成一個Checksum，用其進行完整性或身分檢查。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/1sj77qCly4DcogfQTiFeLzeQtsuQsTzxxn9Lj32Qy4g=w977-h618-no&quot; alt=&quot;MAC示例&quot;&gt;&lt;/p&gt;
&lt;p&gt;要使用MAC，傳送方跟接受方需要共享一把鑰匙，這可以視為MAC演算法的一個參數。每當傳送方發送文件時，會經由演算法送出MAC，並附在文件中，接收方在收到文件後，會對收到的文件再做一次演算，如果兩方得出的MAC是相同的，可以假定這份文件沒被修改過。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&quot;CBC_-_Residue&quot;&gt;&lt;a href=&quot;#CBC_-_Residue&quot; class=&quot;headerlink&quot; title=&quot;CBC - Residue&quot;&gt;&lt;/a&gt;CBC - Residue&lt;/h5&gt;&lt;p&gt;CBC-Residue，其實是CBC的結果。其使用了2把Key，一把用於進行CBC模式，一把用於產生MAC(Residue)。CBC - Residue在加密過程幾乎沒有改變，唯一的不同是在最後一份明文Pn的加密，他分成兩個部份，我們把Pn和密文Cn-1做XOR產生的東東叫做Xn好了，一是Xn用Key1加密產生最後一份密文Cn，二是Xn用Key2加密產生一個渣渣，這個渣渣跟密文一點關係都沒有，我們把他當做一個校正碼。因為CBC特有的雪崩效應，使得先前的加密有ㄧ些小改變就會造成後續一連串的錯誤，所以我們才能把這個渣渣用做比對。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&quot;HMAC__28Hash_MAC_29&quot;&gt;&lt;a href=&quot;#HMAC__28Hash_MAC_29&quot; class=&quot;headerlink&quot; title=&quot;HMAC (Hash MAC)&quot;&gt;&lt;/a&gt;HMAC (Hash MAC)&lt;/h5&gt;&lt;p&gt;1.什麼是 Hash ?&lt;/p&gt;
&lt;p&gt;簡單來說，Hash是一個函式，即是數學上我們常常用F(X)表示的玩意兒，不過Hash函式有一個特性，&lt;strong&gt;Hash是單向的，我們無法透過結果去反推斷讀入的參數&lt;/strong&gt;，即是說 H(A) = B，如果我們只給你B，是無法透過運算反推代入參數為A的。&lt;/p&gt;
&lt;p&gt;若加解密的觀點來看，Hash做到的只有加密(從A變成B)，而沒辦法解密(B無法逆運算至A)，因此Hash只會用來做驗證。&lt;/p&gt;
&lt;p&gt;此外，除了難以逆運算外，一個好的Hash我們還會希望它&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;電腦計算上高效&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;鍵的碰撞率低，也就是說，H(A)!=H(B)。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們之前提到過，MAC產生出的可以說是一份文件的指紋，讓我們透過它來辨識文件的完整性，如果說兩份不同的文件，會產生出同一份MAC，那這個MAC的可信度便有待加強。&lt;/p&gt;
&lt;p&gt;2.HMAC&lt;/p&gt;
&lt;p&gt;HashMAC就是用Hash來進行驗證，市面上常見的MD5即是如此。&lt;/p&gt;
&lt;p&gt;HMAC的原理很簡單，我們有相同訊息，相同Hash算法，那麼對一份相同的明文，Hash出來的東西就該相同。&lt;/p&gt;
&lt;pre&gt;傳送方
假設我們要輸送一份訊息 M = ＂HelloWorld＂給接收方

1. 在傳送端進行Hash : H(M)
2. 將Hash的結果儲存為認證戳記 T = H(M)
3. 將T與M一起送至接收方&lt;/pre&gt;

&lt;pre&gt;接收方
我們現在收到了 M&#39; 與 T&#39;，因為不曉得改過沒有所以加了&#39;

1. 對 M&#39; 進行 Hash : H(M&#39;)
2. 將Hash的結果儲存為 T&#39;&#39;
3. 驗證 T&#39; 是否等於 T&#39;&#39;
4. if(T&#39;==T&#39;&#39;) -&gt; M == M&#39;&lt;/pre&gt;


&lt;p&gt;或許你會有個小疑問，如果說我有能力更改 M’，那我應該也能更動 T’，然而這麼做的前提是必須持有 H(X) 與原訊息才行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u6578_u4F4D_u7C3D_u7AE0&quot;&gt;&lt;a href=&quot;#u6578_u4F4D_u7C3D_u7AE0&quot; class=&quot;headerlink&quot; title=&quot;數位簽章&quot;&gt;&lt;/a&gt;數位簽章&lt;/h2&gt;&lt;p&gt;雖然叫做簽章，不過這跟紙筆一點關係也沒有，它是一種用來&lt;em&gt;辨別身分的加密型式&lt;/em&gt;，嚴格來說，數位簽章是以數學演算法或其他運算方式，對要簽署的文件進行加密，所產生的結果。&lt;/p&gt;
&lt;p&gt;先看看怎麼產生一份簽章吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有一份文件M&lt;/li&gt;
&lt;li&gt;計算文件的摘要 h = Hash(M)&lt;/li&gt;
&lt;li&gt;加密這份摘要：Ek1(h)&lt;/li&gt;
&lt;li&gt;加密的結果便是簽章 S = Ek(h)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之後通過同時送出M與S給接收方，簽章的傳送就完成了。&lt;/p&gt;
&lt;p&gt;在接收方&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收到了文件M’與簽章S’&lt;/li&gt;
&lt;li&gt;計算出文件M’的摘要 h’ = Hash(M’)&lt;/li&gt;
&lt;li&gt;解密收到的簽章S’: h’’ = Dk2(S’)&lt;/li&gt;
&lt;li&gt;比對 h’ 與 h’’ 的關聯性&lt;/li&gt;
&lt;li&gt;傳送者的&lt;strong&gt;身分&lt;/strong&gt;獲得認證&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前看來，這些流程與MAC相當近似，但細節上略有不同。比如在資料處理上，MAC考慮的是這份文件到底有沒有被動過，而不在乎文件本身，所以MAC會破壞資料儲存結構，產出一個固定長度的驗證碼，比如MD5就是吃進一個不定長度的文件，把文件擠壓抽取成128位元（16位元組）的散列值，而數位簽章則會保存文件與憑證，你該知道這是我簽的，也該知道我簽了些什麼。&lt;/p&gt;
&lt;p&gt;不同之處還有MAC與簽章的協定方式：MAC是由傳送方跟接收方約定而成，建立一個除錯碼以及演算出除錯碼的方式，接收方在獲得密文後再行驗證。不過數位簽章無法這麼做，因為它是對外公開的，我們無法去約束對方怎麼簽，但能肯定的是，這份簽章只有他簽它的出來。&lt;/p&gt;
&lt;p&gt;此外，數位簽章與MAC最大的差異在於&lt;strong&gt;金鑰系統&lt;/strong&gt;，MAC採用對稱式，而簽章是非對稱式，也就是說，&lt;strong&gt;數位簽章加密與解密用的金鑰是不同的，加密用的是私鑰，解密用的是公鑰&lt;/strong&gt;，即是非對稱式金鑰系統。&lt;/p&gt;
&lt;p&gt;讓我們先回歸簽章的目的，它要能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;驗證&lt;ul&gt;
&lt;li&gt;簽章者身份 （不可偽冒）&lt;/li&gt;
&lt;li&gt;簽章日期、時間&lt;/li&gt;
&lt;li&gt;訊息完整性 （不可偽造）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color:#99dd00&quot;&gt;透過簽章，能讓第三方來解決紛爭 （不可否認性）&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先，雙方鑰匙一定要不同，不然接收者就能用你的鑰匙來仿冒你。&lt;/p&gt;
&lt;p&gt;不過重點還是在這個第三方。數位簽章既為數位，我們能把它當成網路上的身分證，當社會大眾想驗明你的正身時，就把簽章蓋在他臉上，不過隨隨便便這麼做，也沒人知道你這簽章是真是假，你總不會打了好幾把鑰匙給別人，當然也不會傻到公開自己的私人鑰匙。&lt;/p&gt;
&lt;p&gt;那麼你也許會說：我們需要一把公開的鑰匙，問題就來了，我們該把鑰匙放在哪裡？會不會有人的鑰匙打得跟我一模一樣？或者很多人都有我的公開鑰匙，搞得大家不知道該跟誰拿，誰才是真的？&lt;/p&gt;
&lt;p&gt;一個可能的答案是：我們需要在你我之外，具備公信力的組織，在確認了我們的身份後，把私鑰留給你，在用你的姓名啦、申請日期啦、使用期限等等訊息混在一起作出你的公鑰，對外公開為&lt;em&gt;數位憑證&lt;/em&gt;。以後大家想知道你之為你，算算你的數位憑證就成啦 ~&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Authenticated_Encryption&quot;&gt;&lt;a href=&quot;#Authenticated_Encryption&quot; class=&quot;headerlink&quot; title=&quot;Authenticated Encryption&quot;&gt;&lt;/a&gt;Authenticated Encryption&lt;/h2&gt;&lt;p&gt;對於加密與驗證，剛接觸時往往會存在一個迷思。無論是加密或驗證 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我們都有一個演算法，一份明文。&lt;/li&gt;
&lt;li&gt;我們都會把明文給塞到算法裡&lt;/li&gt;
&lt;li&gt;結果都會跑出一個看似亂碼的東東&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這個東東在加密上稱為密文，在鑑別上則叫做驗證。儘管跑出來的結果都不是給人看的(通常如此)，不過行為的目的卻大不相同。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;加密做的是：保證資料的安全性&lt;br&gt;驗證做的是：保證資料的完整性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而雙管齊下的方法就是Authenticated encryption，直觀來看有這幾種型式：&lt;br&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/uGotHGCNaNSnknU-0ecQ2XXm7Em8y8iGOA9tce2xNbY=w1143-h577-no&quot; alt=&quot;3 ways of authenticated encryption&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;對 M 進行加密處理及用 M 產生信息戳記 T&lt;/li&gt;
&lt;li&gt;先用 M 產生信息戳記，再用信息戳記 T 及 M 放入加密器產生 C&lt;/li&gt;
&lt;li&gt;先對 M 進行加密處理，再用密文 C 產生信息戳記 T&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M(Message)是我們欲處理的信息，C(Ciphertext)得出的是密文，來保證M的安全性，T是鑑別戳記(Tag)，用來確認M的完整性。&lt;/p&gt;
&lt;p&gt;然而，這三種方法都存在一個缺點，即是對於&lt;em&gt;N&lt;/em&gt;個區塊而言，他們往往要進行&lt;em&gt;2N&lt;/em&gt;次的處理，因為加密跟認證分開來了。為了解決這個問題，出現了IAPM與OCB這兩種新模式。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&quot;IAPM&quot;&gt;&lt;a href=&quot;#IAPM&quot; class=&quot;headerlink&quot; title=&quot;IAPM&quot;&gt;&lt;/a&gt;IAPM&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/ROJ40m32HUa83UekOJzeOKM9Y6PiyXtD9bUGV-OxjRA=w1143-h572-no&quot; alt=&quot;IAPM&quot;&gt;&lt;/p&gt;
&lt;p&gt;S0~SM是用做擾亂資料，因為這是個近似ECB的模式。Sigma P 是由P1 Xor P2… Xor Pm-1得出的，Cm即為產生的校正碼。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&quot;OCB__28Offset_codebook_Mode_29&quot;&gt;&lt;a href=&quot;#OCB__28Offset_codebook_Mode_29&quot; class=&quot;headerlink&quot; title=&quot;OCB (Offset codebook Mode)&quot;&gt;&lt;/a&gt;OCB (Offset codebook Mode)&lt;/h5&gt;&lt;p&gt;Checksum = M1 ⊕…⊕ Mn，對於流程的更細部內容，&lt;a href=&quot;http://web.cs.ucdavis.edu/~rogaway/ocb/ocb-faq.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;參見這邊&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/192-qOycchKGnjmb31-BGDuO2ayVYE9oER0uynFqXzU=w954-h509-no&quot; alt=&quot;OCB&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u4EC0_u9EBC_u662F_u8A0A_u606F_u9451_u5225_u6280_u8853_uFF1F&quot;&gt;&lt;a href=&quot;#u4EC0_u9EBC_u662F_u8A0A_u606F_u9451_u5225_u6280_u8853_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;什麼是訊息鑑別技術？&quot;&gt;&lt;/a&gt;什麼是訊息鑑別技術？&lt;/h2&gt;&lt;p&gt;顧名思義，我們是在&lt;span style=&quot;color:#99dd00&quot;&gt;識別&lt;/span&gt;文件，不過比起去深究文章內涵與背景故事，我們通常會更關心這三件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;送出的訊息是否完整且正確 (protect integrity)&lt;ul&gt;
&lt;li&gt;你不會希望在匯款時多送了幾個 0 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;發訊人的身分是不是正確的 (validate identity)&lt;ul&gt;
&lt;li&gt;防止有人假冒你幹些雞鳴狗盜的勾當&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;發訊人不可否認曾做過的事 (Non-repudiation)&lt;ul&gt;
&lt;li&gt;沒辦法切割曾經幹過的壞事&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要實踐訊息鑑別，有兩個簡單的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CBC - residue , CMAC(Cipher-based MAC)：在區塊加密時進行鑑別&lt;/li&gt;
&lt;li&gt;HMAC ：另外用個雜湊函式(Hash) 進行鑑別&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="資訊安全" scheme="http://zake7749.github.io/categories/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="訊息鑑別" scheme="http://zake7749.github.io/tags/%E8%A8%8A%E6%81%AF%E9%91%91%E5%88%A5/"/>
    
  </entry>
  
  <entry>
    <title>TCP Socket Programming 學習筆記</title>
    <link href="http://zake7749.github.io/2015/03/17/SocketProgramming/"/>
    <id>http://zake7749.github.io/2015/03/17/SocketProgramming/</id>
    <published>2015-03-17T12:57:24.000Z</published>
    <updated>2016-07-17T09:38:54.344Z</updated>
    
    <content type="html">&lt;p&gt;有別於 IPC ，Socket 是用於網路上不同程序的互相溝通，比如說流覽器要怎麼跟 Web Server 拿取資料、Messenger 訊息的收發、 ftp 檔案的上傳與下載等等，在現今的網路編程中，Socket 可以說是無所不在。&lt;/p&gt;
&lt;p&gt;至今 Socket 也應不同的需求或 OS 衍生出了不少版本，這篇筆計主要是討論 Linux 的 &lt;code&gt;socket&lt;/code&gt; ，並專注在實現 TCP 編程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/cqr4O2P.png&quot; alt=&quot;TCP&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u5148_u5F9E_u5EFA_u7ACB_u4E00_u500B_Socket__u51FA_u767C&quot;&gt;&lt;a href=&quot;#u5148_u5F9E_u5EFA_u7ACB_u4E00_u500B_Socket__u51FA_u767C&quot; class=&quot;headerlink&quot; title=&quot;先從建立一個 Socket 出發&quot;&gt;&lt;/a&gt;先從建立一個 Socket 出發&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;socket(int,int,int)&lt;/code&gt;，它能幫助我們在kernel中建立一個socket，並傳回對該socket的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;檔案描述符&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Prototype&quot;&gt;&lt;a href=&quot;#Prototype&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; domain, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; protocol)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arguments&quot;&gt;&lt;a href=&quot;#Arguments&quot; class=&quot;headerlink&quot; title=&quot;Arguments&quot;&gt;&lt;/a&gt;Arguments&lt;/h3&gt;&lt;h4 id=&quot;domain&quot;&gt;&lt;a href=&quot;#domain&quot; class=&quot;headerlink&quot; title=&quot;domain&quot;&gt;&lt;/a&gt;domain&lt;/h4&gt;&lt;p&gt;定義了socket要在哪個領域溝通，常用的有2種：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AF_UNIX/AF_LOCAL：用在本機&lt;strong&gt;程序與程序&lt;/strong&gt;間的傳輸，讓兩個程序共享一個檔案系統(file system)&lt;/li&gt;
&lt;li&gt;AF_INET , AF_INET6 ：讓兩台主機&lt;strong&gt;透過網路&lt;/strong&gt;進行資料傳輸，AF_INET使用的是IPv4協定，而AF_INET6則是IPv6協定。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;type&quot;&gt;&lt;a href=&quot;#type&quot; class=&quot;headerlink&quot; title=&quot;type&quot;&gt;&lt;/a&gt;type&lt;/h4&gt;&lt;p&gt;說明這個socket是傳輸的手段為何：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SOCK_STREAM：提供一個序列化的連接導向位元流，可以做位元流傳輸。對應的protocol為TCP。&lt;/li&gt;
&lt;li&gt;SOCK_DGRAM：提供的是一個一個的資料包(datagram)，對應的protocol為UDP&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;protocol&quot;&gt;&lt;a href=&quot;#protocol&quot; class=&quot;headerlink&quot; title=&quot;protocol&quot;&gt;&lt;/a&gt;protocol&lt;/h4&gt;&lt;p&gt;設定socket的協定標準，一般來說都會設為0，讓kernel選擇type對應的默認協議。&lt;/p&gt;
&lt;h4 id=&quot;Return_Value&quot;&gt;&lt;a href=&quot;#Return_Value&quot; class=&quot;headerlink&quot; title=&quot;Return Value&quot;&gt;&lt;/a&gt;Return Value&lt;/h4&gt;&lt;p&gt;成功產生socket時，會返回該socket的檔案描述符(socket file descriptor)，我們可以透過它來操作socket。若socket創建失敗則會回傳-1(INVALID_SOCKET)。&lt;/p&gt;
&lt;h3 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc , &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sockfd = socket(AF_INET , SOCK_STREAM , &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (socket_fd == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Fail to create a socket.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5F9EClient_u9023_u5411Server&quot;&gt;&lt;a href=&quot;#u5F9EClient_u9023_u5411Server&quot; class=&quot;headerlink&quot; title=&quot;從Client連向Server&quot;&gt;&lt;/a&gt;從Client連向Server&lt;/h2&gt;&lt;p&gt;客戶端要連向伺服端，需要先知道並儲存伺服端的IP及port，&lt;code&gt;netinet/in.h&lt;/code&gt;已經為我們定義好了一個&lt;code&gt;struct sockaddr_in&lt;/code&gt;來儲存這些資訊：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// IPv4 AF_INET sockets:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// IPv6參見 sockaddr_in6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt;            sin_family;   &lt;span class=&quot;comment&quot;&gt;// AF_INET,因為這是IPv4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt;   sin_port;     &lt;span class=&quot;comment&quot;&gt;// 儲存port No&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; in_addr   sin_addr;     &lt;span class=&quot;comment&quot;&gt;// 參見struct in_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;             sin_zero[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;// Not used, must be zero */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; in_addr &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s_addr;          &lt;span class=&quot;comment&quot;&gt;// load with inet_pton()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有了IP跟port，我們就能使用&lt;code&gt;connect(int struct sockaddr, int)&lt;/code&gt;進行客戶端與伺服端之間的連線。&lt;/p&gt;
&lt;h3 id=&quot;Prototype-1&quot;&gt;&lt;a href=&quot;#Prototype-1&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sd, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *server, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; addr_len)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arguments-1&quot;&gt;&lt;a href=&quot;#Arguments-1&quot; class=&quot;headerlink&quot; title=&quot;Arguments&quot;&gt;&lt;/a&gt;Arguments&lt;/h3&gt;&lt;h4 id=&quot;sd&quot;&gt;&lt;a href=&quot;#sd&quot; class=&quot;headerlink&quot; title=&quot;sd&quot;&gt;&lt;/a&gt;sd&lt;/h4&gt;&lt;p&gt;sd是socket的描述符，即是前個Example的&lt;code&gt;sockfd&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;server&quot;&gt;&lt;a href=&quot;#server&quot; class=&quot;headerlink&quot; title=&quot;server&quot;&gt;&lt;/a&gt;server&lt;/h4&gt;&lt;p&gt;負責提供關於這個socket的所有信息，以下是一個簡單的設定例子：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;info&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bzero(&amp;amp;info,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info));&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;初始化，將&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;涵蓋的&lt;span class=&quot;title&quot;&gt;bits&lt;/span&gt;設為0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info.sin_family = PF_INET;&lt;span class=&quot;regexp&quot;&gt;//sockaddr&lt;/span&gt;_in為Ipv4結構&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info.sin_addr.s_addr = inet_addr(&lt;span class=&quot;string&quot;&gt;&quot;123.123.13.12&quot;&lt;/span&gt;);&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;IP address&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info.sin_port = htons(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;iner_addr_28_29_u662F_u4EC0_u9EBC_u6771_u6771_uFF1F&quot;&gt;&lt;a href=&quot;#iner_addr_28_29_u662F_u4EC0_u9EBC_u6771_u6771_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;iner_addr()是什麼東東？&quot;&gt;&lt;/a&gt;iner_addr()是什麼東東？&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;210.25.132.181屬於IP地址的ASCII表示法，也就是字符串形式。英語叫做IPv4 numbers-and-dots notation。&lt;br&gt;如果把210.25.132.181轉換為整數形式，是3524887733，這個就是整數形式的IP地址。英語叫做binary data。（其實binary是二進制的意思）&lt;br&gt;– 出自&lt;a href=&quot;http://roclinux.cn/?p=1160&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Linux大棚》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;inet_addr()&lt;/code&gt;便負責將字串型式的IP轉換為整數型式的IP。&lt;/p&gt;
&lt;h5 id=&quot;u90A3htons_28_29_u53C8_u505A_u4E86_u4EC0_u9EBC_uFF1F&quot;&gt;&lt;a href=&quot;#u90A3htons_28_29_u53C8_u505A_u4E86_u4EC0_u9EBC_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;那htons()又做了什麼？&quot;&gt;&lt;/a&gt;那htons()又做了什麼？&lt;/h5&gt;&lt;p&gt;首先，我們要知道網路端的字節序與本機端的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字節序&lt;/a&gt;可能不一致。&lt;/p&gt;
&lt;p&gt;網路端總是用Big endian，而本機端卻要視處理器體系而定，比如x86就跟網路端的看法不同，使用的是Little endian。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;htons()&lt;/code&gt;就是Host TO Network Short integer的縮寫，它將本機端的字節序(endian)轉換成了網路端的字節序。根據這個命名法來推斷，htons()應該還有一群好朋友：htonl()、ntohl()、ntohs()，&lt;a href=&quot;http://my.oschina.net/alphajay/blog/4277&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不過這又是另一個故事了。&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;addr_len&quot;&gt;&lt;a href=&quot;#addr_len&quot; class=&quot;headerlink&quot; title=&quot;addr_len&quot;&gt;&lt;/a&gt;addr_len&lt;/h4&gt;&lt;p&gt;它的意義簡單明瞭，就是*server的大小&lt;/p&gt;
&lt;h4 id=&quot;Return_value&quot;&gt;&lt;a href=&quot;#Return_value&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;嗯……如果成功了就回傳&lt;code&gt;0&lt;/code&gt;，不然就回傳&lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Example-1&quot;&gt;&lt;a href=&quot;#Example-1&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;p&gt;乘接上面所有內容，目前進度已經達到2/5。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc , &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//socket的建立&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sockfd = socket(AF_INET , SOCK_STREAM , &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sockfd == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Fail to create a socket.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//socket的連線&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bzero(&amp;amp;info,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_family = PF_INET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_addr.s_addr = inet_addr(&lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_port = htons(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; err = connect(sockfd,(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;info,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err==&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Connection error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u63A5_u6536_u8CC7_u6599&quot;&gt;&lt;a href=&quot;#u63A5_u6536_u8CC7_u6599&quot; class=&quot;headerlink&quot; title=&quot;接收資料&quot;&gt;&lt;/a&gt;接收資料&lt;/h2&gt;&lt;p&gt;Socket存在多種接收方式，從最基本的&lt;code&gt;read()&lt;/code&gt;到其衍生的recv()、recvfrom()、recvfmsg()等。這邊主要介紹recv()的功能。&lt;/p&gt;
&lt;h3 id=&quot;Prototype-2&quot;&gt;&lt;a href=&quot;#Prototype-2&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; recv(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buf, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; len, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arguments-2&quot;&gt;&lt;a href=&quot;#Arguments-2&quot; class=&quot;headerlink&quot; title=&quot;Arguments&quot;&gt;&lt;/a&gt;Arguments&lt;/h3&gt;&lt;h4 id=&quot;sockfd&quot;&gt;&lt;a href=&quot;#sockfd&quot; class=&quot;headerlink&quot; title=&quot;sockfd&quot;&gt;&lt;/a&gt;sockfd&lt;/h4&gt;&lt;p&gt;sd是socket的描述符，即是前個Example的&lt;code&gt;sockfd&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;buf&quot;&gt;&lt;a href=&quot;#buf&quot; class=&quot;headerlink&quot; title=&quot;buf&quot;&gt;&lt;/a&gt;buf&lt;/h4&gt;&lt;p&gt;一個緩衝區，讓Socket能把接收到的資料塞進裡頭。&lt;/p&gt;
&lt;h4 id=&quot;len&quot;&gt;&lt;a href=&quot;#len&quot; class=&quot;headerlink&quot; title=&quot;len&quot;&gt;&lt;/a&gt;len&lt;/h4&gt;&lt;p&gt;即是buf的大小&lt;/p&gt;
&lt;h4 id=&quot;flags&quot;&gt;&lt;a href=&quot;#flags&quot; class=&quot;headerlink&quot; title=&quot;flags&quot;&gt;&lt;/a&gt;flags&lt;/h4&gt;&lt;p&gt;相比最基本的&lt;code&gt;read()&lt;/code&gt;，&lt;code&gt;recv()&lt;/code&gt;的參數中多了這個旗標，flags代表接收的相關細節，通常是設定為0，也存在其他巨集處理一些特殊要求，比如blocking/nonblocking與超額接收等等，這部分細節可參見&lt;a href=&quot;http://man7.org/linux/man-pages/man2/recv.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;man-pages&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;Return_value-1&quot;&gt;&lt;a href=&quot;#Return_value-1&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;recv()會回傳接收到了多少個位元組，若在接收時發生的錯誤則會傳回&lt;code&gt;-1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我想值得一提的是回傳&lt;strong&gt;0&lt;/strong&gt;的情形，可以考慮為以下三者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;就真的是 0 bytes&lt;/li&gt;
&lt;li&gt;兩方Socket設定的domain不一致，比如一方為網路一方為本機&lt;/li&gt;
&lt;li&gt;當一方在正常情況下結束連線，也會回傳 0 (end-of-file)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Example-2&quot;&gt;&lt;a href=&quot;#Example-2&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buffer[&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;recv(sockfd,buf,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(buf),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u50B3_u9001_u8CC7_u6599&quot;&gt;&lt;a href=&quot;#u50B3_u9001_u8CC7_u6599&quot; class=&quot;headerlink&quot; title=&quot;傳送資料&quot;&gt;&lt;/a&gt;傳送資料&lt;/h2&gt;&lt;p&gt;Socket的傳送與接收大同小異，同樣有很多傳送手段(如&lt;code&gt;write()&lt;/code&gt;、&lt;code&gt;send()&lt;/code&gt;、&lt;code&gt;sendto()&lt;/code&gt;等等)，也都是給定三個東西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Socket 描述符&lt;/li&gt;
&lt;li&gt;一個緩衝區&lt;/li&gt;
&lt;li&gt;緩衝區的大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就差在接收是把資料往緩衝區裡塞，而傳送是把緩衝區向外倒而已。這裡主要介紹&lt;/p&gt;
&lt;h3 id=&quot;Prototype-3&quot;&gt;&lt;a href=&quot;#Prototype-3&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; send(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buf, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; len, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arguments-3&quot;&gt;&lt;a href=&quot;#Arguments-3&quot; class=&quot;headerlink&quot; title=&quot;Arguments&quot;&gt;&lt;/a&gt;Arguments&lt;/h3&gt;&lt;p&gt;Σ(・ω・ノ)ノ &lt;em&gt;複製貼上警報注意&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;sockfd-1&quot;&gt;&lt;a href=&quot;#sockfd-1&quot; class=&quot;headerlink&quot; title=&quot;sockfd&quot;&gt;&lt;/a&gt;sockfd&lt;/h4&gt;&lt;p&gt;sockfd是socket的描述符，即是前個Example的&lt;code&gt;sockfd&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;buf-1&quot;&gt;&lt;a href=&quot;#buf-1&quot; class=&quot;headerlink&quot; title=&quot;buf&quot;&gt;&lt;/a&gt;buf&lt;/h4&gt;&lt;p&gt;一個緩衝區，讓Socket能把接收到的資料塞進裡頭。&lt;/p&gt;
&lt;h4 id=&quot;len-1&quot;&gt;&lt;a href=&quot;#len-1&quot; class=&quot;headerlink&quot; title=&quot;len&quot;&gt;&lt;/a&gt;len&lt;/h4&gt;&lt;p&gt;即是buf的大小&lt;/p&gt;
&lt;h4 id=&quot;flags-1&quot;&gt;&lt;a href=&quot;#flags-1&quot; class=&quot;headerlink&quot; title=&quot;flags&quot;&gt;&lt;/a&gt;flags&lt;/h4&gt;&lt;p&gt;相比最基本的&lt;code&gt;write()&lt;/code&gt;，&lt;code&gt;send()&lt;/code&gt;的參數中多了這個旗標，flags代表接收的相關細節，通常是設定為0，也存在其他巨集處理一些特殊要求，比如blocking/nonblocking與超額傳輸等等，這部分細節可參見&lt;a href=&quot;http://www.linuxhowtos.org/manpages/2/send.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;man-pages&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;Return_value-2&quot;&gt;&lt;a href=&quot;#Return_value-2&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;如果輸送成功，會回傳共送出了多少個位元組，傳輸失敗則回傳&lt;code&gt;-1&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Example-3&quot;&gt;&lt;a href=&quot;#Example-3&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;keyword&quot;&gt;buf&lt;/span&gt;[] = &lt;span class=&quot;string&quot;&gt;&quot;Hi there!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send(sockfd,&lt;span class=&quot;keyword&quot;&gt;buf&lt;/span&gt;,sizeof(&lt;span class=&quot;keyword&quot;&gt;buf&lt;/span&gt;),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u7D81_u5B9AServer_u7AEF_u7684_u5730_u5740&quot;&gt;&lt;a href=&quot;#u7D81_u5B9AServer_u7AEF_u7684_u5730_u5740&quot; class=&quot;headerlink&quot; title=&quot;綁定Server端的地址&quot;&gt;&lt;/a&gt;綁定Server端的地址&lt;/h2&gt;&lt;p&gt;connect()讓我們到別人家去取用資料，bind()則是把自己家地址綁在Socket身上。不論當Clinet或當Server，我們都需要給Socket一份地址，同樣的，能以結構&lt;code&gt;sockaddr_in&lt;/code&gt;來儲存資料。&lt;/p&gt;
&lt;h3 id=&quot;Prototype-4&quot;&gt;&lt;a href=&quot;#Prototype-4&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr* addr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; addrlen)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Arguments-4&quot;&gt;&lt;a href=&quot;#Arguments-4&quot; class=&quot;headerlink&quot; title=&quot;Arguments&quot;&gt;&lt;/a&gt;Arguments&lt;/h3&gt;&lt;h4 id=&quot;sockfd-2&quot;&gt;&lt;a href=&quot;#sockfd-2&quot; class=&quot;headerlink&quot; title=&quot;sockfd&quot;&gt;&lt;/a&gt;sockfd&lt;/h4&gt;&lt;p&gt;socket的描述符&lt;/p&gt;
&lt;h4 id=&quot;addr&quot;&gt;&lt;a href=&quot;#addr&quot; class=&quot;headerlink&quot; title=&quot;addr&quot;&gt;&lt;/a&gt;addr&lt;/h4&gt;&lt;p&gt;與&lt;code&gt;connetc()&lt;/code&gt;的 server 的設定大同小異，值得一提的是s_addr，這部分常有人設定為&lt;code&gt;info.sin_addr.s_addr = INADDR_ANY&lt;/code&gt;，&lt;code&gt;INADDR_ANY&lt;/code&gt;表示我不在乎loacl IP是什麼，讓kernel替我決定就好。&lt;/p&gt;
&lt;h4 id=&quot;addrlen&quot;&gt;&lt;a href=&quot;#addrlen&quot; class=&quot;headerlink&quot; title=&quot;addrlen&quot;&gt;&lt;/a&gt;addrlen&lt;/h4&gt;&lt;p&gt;即是 *addr的大小&lt;/p&gt;
&lt;h4 id=&quot;Return_value-3&quot;&gt;&lt;a href=&quot;#Return_value-3&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;&lt;code&gt;0&lt;/code&gt;表示綁定成功，&lt;code&gt;-1&lt;/code&gt;則表失敗&lt;/p&gt;
&lt;h2 id=&quot;u8A2D_u7F6EServer_u7684_u76E3_u807D_u968A_u5217&quot;&gt;&lt;a href=&quot;#u8A2D_u7F6EServer_u7684_u76E3_u807D_u968A_u5217&quot; class=&quot;headerlink&quot; title=&quot;設置Server的監聽隊列&quot;&gt;&lt;/a&gt;設置Server的監聽隊列&lt;/h2&gt;&lt;p&gt;如果說IP對應到一座城市，Port就是城市的港口。在&lt;code&gt;bind()&lt;/code&gt;告訴別人我們住在哪裡，並該從哪座港口登陸後，我們必需反覆去查看客人來了沒有，這個過程就稱為監聽，對應到了Socket的&lt;code&gt;listen()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由於Server一次只能服務一個人，當港口出入頻繁時，我們得讓來客照拜訪的先後排成隊列，即是說每當一個請求送到Server，Socket就會把它丟到監聽隊列的尾端。&lt;/p&gt;
&lt;h3 id=&quot;Prototype-5&quot;&gt;&lt;a href=&quot;#Prototype-5&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; backlog)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Argument&quot;&gt;&lt;a href=&quot;#Argument&quot; class=&quot;headerlink&quot; title=&quot;Argument&quot;&gt;&lt;/a&gt;Argument&lt;/h4&gt;&lt;h5 id=&quot;sockfd-3&quot;&gt;&lt;a href=&quot;#sockfd-3&quot; class=&quot;headerlink&quot; title=&quot;sockfd&quot;&gt;&lt;/a&gt;sockfd&lt;/h5&gt;&lt;p&gt;sockfd是socket的描述符，即是前個Example的&lt;code&gt;sockfd&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;backlog&quot;&gt;&lt;a href=&quot;#backlog&quot; class=&quot;headerlink&quot; title=&quot;backlog&quot;&gt;&lt;/a&gt;backlog&lt;/h5&gt;&lt;p&gt;規定最多能有幾個人能連入server，即時說這個隊列究竟有多大&lt;/p&gt;
&lt;h4 id=&quot;Return_value-4&quot;&gt;&lt;a href=&quot;#Return_value-4&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;成功為&lt;code&gt;0&lt;/code&gt;，產生錯誤則回傳&lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Example-4&quot;&gt;&lt;a href=&quot;#Example-4&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;listen(&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Server__u63A5_u6536_u8ACB_u6C42&quot;&gt;&lt;a href=&quot;#Server__u63A5_u6536_u8ACB_u6C42&quot; class=&quot;headerlink&quot; title=&quot;Server 接收請求&quot;&gt;&lt;/a&gt;Server 接收請求&lt;/h2&gt;&lt;p&gt;Socket在港口等了又等，終於有客人拜訪了，我們可以用函式&lt;code&gt;accept()&lt;/code&gt;去接見這名客人。當&lt;code&gt;accept()&lt;/code&gt;被調用時，它會為該請求產生出一個新的Socket，並把這個請求從監聽隊列剔除掉。&lt;/p&gt;
&lt;h3 id=&quot;Prototype-6&quot;&gt;&lt;a href=&quot;#Prototype-6&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h3&gt;&lt;p&gt;int accept(int sockfd, struct sockaddr &lt;em&gt;addr, socklen_t &lt;/em&gt;addrlen);&lt;/p&gt;
&lt;h4 id=&quot;Argument-1&quot;&gt;&lt;a href=&quot;#Argument-1&quot; class=&quot;headerlink&quot; title=&quot;Argument&quot;&gt;&lt;/a&gt;Argument&lt;/h4&gt;&lt;h5 id=&quot;sockfd-4&quot;&gt;&lt;a href=&quot;#sockfd-4&quot; class=&quot;headerlink&quot; title=&quot;sockfd&quot;&gt;&lt;/a&gt;sockfd&lt;/h5&gt;&lt;p&gt;毫無反應，就是個socket的描述符&lt;/p&gt;
&lt;h5 id=&quot;addr-1&quot;&gt;&lt;a href=&quot;#addr-1&quot; class=&quot;headerlink&quot; title=&quot;addr&quot;&gt;&lt;/a&gt;addr&lt;/h5&gt;&lt;p&gt;一樣是個描述Socket資訊的結構，不過他是一個空容器，用於儲存接收到的Client端相關資訊，比如port、IP等等。&lt;/p&gt;
&lt;h5 id=&quot;addrlen-1&quot;&gt;&lt;a href=&quot;#addrlen-1&quot; class=&quot;headerlink&quot; title=&quot;addrlen&quot;&gt;&lt;/a&gt;addrlen&lt;/h5&gt;&lt;p&gt;描述的是addr的大小&lt;/p&gt;
&lt;h4 id=&quot;Return_value-5&quot;&gt;&lt;a href=&quot;#Return_value-5&quot; class=&quot;headerlink&quot; title=&quot;Return value&quot;&gt;&lt;/a&gt;Return value&lt;/h4&gt;&lt;p&gt;它會傳回一個新的Socket描述符，以後和Client端交談的是這個新創出的Socket，如果失敗則傳回&lt;code&gt;-1&lt;/code&gt;(INVALID_SOCKET)&lt;/p&gt;
&lt;h3 id=&quot;Example-5&quot;&gt;&lt;a href=&quot;#Example-5&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int forClientSockfd&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct sockaddr_in client_info&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int addrlen = sizeof(&lt;span class=&quot;name&quot;&gt;client_addr&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;forClientSockfd = accept(&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;,(&lt;span class=&quot;name&quot;&gt;structsockaddr*&lt;/span&gt;) &lt;span class=&quot;symbol&quot;&gt;&amp;amp;client_addr&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;&amp;amp;addrlen&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Server__u7BC4_u4F8B_u7A0B_u5F0F&quot;&gt;&lt;a href=&quot;#Server__u7BC4_u4F8B_u7A0B_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;Server 範例程式&quot;&gt;&lt;/a&gt;Server 範例程式&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc , &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//socket的建立&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; inputBuffer[&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;] = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; message[] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Hi,this is server.\n&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,forClientSockfd = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sockfd = socket(AF_INET , SOCK_STREAM , &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sockfd == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Fail to create a socket.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//socket的連線&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in serverInfo,clientInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; addrlen = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(clientInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bzero(&amp;amp;serverInfo,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(serverInfo));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    serverInfo.sin_family = PF_INET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    serverInfo.sin_addr.s_addr = INADDR_ANY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    serverInfo.sin_port = htons(&lt;span class=&quot;number&quot;&gt;8700&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bind(sockfd,(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;serverInfo,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(serverInfo));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen(sockfd,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forClientSockfd = accept(sockfd,(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr*) &amp;amp;clientInfo, &amp;amp;addrlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        send(forClientSockfd,message,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(message),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recv(forClientSockfd,inputBuffer,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(inputBuffer),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Get:%s\n&quot;&lt;/span&gt;,inputBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Client__u7BC4_u4F8B_u7A0B_u5F0F&quot;&gt;&lt;a href=&quot;#Client__u7BC4_u4F8B_u7A0B_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;Client 範例程式&quot;&gt;&lt;/a&gt;Client 範例程式&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc , &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//socket的建立&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sockfd = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sockfd = socket(AF_INET , SOCK_STREAM , &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sockfd == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Fail to create a socket.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//socket的連線&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bzero(&amp;amp;info,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_family = PF_INET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//localhost test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_addr.s_addr = inet_addr(&lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.sin_port = htons(&lt;span class=&quot;number&quot;&gt;8700&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; err = connect(sockfd,(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;info,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err==&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Connection error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Send a message to server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; message[] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Hi there&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; receiveMessage[&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;] = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    send(sockfd,message,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(message),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     recv(sockfd,receiveMessage,&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(receiveMessage),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;,receiveMessage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;close Socket\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    close(sockfd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有別於 IPC ，Socket 是用於網路上不同程序的互相溝通，比如說流覽器要怎麼跟 Web Server 拿取資料、Messenger 訊息的收發、 ftp 檔案的上傳與下載等等，在現今的網路編程中，Socket 可以說是無所不在。&lt;/p&gt;
&lt;p&gt;至今 Socket 也應不同的需求或 OS 衍生出了不少版本，這篇筆計主要是討論 Linux 的 &lt;code&gt;socket&lt;/code&gt; ，並專注在實現 TCP 編程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/cqr4O2P.png&quot; alt=&quot;TCP&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程式語言" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/"/>
    
      <category term="C" scheme="http://zake7749.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/C/"/>
    
    
      <category term="C" scheme="http://zake7749.github.io/tags/C/"/>
    
      <category term="Linux" scheme="http://zake7749.github.io/tags/Linux/"/>
    
      <category term="Socket" scheme="http://zake7749.github.io/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>C4Labs Linux講座</title>
    <link href="http://zake7749.github.io/2014/10/30/C4labsLinux/"/>
    <id>http://zake7749.github.io/2014/10/30/C4labsLinux/</id>
    <published>2014-10-30T14:39:03.000Z</published>
    <updated>2015-10-07T16:19:26.823Z</updated>
    
    <content type="html">&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/P_9SNHPFYK3jj1kU3jTOovKiESAaPBWFdDk23WdCNBWcPiwSV6Kys6LIAh-LfRvEzWpv0l0U5rFecjKiAPOE13Wjklg7IekDPS9SO90CrdXE85ShgZtQyICFgM8TDd8zwnWyER0tcNmNns5nlAOp2t4HPN0BG8qMqjBCPrrFyLiYhELclbde15iMeizjKVHbA3oQ4DY-vZzCOfVvh3NewopXESbp3f-nn_ncreSPdEdA_e3xodUyokmZ3JbzXQzGoTRM_DEAHWf8Tkzi91KVRjrFGi4ZyMZ62KkBdqyrP5JuNedcttx3cTvPbQz_kOdiOo9aPg7CSlAadztfbMAlTTmWB0GQGIrD2bywo8pQ954IdHbv_5F1eH4SDqLO9utYL2LCgRzEQF5oJzSbIv3RFl5rJ-ClvWfAeGuz7l_5Rfdf2DgA97oPSruYQdOfKvqbgXY0w-Aw93HSfS8UOt5YvHbOv4dmEhHHFkPI46nbpFS1D9hdybYv-kkcVWpa1qv5Iha7mzhuQN4pOUcQSnrvKp7G6J2EtPmKyVQLa3v1hHY=w272-h319-no&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;br&gt;由於主持人是jserv，所以是C4Labs開學以來第一次爆滿(?)。比起分享，這次的meeting更像是推坑用讀書會，書目為&lt;a href=&quot;http://it-ebooks.info/book/819/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linux kernel development 3rd&lt;/a&gt; 。這本書不像OS恐龍書，它假定你對基本觀念有一部分的認知了，而多著墨在怎麼去用那些觀念，所以可能不適合新手入門，而且它的圖真的很少。&lt;/p&gt;
&lt;p&gt;今天是第一次開講，所以只就幾個章節做了簡單的流覽。jserv分享還蠻有趣的，對於這次的會議內容，將談談作業系統的基本觀念與排程&lt;/p&gt;
&lt;h2 id=&quot;u7A0B_u5F0F_x__u7A0B_u5E8F_x__u57F7_u884C_u7DD2&quot;&gt;&lt;a href=&quot;#u7A0B_u5F0F_x__u7A0B_u5E8F_x__u57F7_u884C_u7DD2&quot; class=&quot;headerlink&quot; title=&quot;程式 x 程序 x 執行緒&quot;&gt;&lt;/a&gt;程式 x 程序 x 執行緒&lt;/h2&gt;&lt;p&gt;進入排程之前，先讓我們釐清一件事：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Program：沒有反應，就只是個程式碼的集合。
Process：執行中程式的實體。
Thread：Process的紀錄器，告訴你這個Process幹了什麼。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一個Program能產生多的Process，每點一次程式，就會產生一個行程，多開就是這麼回事。而每一個行程，都有一個獨立自主的小空間(記憶體區塊)，除了自己以外，沒有人能把它幹掉，同樣的，當這個行程掛掉時，別的行程也不會受到影響。&lt;/p&gt;
&lt;p&gt;執行緒既為紀錄器，也是CPU分時的最小單位。一個行程通常有很多執行緒，這其實近似多工的概念。想像一個情形，如果只有一個執行緒，行程內所有的事就得都由他一手包辦，他可能要讀入檔案，又可能又呈現畫面給使用者，但是CPU一次只能分配給一個執行緒使用，這意味著我們必須等這個執行緒讀完檔案，才會有時間來回應使用者，如果前者曠日廢時，我們通常會認為是當機了。多執行緒則把工作分攤開，我們可以有一個執行緒專職回報，告訴使用者這個行程做了什麼，而其他執行緒繼續埋頭苦幹。&lt;/p&gt;
&lt;p&gt;但有一點要注意，多執行緒是近似分工，只是讓工作能同時啟動，真正在做事的還是處理器，如果只有一個執行緒，一個處理器，那你把它分成4個執行緒也不會比較快。事實上，在多執行緒中處理器只是快速的切換執行緒，以達到工作差不多快的效果。&lt;/p&gt;
&lt;h2 id=&quot;u6392_u7A0B_u5165_u9580&quot;&gt;&lt;a href=&quot;#u6392_u7A0B_u5165_u9580&quot; class=&quot;headerlink&quot; title=&quot;排程入門&quot;&gt;&lt;/a&gt;排程入門&lt;/h2&gt;&lt;p&gt;排程，其實就是切換行程的學問。Linux的排程是基於分時，也就是把CPU時間切成許多片段，每一個片段可供一個行程來使用，當程式的時間配額額滿時，就會進行行程切換的操作。而判斷執行順序是來自優先權，它可能是透過一個演算法得出的，每個行程都會有個優先權，排程器(Scheduler)會透過它得知什麼時候該執行什麼程式。&lt;/p&gt;
&lt;p&gt;我們先考慮三種行程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interactive process ：會不斷跟使用者互動，需要偵測按鍵立即回覆使用者&lt;/li&gt;
&lt;li&gt;Batch process：不需要和使用者互動，常在背景執行&lt;/li&gt;
&lt;li&gt;Real-time process：即時性的，像是影音軟體&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux的排程器實做了一個啟發式演算法，可以依據過去行程的行為，來決定各個行程的優先順序 。&lt;/p&gt;
&lt;p&gt;此外，Linux 採取&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%8A%A2%E5%8D%A0%E5%BC%8F%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搶佔式多任務處理&lt;/a&gt;，也就是說當一個行程處於可執行狀態時，核心會將他的優先權和當前執行行程的優先權進行比對，若前者較大，中斷目前的行程，讓排程器挑出應當執行的行程。此外先佔也會發生在當前行程的時間配額額滿的時候，此時，一個鑑別旗標TIF_NEED_RESCHED 會被設立，讓計時器中止及調用排程器。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/P_9SNHPFYK3jj1kU3jTOovKiESAaPBWFdDk23WdCNBWcPiwSV6Kys6LIAh-LfRvEzWpv0l0U5
    
    </summary>
    
      <category term="作業系統" scheme="http://zake7749.github.io/categories/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1/"/>
    
    
      <category term="Linux" scheme="http://zake7749.github.io/tags/Linux/"/>
    
      <category term="作業系統" scheme="http://zake7749.github.io/tags/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1/"/>
    
      <category term="演講摘記" scheme="http://zake7749.github.io/tags/%E6%BC%94%E8%AC%9B%E6%91%98%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>我的紫微星哪有這麼萌!?</title>
    <link href="http://zake7749.github.io/2014/10/18/gamedesignConferenceC/"/>
    <id>http://zake7749.github.io/2014/10/18/gamedesignConferenceC/</id>
    <published>2014-10-18T15:56:03.000Z</published>
    <updated>2015-12-14T13:48:16.011Z</updated>
    
    <content type="html">&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/CukSYydT34dWCrmyhn2grhzXf8SJ-vvTe6ni4Edb2rvCzrjjr5tki9mhS7uJu9jk84iGYrzR8zz6LH4VdDGhZHVwsUdm-1EggH-1Jx69V--brP0xmRezpaV7_aXiPQR1_tZqP30bBi0ouG39IksWxqksuVeRQzDZN-si-gQlyrfEJmFZyBcAdJuskknaBMWI93tnFig_bKgnBdIjz5UGe95V2bDExPW7HyFvT8PqijuT_y_4INPEAeA7A9unfAJoywe56MqkPnH-b-2ipq2GBj-ZuLgEEV9NV7DtBtIymaV0ToQ73u8D9Q5X6wayZtpaaH3NDUigGcXqGJa5U3DbsSCc-2NB7tI6jIvqVZZjydSflu6vlBt2snbMpGdeHaKHSAoPTaZ9h-ar7xPczUe6diUCMiqxPAEiBW3HobjgprYgcECmliNJgxj8ImjuvajgBaJsKrc-fKVcsadn2piO7GbXxN9450y1nbDwNZ35e-YixWKUZuoanjelRQCZLFTaJOSmox0kCPK7L6zx03J00x7Iss9TLzunrMRAh3NXsAI=w783-h588-no&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;right&quot;&gt;講者：楊育誠&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;br&gt;這次的分享和之前有個很大的不同，就是製作團隊從工作室至公司，所以在企劃、創作與行銷方面有著不同的格局，也論及到較多實務上及行銷上的策略，可以說是更貼近遊戲產業的現實面吧～&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u661F_u8000_u5B78_u5712_u662F_u4EC0_u9EBC_u6A23_u7684_u4F5C_u54C1&quot;&gt;&lt;a href=&quot;#u661F_u8000_u5B78_u5712_u662F_u4EC0_u9EBC_u6A23_u7684_u4F5C_u54C1&quot; class=&quot;headerlink&quot; title=&quot;星耀學園是什麼樣的作品&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://starschool.animen.com.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;星耀學園是什麼樣的作品&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;星耀學園是以紫微斗數為題材去進行動漫化的作品，當然啦，我們不能只餵公子吃天文圖，便置入了一堆萌妹子代表各個星靈，校長也坦承這近似西洋的黃道十二宮，但是就根本來看，把紫微斗數當背景的AVG還真的是絕無僅有，這無形中也成了行銷的噱頭。&lt;/p&gt;
&lt;p&gt;學園設定來自於烏來鄉，至於為什麼在烏來鄉？因為那裡有山有水有溫泉，簡單來說就是滿滿的特色，而且像這樣的神奇學園，如果待在大都市裡大概天天都會被查水表，也顯得競技場這類古色古香的情境格格不入。&lt;/p&gt;
&lt;h2 id=&quot;u904A_u6232_u5BE6_u52D9_u88FD_u4F5C_u90E8_u5206&quot;&gt;&lt;a href=&quot;#u904A_u6232_u5BE6_u52D9_u88FD_u4F5C_u90E8_u5206&quot; class=&quot;headerlink&quot; title=&quot;遊戲實務製作部分&quot;&gt;&lt;/a&gt;遊戲實務製作部分&lt;/h2&gt;&lt;p&gt;設定方面往往歸類於前期企劃，而在一個大團隊中，企劃特別要講究方法。&lt;/p&gt;
&lt;p&gt;要將企劃內容盡可能的圖像化，不必拘泥於精細度，但是一定要呈現出概念與流程，比如說要做神奇寶貝的戰鬥，企劃要告訴團隊要如何呈現，像戰鬥方式（回合or即時）、場景配置、神奇寶貝出現的位置等等。我們可以寫一個小程式來模擬企劃內容，這樣討論時不僅降低溝通上的失誤，也能更貼近實務上面臨的難點或對現有設定該加強的部分。&lt;/p&gt;
&lt;p&gt;而說起AVG，圖量相較於程式更重，如差分圖、臉部表情、立繪，這些都是需要精雕細琢的部分，而且良好的CG對於進軍同人市場是不可或缺的，講者有特別提到，以現今台灣市場的行情，一片沒有動畫化的AVG能賣個一千片就算不錯了，成本的回收只能鎖定在同人市場，比如角色人物的周邊，日常四格漫畫以及輕小說等等。&lt;/p&gt;
&lt;h2 id=&quot;u76EE_u524D_u696D_u754C_u7684_u767C_u5C55_u60C5_u5F62&quot;&gt;&lt;a href=&quot;#u76EE_u524D_u696D_u754C_u7684_u767C_u5C55_u60C5_u5F62&quot; class=&quot;headerlink&quot; title=&quot;目前業界的發展情形&quot;&gt;&lt;/a&gt;目前業界的發展情形&lt;/h2&gt;&lt;p&gt;首先要面對一個現實，所謂國產遊戲，風格到底要是什麼？&lt;/p&gt;
&lt;p&gt;講者認為，什麼風格有市場，就嘗試什麼風格。&lt;/p&gt;
&lt;p&gt;台灣經常有一種聲音，國產遊戲該有新風格，但是到底要如何去呈現、如何去定義，退一步而言，就算呈現出了新風格，也不保證能在市場上存活。其實原創並沒有什麼風格的問題，考慮風格當然很好，但是作品要先達到及格標準才行。&lt;/p&gt;
&lt;h3 id=&quot;u9032_u884C_u4F01_u5283_u7684_u5341_u4E8C_u500B_u601D_u8003_u9EDE_uFF1A&quot;&gt;&lt;a href=&quot;#u9032_u884C_u4F01_u5283_u7684_u5341_u4E8C_u500B_u601D_u8003_u9EDE_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;進行企劃的十二個思考點：&quot;&gt;&lt;/a&gt;進行企劃的十二個思考點：&lt;/h3&gt;&lt;h4 id=&quot;u73A9_u7968_u6027_u8CEA_u8207_u9577_u9060_u767C_u5C55&quot;&gt;&lt;a href=&quot;#u73A9_u7968_u6027_u8CEA_u8207_u9577_u9060_u767C_u5C55&quot; class=&quot;headerlink&quot; title=&quot;玩票性質與長遠發展&quot;&gt;&lt;/a&gt;玩票性質與長遠發展&lt;/h4&gt;&lt;h4 id=&quot;u5916_u90E8_u53CA_u5167_u90E8_u8CC7_u6E90_u7684_u8A55_u4F30&quot;&gt;&lt;a href=&quot;#u5916_u90E8_u53CA_u5167_u90E8_u8CC7_u6E90_u7684_u8A55_u4F30&quot; class=&quot;headerlink&quot; title=&quot;外部及內部資源的評估&quot;&gt;&lt;/a&gt;外部及內部資源的評估&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;確保資金回收\合作對象\企劃\程式\美術&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u904A_u6232_u985E_u578B&quot;&gt;&lt;a href=&quot;#u904A_u6232_u985E_u578B&quot; class=&quot;headerlink&quot; title=&quot;遊戲類型&quot;&gt;&lt;/a&gt;遊戲類型&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;大眾或小眾，以什麼去決勝負&lt;/li&gt;
&lt;li&gt;低美術門檻/高遊戲性 v.s 高美術門檻/低遊戲性&lt;ul&gt;
&lt;li&gt;老實說，靠現今靠遊戲性出線的非常非常少&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u767C_u884C_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u767C_u884C_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;發行平台&quot;&gt;&lt;/a&gt;發行平台&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Steam/appstore/ps平台……&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u539F_u5275or_u6539_u7DE8&quot;&gt;&lt;a href=&quot;#u539F_u5275or_u6539_u7DE8&quot; class=&quot;headerlink&quot; title=&quot;原創or改編&quot;&gt;&lt;/a&gt;原創or改編&lt;/h4&gt;&lt;h4 id=&quot;u958B_u767C_u898F_u6A21_u8207_u8CE3_u9EDE&quot;&gt;&lt;a href=&quot;#u958B_u767C_u898F_u6A21_u8207_u8CE3_u9EDE&quot; class=&quot;headerlink&quot; title=&quot;開發規模與賣點&quot;&gt;&lt;/a&gt;開發規模與賣點&lt;/h4&gt;&lt;h4 id=&quot;u4E0A_u5E02_u6642_u9593_u8207_u901A_u8DEF&quot;&gt;&lt;a href=&quot;#u4E0A_u5E02_u6642_u9593_u8207_u901A_u8DEF&quot; class=&quot;headerlink&quot; title=&quot;上市時間與通路&quot;&gt;&lt;/a&gt;上市時間與通路&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;避免碰撞強檔，考慮發行商&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u591A_u6CE2_u6B21_u7684_u884C_u92B7_u7B56_u7565&quot;&gt;&lt;a href=&quot;#u591A_u6CE2_u6B21_u7684_u884C_u92B7_u7B56_u7565&quot; class=&quot;headerlink&quot; title=&quot;多波次的行銷策略&quot;&gt;&lt;/a&gt;多波次的行銷策略&lt;/h4&gt;&lt;h4 id=&quot;u6578_u64DA_u56DE_u6536_u8207_u5F8C_u671F_u5831_u544A&quot;&gt;&lt;a href=&quot;#u6578_u64DA_u56DE_u6536_u8207_u5F8C_u671F_u5831_u544A&quot; class=&quot;headerlink&quot; title=&quot;數據回收與後期報告&quot;&gt;&lt;/a&gt;數據回收與後期報告&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;數位文創投資報酬率高\風險也相當高&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u7248_u6B0A_u6A21_u5F0F_u8207_u8DE8_u5E73_u53F0_u7684_u53EF_u80FD_u6027&quot;&gt;&lt;a href=&quot;#u7248_u6B0A_u6A21_u5F0F_u8207_u8DE8_u5E73_u53F0_u7684_u53EF_u80FD_u6027&quot; class=&quot;headerlink&quot; title=&quot;版權模式與跨平台的可能性&quot;&gt;&lt;/a&gt;版權模式與跨平台的可能性&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;既然決定的是數位文創，就該注重在版權授權，這在數位文創上的獲利才是最高的&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u653E_u9577_u7DDA_u91E3_u5927_u9B5Avs_u7092_u77ED_u7DDA_u578B_u904A_u6232&quot;&gt;&lt;a href=&quot;#u653E_u9577_u7DDA_u91E3_u5927_u9B5Avs_u7092_u77ED_u7DDA_u578B_u904A_u6232&quot; class=&quot;headerlink&quot; title=&quot;放長線釣大魚vs炒短線型遊戲&quot;&gt;&lt;/a&gt;放長線釣大魚vs炒短線型遊戲&lt;/h4&gt;&lt;h4 id=&quot;u7B56_u7565_u4E0A_u7684_u76F2_u9EDE&quot;&gt;&lt;a href=&quot;#u7B56_u7565_u4E0A_u7684_u76F2_u9EDE&quot; class=&quot;headerlink&quot; title=&quot;策略上的盲點&quot;&gt;&lt;/a&gt;策略上的盲點&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;游擊戰與陣地戰的選擇&lt;ul&gt;
&lt;li&gt;推很多不一定紅的 v.s 拼一步會紅的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;海外市場的佈局策略與輸出&lt;ul&gt;
&lt;li&gt;開闢第二戰場&lt;ul&gt;
&lt;li&gt;同人/週邊/置入性行銷&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;品牌聯名效應&lt;/li&gt;
&lt;li&gt;虛擬與實體的交叉模式&lt;ul&gt;
&lt;li&gt;透過展覽推銷遊戲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;時間換取空間的策略模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/CukSYydT34dWCrmyhn2grhzXf8SJ-vvTe6ni4Edb2rvCzrjjr5tki9mhS7uJu9jk84iGYrzR8zz6LH4VdDGhZHVwsUdm-1EggH-1Jx69V--brP0xmRezpaV7_aXiPQR1_tZqP30bBi0ouG39IksWxqksuVeRQzDZN-si-gQlyrfEJmFZyBcAdJuskknaBMWI93tnFig_bKgnBdIjz5UGe95V2bDExPW7HyFvT8PqijuT_y_4INPEAeA7A9unfAJoywe56MqkPnH-b-2ipq2GBj-ZuLgEEV9NV7DtBtIymaV0ToQ73u8D9Q5X6wayZtpaaH3NDUigGcXqGJa5U3DbsSCc-2NB7tI6jIvqVZZjydSflu6vlBt2snbMpGdeHaKHSAoPTaZ9h-ar7xPczUe6diUCMiqxPAEiBW3HobjgprYgcECmliNJgxj8ImjuvajgBaJsKrc-fKVcsadn2piO7GbXxN9450y1nbDwNZ35e-YixWKUZuoanjelRQCZLFTaJOSmox0kCPK7L6zx03J00x7Iss9TLzunrMRAh3NXsAI=w783-h588-no&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;right&quot;&gt;講者：楊育誠&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;br&gt;這次的分享和之前有個很大的不同，就是製作團隊從工作室至公司，所以在企劃、創作與行銷方面有著不同的格局，也論及到較多實務上及行銷上的策略，可以說是更貼近遊戲產業的現實面吧～&lt;/p&gt;
    
    </summary>
    
      <category term="遊戲設計" scheme="http://zake7749.github.io/categories/%E9%81%8A%E6%88%B2%E8%A8%AD%E8%A8%88/"/>
    
    
      <category term="演講摘記" scheme="http://zake7749.github.io/tags/%E6%BC%94%E8%AC%9B%E6%91%98%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>雨港基隆的製作與誕生</title>
    <link href="http://zake7749.github.io/2014/10/13/gamedesignConferenceB/"/>
    <id>http://zake7749.github.io/2014/10/13/gamedesignConferenceB/</id>
    <published>2014-10-13T11:46:14.000Z</published>
    <updated>2015-12-14T13:50:23.160Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/nD8xL1ECp1anexM2mEBOq-3gvjNNUa7xK8tgAmHc5oE=s690-no&quot; alt=&quot;雨港基隆&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:right;&quot;&gt;講者:Erotes Studio 李處守總召&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;&lt;strike&gt;喔喔喔喔喔是TRPG的講座&lt;/strike&gt;，自從看了&lt;a href=&quot;https://www.youtube.com/watch?v=vDOu-svb3Uw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ゆっくり妖夢と本当はこわいクトゥルフ神話&lt;/a&gt;，就一直對這個領域很感興趣，想不到Erotes Studio是從桌遊中成立的，讓我想到Sitcon當初也是為了在買消夜時有團揪，不少社群形成的原因實在是很微妙呢。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Erotes的團隊跟上次一樣都是蠻輕巧的，而且因為成員四散各洲，所以作業都是雲端進行，沒有特定的工作室，這就是我嚮往的工作環境呀~ 不過這也衍生了ㄧ些後續提到的小問題，順帶一提，講師觸手（無誤）是團隊的總召。&lt;/p&gt;
&lt;p&gt;談談遊戲的背景，就算沒聽過雨港基隆，也該看過&lt;a href=&quot;https://www.ptt.cc/bbs/C_Chat/M.1409398748.A.D67.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;鼎鼎大名李元德&lt;/a&gt;吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-NvlpnVztAPw/VEJfN-qnN_I/AAAAAAAAAIs/y83Ddq4JSfE/s1600/%E6%9D%8E%E5%85%83%E5%BE%B7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下來絕對沒有劇透了，回歸正題，遊戲的背景設定在２２８時期，嗯……看起來就像是會被查水表的東西。文本與CG一直都是AVG相當重要的部分，為了追求背景的一致性，觸手在前期企劃時還特別去圖書館、國民黨黨史館借資料，訪問當時的受難者等等。&lt;/p&gt;
&lt;p&gt;既然提到了前期企劃，就先從這部分說起吧~這部分包括了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;開發預算&lt;ul&gt;
&lt;li&gt;避免無止盡的錢坑，評估是否能回本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;設計核心&lt;ul&gt;
&lt;li&gt;Why、How、What&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;瞄準客群&lt;ul&gt;
&lt;li&gt;這同時影響了收費管道與遊戲路線&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;企劃書&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先聊聊企劃書與簽約，這之前似乎都沒提到，不過這在獨立遊戲中是相當重要的一環。&lt;/p&gt;
&lt;p&gt;想要跟別人做合作，你總是得要有個拿的出手的東西。特別是在你沒什麼名氣的時候，想要找到比較強的人才，或者希望壓低價格、請人幫忙推廣，企劃書就是必備的，因為這一定程度的避免了玩票性質，傳達給外界「我們有在做事，而且我們很清楚自己要做的是什麼」。那麼企劃書該有什麼，從雨港基隆來看，就是粗估劇情大綱、未來走向、ＣＧ與立繪的量，如果能擬定好這些，對團隊也相當有幫助，至少很清楚進度條在哪。&lt;/p&gt;
&lt;p&gt;再來說說簽約，無論是面對朋友或合作夥伴，簽約都算是必備的，即便是無償幫忙也該簽個約，不然出包時真的會非常痛苦，你會陷入一個良心跟死線之間的兩難。首先，這是對雙方的協調窗口，避免日後分紅時發生爭執。再者簽約確保了對遊戲該有的熱誠，總召要確保的是遊戲完成，總不能編劇寫了一半不幹了，ＣＧ在死線之前跳票，總而言之，簽約其實是對整個團隊的一個保障。&lt;/p&gt;
&lt;p&gt;既然雨港基隆屬於AVG， 不可不談CG的重要性，雖然文本也是很重要的，但是要注意，在還還沒有知名度的時，沒有人會替你的劇本背書，CG自然成為客人首先關注的焦點。而好CG也需要好繪師，觸手談到諮詢繪師不外乎有三點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;對價格要有基本的認知&lt;/li&gt;
&lt;li&gt;不斷的投遞企劃書，不要怕被打槍&lt;/li&gt;
&lt;li&gt;透過各種人脈找&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最後談談分工，首先，就算你是超人，也不要去當超人，如果你要全部自己做，那你何必找人合作，要相信夥伴的力量。其次，在分工的處理要盡量細分，舉例而言，一張CG，就該分為人設/草稿/上色，各部份分別分工，別一個人垂直的做下來，這樣途中一個人卡關會造成整體效率不優。接下來是團隊合作中最危險的，不是崩壞的CG，不是糟糕的文本，而是溝通不良，不論是做什麼，團隊意識都是超超超重要的，我們講求的是溝通要明確，不要太追求委婉而使語焉不詳，&lt;/p&gt;
&lt;p&gt;「編劇編劇，我覺得這個段落要做些小修正會比較好」&lt;br&gt;「OK」&lt;/p&gt;
&lt;p&gt;—– 一個禮拜後 —–&lt;/p&gt;
&lt;p&gt;「欸，上次不是要你改這部份嗎，怎麼還是一樣」&lt;br&gt;「你不是說小修正嗎？」&lt;/p&gt;
&lt;p&gt;大概是這種情境，沒吵起來倒是還好，但是工作進度是一定會拖延了，與其如此，不如一開始就把話說明，這也是之前為何強調同伴不適合找自我意識太強的人，劇情的好壞本就因人而異，需要做的是討論與修改，而居中協調就是總召最重要的任務。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/nD8xL1ECp1anexM2mEBOq-3gvjNNUa7xK8tgAmHc5oE=s690-no&quot; alt=&quot;雨港基隆&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:right;&quot;&gt;講者:Erotes Studio 李處守總召&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;&lt;strike&gt;喔喔喔喔喔是TRPG的講座&lt;/strike&gt;，自從看了&lt;a href=&quot;https://www.youtube.com/watch?v=vDOu-svb3Uw&quot;&gt;ゆっくり妖夢と本当はこわいクトゥルフ神話&lt;/a&gt;，就一直對這個領域很感興趣，想不到Erotes Studio是從桌遊中成立的，讓我想到Sitcon當初也是為了在買消夜時有團揪，不少社群形成的原因實在是很微妙呢。&lt;/p&gt;
    
    </summary>
    
      <category term="遊戲設計" scheme="http://zake7749.github.io/categories/%E9%81%8A%E6%88%B2%E8%A8%AD%E8%A8%88/"/>
    
    
      <category term="演講摘記" scheme="http://zake7749.github.io/tags/%E6%BC%94%E8%AC%9B%E6%91%98%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>聊聊有病遊戲的東南西唄</title>
    <link href="http://zake7749.github.io/2014/10/05/gamedesignConferenceA/"/>
    <id>http://zake7749.github.io/2014/10/05/gamedesignConferenceA/</id>
    <published>2014-10-05T13:09:40.000Z</published>
    <updated>2015-12-14T13:49:00.497Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/DD6XMala7NVinrzyU7ZgtQoBq6VWlRoL8fC8JlPE8eo=w595-h356-no&quot; alt=&quot;我滿懷青春的有病測驗&quot;&gt;&lt;/p&gt;
&lt;p&gt;此為&lt;a href=&quot;https://www.facebook.com/NCKUflamtastworkshop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NCKU遊戲工作坊&lt;/a&gt;的演講紀錄，講者為「我滿懷青春的有病測驗」的作者哈利菠菜，主要內容在探究遊戲的四元素：程式、美術、企劃、行銷。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;關於程式，除了要日常研磨自身的技巧外，最重要的就是要有個原形，不論是不是遊戲設計，在設計途中更改規格都是相當危險的，這不僅將大幅延誤開發進度，更會磨損組員之間的信任關係。對於一個專案的開發，務必要與組員之間先溝通好規格，最好能夠事先繪製出一份圖表，如此途中可能發生的錯誤也能先作出應對。&lt;/p&gt;
&lt;p&gt;談談美術，這次的講題主要是獨立遊戲：我滿懷青春的有病測驗，其實我認為講師的工作團隊蠻特殊的，它是以講師為溝通核心，其他成員彼此不認識，在協調上自是費力些，尤其是美術這部分就費時半年。對於美術的好與壞，其實這是一個相當抽象的概念，所以我們必須要去強調設定的重要性，何謂設定？大至世界觀，區住環境，民俗風情，這些會影響角色的外貌如服飾、膚色、刺青等等，而小則至家庭背景與人物性格，它能表現出人物該有的動作與氣質。而談到如何加強設定的功力，廣泛閱讀與社交是個不錯的方法，它能讓你更了解何為一個角色。&lt;/p&gt;
&lt;p&gt;而關於和美術之間的溝通，就是要清晰，我記得講者提到延宕半年的理由，就是他收到第一任美術的人設圖時，回覆的是「沒有悸動」。價值觀的模糊會影響達成共識的速度，半年後，講師改用一些具體的方法陳述，像是「領口要再下來一公分左右」，「裙子可以再往上提高一點點」，並且就文獻內容來跟美術溝通，效率就快了許多。&lt;/p&gt;
&lt;p&gt;企劃及行銷其實是一體兩面，現在APP的市場已經殺成一片紅海，單一下載量的成本翻倍提升，更必須著重在這個區域。我很認同講師提出的一個黃金圈概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想讓玩家體驗到什麼感受 - Why&lt;/li&gt;
&lt;li&gt;想讓玩家用什麼樣的玩法 - How&lt;/li&gt;
&lt;li&gt;遊戲應該最後長什麼樣子 - What&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們往往從What去著手，比如要設計出一個轉珠遊戲，要設計出一個守城遊戲，這些都是一個遊戲的最終呈現。我們真正該著手的是Why，這個遊戲的核心是什麼？它能為玩家帶來什麼？比如神奇寶貝，通常小孩子都有一個夢想：擁有一隻酷炫的怪獸，神奇寶貝實現了，而且越來越著重在培育出「自己的」神奇寶貝，你可以跟他互動，可以把自己的願望投射進遊戲裡。再比如MineCraft，它的核心在於創作，玩家不必去研究複雜的3D模型，它提供給你模型，讓你隨心發揮，做出來還能發佈給大家觀賞，這也能帶給玩家莫大的成就感。一個遊戲該在乎的是玩家的感受是什麼，而不是一味的塞東西給玩家，跳脫What的思維框架，往往能成就一個更有趣的遊戲，推銷的核心也呼之欲出了，我想在現今的APP市場中，掌握這種思維是相當有利的。&lt;/p&gt;
&lt;p&gt;至於行銷方法我認為也是一個類似的概念，要有推銷的核心。思考兩個問題，什麼遊戲最好玩？什麼遊戲最有病？我想後者帶來的印象會深刻些，雖然這在某部分也會限縮住客群，哈利波菜特別於此有提到一個失誤：其實這個遊戲一開始是瞄準大學生跟OL的，不過主要下載者都來自於中小學生，這在收費策略上出了些問題，因為沒有引入My Card機制，雖然下載量相當高，成本還是不大能回收。其實這讓我蠻訝異的，一個App排行前10，累積下載量近30萬的作品居然不算賺錢，這可能令不少獨立遊戲者望之卻步。&lt;/p&gt;
&lt;p&gt;感謝NCKU遊戲工作坊，感謝哈利菠菜，讓我從&lt;a href=&quot;https://www.youtube.com/watch?v=hD64C5mzbK8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;桃轅傳&lt;/a&gt;看到大學時期也有無限可能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/WUsRxavcEvxAwCO-wWWDv_1JFU8DbD6mODkuG1cSnL0=w365-h230-no&quot; alt=&quot;桃轅傳&quot;&gt;&lt;/p&gt;
&lt;p&gt;兼具劇情、配音、音效、美術，又有遊戲模式，真是相當精采的作品！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/DD6XMala7NVinrzyU7ZgtQoBq6VWlRoL8fC8JlPE8eo=w595-h356-no&quot; alt=&quot;我滿懷青春的有病測驗&quot;&gt;&lt;/p&gt;
&lt;p&gt;此為&lt;a href=&quot;https://www.facebook.com/NCKUflamtastworkshop&quot;&gt;NCKU遊戲工作坊&lt;/a&gt;的演講紀錄，講者為「我滿懷青春的有病測驗」的作者哈利菠菜，主要內容在探究遊戲的四元素：程式、美術、企劃、行銷。&lt;/p&gt;
    
    </summary>
    
      <category term="遊戲設計" scheme="http://zake7749.github.io/categories/%E9%81%8A%E6%88%B2%E8%A8%AD%E8%A8%88/"/>
    
    
      <category term="演講摘記" scheme="http://zake7749.github.io/tags/%E6%BC%94%E8%AC%9B%E6%91%98%E8%A8%98/"/>
    
  </entry>
  
</feed>
